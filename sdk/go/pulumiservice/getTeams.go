// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package pulumiservice

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-pulumiservice/sdk/go/pulumiservice/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get a list of all teams in an organization.
func GetTeams(ctx *pulumi.Context, args *GetTeamsArgs, opts ...pulumi.InvokeOption) (*GetTeamsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetTeamsResult
	err := ctx.Invoke("pulumiservice:index:getTeams", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type GetTeamsArgs struct {
	// The name of the Pulumi organization.
	OrganizationName string `pulumi:"organizationName"`
}

type GetTeamsResult struct {
	// List of teams in the organization.
	Teams []map[string]string `pulumi:"teams"`
}

func GetTeamsOutput(ctx *pulumi.Context, args GetTeamsOutputArgs, opts ...pulumi.InvokeOption) GetTeamsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetTeamsResultOutput, error) {
			args := v.(GetTeamsArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv GetTeamsResult
			secret, err := ctx.InvokePackageRaw("pulumiservice:index:getTeams", args, &rv, "", opts...)
			if err != nil {
				return GetTeamsResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(GetTeamsResultOutput)
			if secret {
				return pulumi.ToSecret(output).(GetTeamsResultOutput), nil
			}
			return output, nil
		}).(GetTeamsResultOutput)
}

type GetTeamsOutputArgs struct {
	// The name of the Pulumi organization.
	OrganizationName pulumi.StringInput `pulumi:"organizationName"`
}

func (GetTeamsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTeamsArgs)(nil)).Elem()
}

type GetTeamsResultOutput struct{ *pulumi.OutputState }

func (GetTeamsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTeamsResult)(nil)).Elem()
}

func (o GetTeamsResultOutput) ToGetTeamsResultOutput() GetTeamsResultOutput {
	return o
}

func (o GetTeamsResultOutput) ToGetTeamsResultOutputWithContext(ctx context.Context) GetTeamsResultOutput {
	return o
}

// List of teams in the organization.
func (o GetTeamsResultOutput) Teams() pulumi.StringMapArrayOutput {
	return o.ApplyT(func(v GetTeamsResult) []map[string]string { return v.Teams }).(pulumi.StringMapArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetTeamsResultOutput{})
}
