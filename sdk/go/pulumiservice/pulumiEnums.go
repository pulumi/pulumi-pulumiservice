// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package pulumiservice

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AuthPolicyDecision string

const (
	// A deny rule for Oidc Issuer Policy.
	AuthPolicyDecisionDeny = AuthPolicyDecision("deny")
	// An allow rule for Oidc Issuer Policy.
	AuthPolicyDecisionAllow = AuthPolicyDecision("allow")
)

func (AuthPolicyDecision) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthPolicyDecision)(nil)).Elem()
}

func (e AuthPolicyDecision) ToAuthPolicyDecisionOutput() AuthPolicyDecisionOutput {
	return pulumi.ToOutput(e).(AuthPolicyDecisionOutput)
}

func (e AuthPolicyDecision) ToAuthPolicyDecisionOutputWithContext(ctx context.Context) AuthPolicyDecisionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AuthPolicyDecisionOutput)
}

func (e AuthPolicyDecision) ToAuthPolicyDecisionPtrOutput() AuthPolicyDecisionPtrOutput {
	return e.ToAuthPolicyDecisionPtrOutputWithContext(context.Background())
}

func (e AuthPolicyDecision) ToAuthPolicyDecisionPtrOutputWithContext(ctx context.Context) AuthPolicyDecisionPtrOutput {
	return AuthPolicyDecision(e).ToAuthPolicyDecisionOutputWithContext(ctx).ToAuthPolicyDecisionPtrOutputWithContext(ctx)
}

func (e AuthPolicyDecision) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AuthPolicyDecision) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AuthPolicyDecision) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AuthPolicyDecision) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AuthPolicyDecisionOutput struct{ *pulumi.OutputState }

func (AuthPolicyDecisionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthPolicyDecision)(nil)).Elem()
}

func (o AuthPolicyDecisionOutput) ToAuthPolicyDecisionOutput() AuthPolicyDecisionOutput {
	return o
}

func (o AuthPolicyDecisionOutput) ToAuthPolicyDecisionOutputWithContext(ctx context.Context) AuthPolicyDecisionOutput {
	return o
}

func (o AuthPolicyDecisionOutput) ToAuthPolicyDecisionPtrOutput() AuthPolicyDecisionPtrOutput {
	return o.ToAuthPolicyDecisionPtrOutputWithContext(context.Background())
}

func (o AuthPolicyDecisionOutput) ToAuthPolicyDecisionPtrOutputWithContext(ctx context.Context) AuthPolicyDecisionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AuthPolicyDecision) *AuthPolicyDecision {
		return &v
	}).(AuthPolicyDecisionPtrOutput)
}

func (o AuthPolicyDecisionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AuthPolicyDecisionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AuthPolicyDecision) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AuthPolicyDecisionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AuthPolicyDecisionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AuthPolicyDecision) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AuthPolicyDecisionPtrOutput struct{ *pulumi.OutputState }

func (AuthPolicyDecisionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthPolicyDecision)(nil)).Elem()
}

func (o AuthPolicyDecisionPtrOutput) ToAuthPolicyDecisionPtrOutput() AuthPolicyDecisionPtrOutput {
	return o
}

func (o AuthPolicyDecisionPtrOutput) ToAuthPolicyDecisionPtrOutputWithContext(ctx context.Context) AuthPolicyDecisionPtrOutput {
	return o
}

func (o AuthPolicyDecisionPtrOutput) Elem() AuthPolicyDecisionOutput {
	return o.ApplyT(func(v *AuthPolicyDecision) AuthPolicyDecision {
		if v != nil {
			return *v
		}
		var ret AuthPolicyDecision
		return ret
	}).(AuthPolicyDecisionOutput)
}

func (o AuthPolicyDecisionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AuthPolicyDecisionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AuthPolicyDecision) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AuthPolicyDecisionInput is an input type that accepts values of the AuthPolicyDecision enum
// A concrete instance of `AuthPolicyDecisionInput` can be one of the following:
//
//	AuthPolicyDecisionDeny
//	AuthPolicyDecisionAllow
type AuthPolicyDecisionInput interface {
	pulumi.Input

	ToAuthPolicyDecisionOutput() AuthPolicyDecisionOutput
	ToAuthPolicyDecisionOutputWithContext(context.Context) AuthPolicyDecisionOutput
}

var authPolicyDecisionPtrType = reflect.TypeOf((**AuthPolicyDecision)(nil)).Elem()

type AuthPolicyDecisionPtrInput interface {
	pulumi.Input

	ToAuthPolicyDecisionPtrOutput() AuthPolicyDecisionPtrOutput
	ToAuthPolicyDecisionPtrOutputWithContext(context.Context) AuthPolicyDecisionPtrOutput
}

type authPolicyDecisionPtr string

func AuthPolicyDecisionPtr(v string) AuthPolicyDecisionPtrInput {
	return (*authPolicyDecisionPtr)(&v)
}

func (*authPolicyDecisionPtr) ElementType() reflect.Type {
	return authPolicyDecisionPtrType
}

func (in *authPolicyDecisionPtr) ToAuthPolicyDecisionPtrOutput() AuthPolicyDecisionPtrOutput {
	return pulumi.ToOutput(in).(AuthPolicyDecisionPtrOutput)
}

func (in *authPolicyDecisionPtr) ToAuthPolicyDecisionPtrOutputWithContext(ctx context.Context) AuthPolicyDecisionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AuthPolicyDecisionPtrOutput)
}

type AuthPolicyPermissionLevel string

const (
	// Standard level of permissions.
	AuthPolicyPermissionLevelStandard = AuthPolicyPermissionLevel("standard")
	// Admin level of permissions.
	AuthPolicyPermissionLevelAdmin = AuthPolicyPermissionLevel("admin")
)

func (AuthPolicyPermissionLevel) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthPolicyPermissionLevel)(nil)).Elem()
}

func (e AuthPolicyPermissionLevel) ToAuthPolicyPermissionLevelOutput() AuthPolicyPermissionLevelOutput {
	return pulumi.ToOutput(e).(AuthPolicyPermissionLevelOutput)
}

func (e AuthPolicyPermissionLevel) ToAuthPolicyPermissionLevelOutputWithContext(ctx context.Context) AuthPolicyPermissionLevelOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AuthPolicyPermissionLevelOutput)
}

func (e AuthPolicyPermissionLevel) ToAuthPolicyPermissionLevelPtrOutput() AuthPolicyPermissionLevelPtrOutput {
	return e.ToAuthPolicyPermissionLevelPtrOutputWithContext(context.Background())
}

func (e AuthPolicyPermissionLevel) ToAuthPolicyPermissionLevelPtrOutputWithContext(ctx context.Context) AuthPolicyPermissionLevelPtrOutput {
	return AuthPolicyPermissionLevel(e).ToAuthPolicyPermissionLevelOutputWithContext(ctx).ToAuthPolicyPermissionLevelPtrOutputWithContext(ctx)
}

func (e AuthPolicyPermissionLevel) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AuthPolicyPermissionLevel) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AuthPolicyPermissionLevel) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AuthPolicyPermissionLevel) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AuthPolicyPermissionLevelOutput struct{ *pulumi.OutputState }

func (AuthPolicyPermissionLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthPolicyPermissionLevel)(nil)).Elem()
}

func (o AuthPolicyPermissionLevelOutput) ToAuthPolicyPermissionLevelOutput() AuthPolicyPermissionLevelOutput {
	return o
}

func (o AuthPolicyPermissionLevelOutput) ToAuthPolicyPermissionLevelOutputWithContext(ctx context.Context) AuthPolicyPermissionLevelOutput {
	return o
}

func (o AuthPolicyPermissionLevelOutput) ToAuthPolicyPermissionLevelPtrOutput() AuthPolicyPermissionLevelPtrOutput {
	return o.ToAuthPolicyPermissionLevelPtrOutputWithContext(context.Background())
}

func (o AuthPolicyPermissionLevelOutput) ToAuthPolicyPermissionLevelPtrOutputWithContext(ctx context.Context) AuthPolicyPermissionLevelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AuthPolicyPermissionLevel) *AuthPolicyPermissionLevel {
		return &v
	}).(AuthPolicyPermissionLevelPtrOutput)
}

func (o AuthPolicyPermissionLevelOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AuthPolicyPermissionLevelOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AuthPolicyPermissionLevel) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AuthPolicyPermissionLevelOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AuthPolicyPermissionLevelOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AuthPolicyPermissionLevel) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AuthPolicyPermissionLevelPtrOutput struct{ *pulumi.OutputState }

func (AuthPolicyPermissionLevelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthPolicyPermissionLevel)(nil)).Elem()
}

func (o AuthPolicyPermissionLevelPtrOutput) ToAuthPolicyPermissionLevelPtrOutput() AuthPolicyPermissionLevelPtrOutput {
	return o
}

func (o AuthPolicyPermissionLevelPtrOutput) ToAuthPolicyPermissionLevelPtrOutputWithContext(ctx context.Context) AuthPolicyPermissionLevelPtrOutput {
	return o
}

func (o AuthPolicyPermissionLevelPtrOutput) Elem() AuthPolicyPermissionLevelOutput {
	return o.ApplyT(func(v *AuthPolicyPermissionLevel) AuthPolicyPermissionLevel {
		if v != nil {
			return *v
		}
		var ret AuthPolicyPermissionLevel
		return ret
	}).(AuthPolicyPermissionLevelOutput)
}

func (o AuthPolicyPermissionLevelPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AuthPolicyPermissionLevelPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AuthPolicyPermissionLevel) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AuthPolicyPermissionLevelInput is an input type that accepts values of the AuthPolicyPermissionLevel enum
// A concrete instance of `AuthPolicyPermissionLevelInput` can be one of the following:
//
//	AuthPolicyPermissionLevelStandard
//	AuthPolicyPermissionLevelAdmin
type AuthPolicyPermissionLevelInput interface {
	pulumi.Input

	ToAuthPolicyPermissionLevelOutput() AuthPolicyPermissionLevelOutput
	ToAuthPolicyPermissionLevelOutputWithContext(context.Context) AuthPolicyPermissionLevelOutput
}

var authPolicyPermissionLevelPtrType = reflect.TypeOf((**AuthPolicyPermissionLevel)(nil)).Elem()

type AuthPolicyPermissionLevelPtrInput interface {
	pulumi.Input

	ToAuthPolicyPermissionLevelPtrOutput() AuthPolicyPermissionLevelPtrOutput
	ToAuthPolicyPermissionLevelPtrOutputWithContext(context.Context) AuthPolicyPermissionLevelPtrOutput
}

type authPolicyPermissionLevelPtr string

func AuthPolicyPermissionLevelPtr(v string) AuthPolicyPermissionLevelPtrInput {
	return (*authPolicyPermissionLevelPtr)(&v)
}

func (*authPolicyPermissionLevelPtr) ElementType() reflect.Type {
	return authPolicyPermissionLevelPtrType
}

func (in *authPolicyPermissionLevelPtr) ToAuthPolicyPermissionLevelPtrOutput() AuthPolicyPermissionLevelPtrOutput {
	return pulumi.ToOutput(in).(AuthPolicyPermissionLevelPtrOutput)
}

func (in *authPolicyPermissionLevelPtr) ToAuthPolicyPermissionLevelPtrOutputWithContext(ctx context.Context) AuthPolicyPermissionLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AuthPolicyPermissionLevelPtrOutput)
}

// AuthPolicyPermissionLevelArrayInput is an input type that accepts AuthPolicyPermissionLevelArray and AuthPolicyPermissionLevelArrayOutput values.
// You can construct a concrete instance of `AuthPolicyPermissionLevelArrayInput` via:
//
//	AuthPolicyPermissionLevelArray{ AuthPolicyPermissionLevelArgs{...} }
type AuthPolicyPermissionLevelArrayInput interface {
	pulumi.Input

	ToAuthPolicyPermissionLevelArrayOutput() AuthPolicyPermissionLevelArrayOutput
	ToAuthPolicyPermissionLevelArrayOutputWithContext(context.Context) AuthPolicyPermissionLevelArrayOutput
}

type AuthPolicyPermissionLevelArray []AuthPolicyPermissionLevel

func (AuthPolicyPermissionLevelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthPolicyPermissionLevel)(nil)).Elem()
}

func (i AuthPolicyPermissionLevelArray) ToAuthPolicyPermissionLevelArrayOutput() AuthPolicyPermissionLevelArrayOutput {
	return i.ToAuthPolicyPermissionLevelArrayOutputWithContext(context.Background())
}

func (i AuthPolicyPermissionLevelArray) ToAuthPolicyPermissionLevelArrayOutputWithContext(ctx context.Context) AuthPolicyPermissionLevelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthPolicyPermissionLevelArrayOutput)
}

type AuthPolicyPermissionLevelArrayOutput struct{ *pulumi.OutputState }

func (AuthPolicyPermissionLevelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthPolicyPermissionLevel)(nil)).Elem()
}

func (o AuthPolicyPermissionLevelArrayOutput) ToAuthPolicyPermissionLevelArrayOutput() AuthPolicyPermissionLevelArrayOutput {
	return o
}

func (o AuthPolicyPermissionLevelArrayOutput) ToAuthPolicyPermissionLevelArrayOutputWithContext(ctx context.Context) AuthPolicyPermissionLevelArrayOutput {
	return o
}

func (o AuthPolicyPermissionLevelArrayOutput) Index(i pulumi.IntInput) AuthPolicyPermissionLevelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AuthPolicyPermissionLevel {
		return vs[0].([]AuthPolicyPermissionLevel)[vs[1].(int)]
	}).(AuthPolicyPermissionLevelOutput)
}

type AuthPolicyTokenType string

const (
	// Personal Pulumi token. Requires userLogin field to be filled.
	AuthPolicyTokenTypePersonal = AuthPolicyTokenType("personal")
	// Team Pulumi token. Requires teamName field to be filled.
	AuthPolicyTokenTypeTeam = AuthPolicyTokenType("team")
	// Organization Pulumi token. Requires authorizedPermissions field to be filled.
	AuthPolicyTokenTypeOrganization = AuthPolicyTokenType("organization")
	// Deployment Runner Pulumi token. Requires runnerID field to be filled.
	AuthPolicyTokenTypeRunner = AuthPolicyTokenType("runner")
)

func (AuthPolicyTokenType) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthPolicyTokenType)(nil)).Elem()
}

func (e AuthPolicyTokenType) ToAuthPolicyTokenTypeOutput() AuthPolicyTokenTypeOutput {
	return pulumi.ToOutput(e).(AuthPolicyTokenTypeOutput)
}

func (e AuthPolicyTokenType) ToAuthPolicyTokenTypeOutputWithContext(ctx context.Context) AuthPolicyTokenTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AuthPolicyTokenTypeOutput)
}

func (e AuthPolicyTokenType) ToAuthPolicyTokenTypePtrOutput() AuthPolicyTokenTypePtrOutput {
	return e.ToAuthPolicyTokenTypePtrOutputWithContext(context.Background())
}

func (e AuthPolicyTokenType) ToAuthPolicyTokenTypePtrOutputWithContext(ctx context.Context) AuthPolicyTokenTypePtrOutput {
	return AuthPolicyTokenType(e).ToAuthPolicyTokenTypeOutputWithContext(ctx).ToAuthPolicyTokenTypePtrOutputWithContext(ctx)
}

func (e AuthPolicyTokenType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AuthPolicyTokenType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AuthPolicyTokenType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AuthPolicyTokenType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AuthPolicyTokenTypeOutput struct{ *pulumi.OutputState }

func (AuthPolicyTokenTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthPolicyTokenType)(nil)).Elem()
}

func (o AuthPolicyTokenTypeOutput) ToAuthPolicyTokenTypeOutput() AuthPolicyTokenTypeOutput {
	return o
}

func (o AuthPolicyTokenTypeOutput) ToAuthPolicyTokenTypeOutputWithContext(ctx context.Context) AuthPolicyTokenTypeOutput {
	return o
}

func (o AuthPolicyTokenTypeOutput) ToAuthPolicyTokenTypePtrOutput() AuthPolicyTokenTypePtrOutput {
	return o.ToAuthPolicyTokenTypePtrOutputWithContext(context.Background())
}

func (o AuthPolicyTokenTypeOutput) ToAuthPolicyTokenTypePtrOutputWithContext(ctx context.Context) AuthPolicyTokenTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AuthPolicyTokenType) *AuthPolicyTokenType {
		return &v
	}).(AuthPolicyTokenTypePtrOutput)
}

func (o AuthPolicyTokenTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AuthPolicyTokenTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AuthPolicyTokenType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AuthPolicyTokenTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AuthPolicyTokenTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AuthPolicyTokenType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AuthPolicyTokenTypePtrOutput struct{ *pulumi.OutputState }

func (AuthPolicyTokenTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthPolicyTokenType)(nil)).Elem()
}

func (o AuthPolicyTokenTypePtrOutput) ToAuthPolicyTokenTypePtrOutput() AuthPolicyTokenTypePtrOutput {
	return o
}

func (o AuthPolicyTokenTypePtrOutput) ToAuthPolicyTokenTypePtrOutputWithContext(ctx context.Context) AuthPolicyTokenTypePtrOutput {
	return o
}

func (o AuthPolicyTokenTypePtrOutput) Elem() AuthPolicyTokenTypeOutput {
	return o.ApplyT(func(v *AuthPolicyTokenType) AuthPolicyTokenType {
		if v != nil {
			return *v
		}
		var ret AuthPolicyTokenType
		return ret
	}).(AuthPolicyTokenTypeOutput)
}

func (o AuthPolicyTokenTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AuthPolicyTokenTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AuthPolicyTokenType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AuthPolicyTokenTypeInput is an input type that accepts values of the AuthPolicyTokenType enum
// A concrete instance of `AuthPolicyTokenTypeInput` can be one of the following:
//
//	AuthPolicyTokenTypePersonal
//	AuthPolicyTokenTypeTeam
//	AuthPolicyTokenTypeOrganization
//	AuthPolicyTokenTypeRunner
type AuthPolicyTokenTypeInput interface {
	pulumi.Input

	ToAuthPolicyTokenTypeOutput() AuthPolicyTokenTypeOutput
	ToAuthPolicyTokenTypeOutputWithContext(context.Context) AuthPolicyTokenTypeOutput
}

var authPolicyTokenTypePtrType = reflect.TypeOf((**AuthPolicyTokenType)(nil)).Elem()

type AuthPolicyTokenTypePtrInput interface {
	pulumi.Input

	ToAuthPolicyTokenTypePtrOutput() AuthPolicyTokenTypePtrOutput
	ToAuthPolicyTokenTypePtrOutputWithContext(context.Context) AuthPolicyTokenTypePtrOutput
}

type authPolicyTokenTypePtr string

func AuthPolicyTokenTypePtr(v string) AuthPolicyTokenTypePtrInput {
	return (*authPolicyTokenTypePtr)(&v)
}

func (*authPolicyTokenTypePtr) ElementType() reflect.Type {
	return authPolicyTokenTypePtrType
}

func (in *authPolicyTokenTypePtr) ToAuthPolicyTokenTypePtrOutput() AuthPolicyTokenTypePtrOutput {
	return pulumi.ToOutput(in).(AuthPolicyTokenTypePtrOutput)
}

func (in *authPolicyTokenTypePtr) ToAuthPolicyTokenTypePtrOutputWithContext(ctx context.Context) AuthPolicyTokenTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AuthPolicyTokenTypePtrOutput)
}

type EnvironmentPermission string

const (
	// No permissions.
	EnvironmentPermissionNone = EnvironmentPermission("none")
	// Permission to read environment definition only.
	EnvironmentPermissionRead = EnvironmentPermission("read")
	// Permission to open and read the environment.
	EnvironmentPermissionOpen = EnvironmentPermission("open")
	// Permission to open, read and update the environment.
	EnvironmentPermissionWrite = EnvironmentPermission("write")
	// Permission for all operations on the environment.
	EnvironmentPermissionAdmin = EnvironmentPermission("admin")
)

func (EnvironmentPermission) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentPermission)(nil)).Elem()
}

func (e EnvironmentPermission) ToEnvironmentPermissionOutput() EnvironmentPermissionOutput {
	return pulumi.ToOutput(e).(EnvironmentPermissionOutput)
}

func (e EnvironmentPermission) ToEnvironmentPermissionOutputWithContext(ctx context.Context) EnvironmentPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EnvironmentPermissionOutput)
}

func (e EnvironmentPermission) ToEnvironmentPermissionPtrOutput() EnvironmentPermissionPtrOutput {
	return e.ToEnvironmentPermissionPtrOutputWithContext(context.Background())
}

func (e EnvironmentPermission) ToEnvironmentPermissionPtrOutputWithContext(ctx context.Context) EnvironmentPermissionPtrOutput {
	return EnvironmentPermission(e).ToEnvironmentPermissionOutputWithContext(ctx).ToEnvironmentPermissionPtrOutputWithContext(ctx)
}

func (e EnvironmentPermission) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EnvironmentPermission) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EnvironmentPermission) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EnvironmentPermission) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EnvironmentPermissionOutput struct{ *pulumi.OutputState }

func (EnvironmentPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentPermission)(nil)).Elem()
}

func (o EnvironmentPermissionOutput) ToEnvironmentPermissionOutput() EnvironmentPermissionOutput {
	return o
}

func (o EnvironmentPermissionOutput) ToEnvironmentPermissionOutputWithContext(ctx context.Context) EnvironmentPermissionOutput {
	return o
}

func (o EnvironmentPermissionOutput) ToEnvironmentPermissionPtrOutput() EnvironmentPermissionPtrOutput {
	return o.ToEnvironmentPermissionPtrOutputWithContext(context.Background())
}

func (o EnvironmentPermissionOutput) ToEnvironmentPermissionPtrOutputWithContext(ctx context.Context) EnvironmentPermissionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EnvironmentPermission) *EnvironmentPermission {
		return &v
	}).(EnvironmentPermissionPtrOutput)
}

func (o EnvironmentPermissionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EnvironmentPermissionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EnvironmentPermission) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EnvironmentPermissionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EnvironmentPermissionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EnvironmentPermission) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EnvironmentPermissionPtrOutput struct{ *pulumi.OutputState }

func (EnvironmentPermissionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentPermission)(nil)).Elem()
}

func (o EnvironmentPermissionPtrOutput) ToEnvironmentPermissionPtrOutput() EnvironmentPermissionPtrOutput {
	return o
}

func (o EnvironmentPermissionPtrOutput) ToEnvironmentPermissionPtrOutputWithContext(ctx context.Context) EnvironmentPermissionPtrOutput {
	return o
}

func (o EnvironmentPermissionPtrOutput) Elem() EnvironmentPermissionOutput {
	return o.ApplyT(func(v *EnvironmentPermission) EnvironmentPermission {
		if v != nil {
			return *v
		}
		var ret EnvironmentPermission
		return ret
	}).(EnvironmentPermissionOutput)
}

func (o EnvironmentPermissionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EnvironmentPermissionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EnvironmentPermission) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EnvironmentPermissionInput is an input type that accepts values of the EnvironmentPermission enum
// A concrete instance of `EnvironmentPermissionInput` can be one of the following:
//
//	EnvironmentPermissionNone
//	EnvironmentPermissionRead
//	EnvironmentPermissionOpen
//	EnvironmentPermissionWrite
//	EnvironmentPermissionAdmin
type EnvironmentPermissionInput interface {
	pulumi.Input

	ToEnvironmentPermissionOutput() EnvironmentPermissionOutput
	ToEnvironmentPermissionOutputWithContext(context.Context) EnvironmentPermissionOutput
}

var environmentPermissionPtrType = reflect.TypeOf((**EnvironmentPermission)(nil)).Elem()

type EnvironmentPermissionPtrInput interface {
	pulumi.Input

	ToEnvironmentPermissionPtrOutput() EnvironmentPermissionPtrOutput
	ToEnvironmentPermissionPtrOutputWithContext(context.Context) EnvironmentPermissionPtrOutput
}

type environmentPermissionPtr string

func EnvironmentPermissionPtr(v string) EnvironmentPermissionPtrInput {
	return (*environmentPermissionPtr)(&v)
}

func (*environmentPermissionPtr) ElementType() reflect.Type {
	return environmentPermissionPtrType
}

func (in *environmentPermissionPtr) ToEnvironmentPermissionPtrOutput() EnvironmentPermissionPtrOutput {
	return pulumi.ToOutput(in).(EnvironmentPermissionPtrOutput)
}

func (in *environmentPermissionPtr) ToEnvironmentPermissionPtrOutputWithContext(ctx context.Context) EnvironmentPermissionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EnvironmentPermissionPtrOutput)
}

type PulumiOperation string

const (
	// Analogous to `pulumi up` command.
	PulumiOperationUpdate = PulumiOperation("update")
	// Analogous to `pulumi preview` command.
	PulumiOperationPreview = PulumiOperation("preview")
	// Analogous to `pulumi refresh` command.
	PulumiOperationRefresh = PulumiOperation("refresh")
	// Analogous to `pulumi destroy` command.
	PulumiOperationDestroy = PulumiOperation("destroy")
)

func (PulumiOperation) ElementType() reflect.Type {
	return reflect.TypeOf((*PulumiOperation)(nil)).Elem()
}

func (e PulumiOperation) ToPulumiOperationOutput() PulumiOperationOutput {
	return pulumi.ToOutput(e).(PulumiOperationOutput)
}

func (e PulumiOperation) ToPulumiOperationOutputWithContext(ctx context.Context) PulumiOperationOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PulumiOperationOutput)
}

func (e PulumiOperation) ToPulumiOperationPtrOutput() PulumiOperationPtrOutput {
	return e.ToPulumiOperationPtrOutputWithContext(context.Background())
}

func (e PulumiOperation) ToPulumiOperationPtrOutputWithContext(ctx context.Context) PulumiOperationPtrOutput {
	return PulumiOperation(e).ToPulumiOperationOutputWithContext(ctx).ToPulumiOperationPtrOutputWithContext(ctx)
}

func (e PulumiOperation) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PulumiOperation) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PulumiOperation) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PulumiOperation) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PulumiOperationOutput struct{ *pulumi.OutputState }

func (PulumiOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PulumiOperation)(nil)).Elem()
}

func (o PulumiOperationOutput) ToPulumiOperationOutput() PulumiOperationOutput {
	return o
}

func (o PulumiOperationOutput) ToPulumiOperationOutputWithContext(ctx context.Context) PulumiOperationOutput {
	return o
}

func (o PulumiOperationOutput) ToPulumiOperationPtrOutput() PulumiOperationPtrOutput {
	return o.ToPulumiOperationPtrOutputWithContext(context.Background())
}

func (o PulumiOperationOutput) ToPulumiOperationPtrOutputWithContext(ctx context.Context) PulumiOperationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PulumiOperation) *PulumiOperation {
		return &v
	}).(PulumiOperationPtrOutput)
}

func (o PulumiOperationOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PulumiOperationOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PulumiOperation) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PulumiOperationOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PulumiOperationOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PulumiOperation) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PulumiOperationPtrOutput struct{ *pulumi.OutputState }

func (PulumiOperationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PulumiOperation)(nil)).Elem()
}

func (o PulumiOperationPtrOutput) ToPulumiOperationPtrOutput() PulumiOperationPtrOutput {
	return o
}

func (o PulumiOperationPtrOutput) ToPulumiOperationPtrOutputWithContext(ctx context.Context) PulumiOperationPtrOutput {
	return o
}

func (o PulumiOperationPtrOutput) Elem() PulumiOperationOutput {
	return o.ApplyT(func(v *PulumiOperation) PulumiOperation {
		if v != nil {
			return *v
		}
		var ret PulumiOperation
		return ret
	}).(PulumiOperationOutput)
}

func (o PulumiOperationPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PulumiOperationPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PulumiOperation) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PulumiOperationInput is an input type that accepts values of the PulumiOperation enum
// A concrete instance of `PulumiOperationInput` can be one of the following:
//
//	PulumiOperationUpdate
//	PulumiOperationPreview
//	PulumiOperationRefresh
//	PulumiOperationDestroy
type PulumiOperationInput interface {
	pulumi.Input

	ToPulumiOperationOutput() PulumiOperationOutput
	ToPulumiOperationOutputWithContext(context.Context) PulumiOperationOutput
}

var pulumiOperationPtrType = reflect.TypeOf((**PulumiOperation)(nil)).Elem()

type PulumiOperationPtrInput interface {
	pulumi.Input

	ToPulumiOperationPtrOutput() PulumiOperationPtrOutput
	ToPulumiOperationPtrOutputWithContext(context.Context) PulumiOperationPtrOutput
}

type pulumiOperationPtr string

func PulumiOperationPtr(v string) PulumiOperationPtrInput {
	return (*pulumiOperationPtr)(&v)
}

func (*pulumiOperationPtr) ElementType() reflect.Type {
	return pulumiOperationPtrType
}

func (in *pulumiOperationPtr) ToPulumiOperationPtrOutput() PulumiOperationPtrOutput {
	return pulumi.ToOutput(in).(PulumiOperationPtrOutput)
}

func (in *pulumiOperationPtr) ToPulumiOperationPtrOutputWithContext(ctx context.Context) PulumiOperationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PulumiOperationPtrOutput)
}

type TeamStackPermissionScope float64

const (
	// Grants read permissions to stack.
	TeamStackPermissionScopeRead = TeamStackPermissionScope(101)
	// Grants edit permissions to stack.
	TeamStackPermissionScopeEdit = TeamStackPermissionScope(102)
	// Grants admin permissions to stack.
	TeamStackPermissionScopeAdmin = TeamStackPermissionScope(103)
)

type WebhookFilters string

const (
	// Trigger a webhook when a stack is created. Only valid for org webhooks.
	WebhookFiltersStackCreated = WebhookFilters("stack_created")
	// Trigger a webhook when a stack is deleted. Only valid for org webhooks.
	WebhookFiltersStackDeleted = WebhookFilters("stack_deleted")
	// Trigger a webhook when a stack update succeeds.
	WebhookFiltersUpdateSucceeded = WebhookFilters("update_succeeded")
	// Trigger a webhook when a stack update fails.
	WebhookFiltersUpdateFailed = WebhookFilters("update_failed")
	// Trigger a webhook when a stack preview succeeds.
	WebhookFiltersPreviewSucceeded = WebhookFilters("preview_succeeded")
	// Trigger a webhook when a stack preview fails.
	WebhookFiltersPreviewFailed = WebhookFilters("preview_failed")
	// Trigger a webhook when a stack destroy succeeds.
	WebhookFiltersDestroySucceeded = WebhookFilters("destroy_succeeded")
	// Trigger a webhook when a stack destroy fails.
	WebhookFiltersDestroyFailed = WebhookFilters("destroy_failed")
	// Trigger a webhook when a stack refresh succeeds.
	WebhookFiltersRefreshSucceeded = WebhookFilters("refresh_succeeded")
	// Trigger a webhook when a stack refresh fails.
	WebhookFiltersRefreshFailed = WebhookFilters("refresh_failed")
	// Trigger a webhook when a deployment is queued.
	WebhookFiltersDeploymentQueued = WebhookFilters("deployment_queued")
	// Trigger a webhook when a deployment starts running.
	WebhookFiltersDeploymentStarted = WebhookFilters("deployment_started")
	// Trigger a webhook when a deployment succeeds.
	WebhookFiltersDeploymentSucceeded = WebhookFilters("deployment_succeeded")
	// Trigger a webhook when a deployment fails.
	WebhookFiltersDeploymentFailed = WebhookFilters("deployment_failed")
	// Trigger a webhook when drift is detected.
	WebhookFiltersDriftDetected = WebhookFilters("drift_detected")
	// Trigger a webhook when a drift detection run succeeds, regardless of whether drift is detected.
	WebhookFiltersDriftDetectionSucceeded = WebhookFilters("drift_detection_succeeded")
	// Trigger a webhook when a drift detection run fails.
	WebhookFiltersDriftDetectionFailed = WebhookFilters("drift_detection_failed")
	// Trigger a webhook when a drift remediation run succeeds.
	WebhookFiltersDriftRemediationSucceeded = WebhookFilters("drift_remediation_succeeded")
	// Trigger a webhook when a drift remediation run fails.
	WebhookFiltersDriftRemediationFailed = WebhookFilters("drift_remediation_failed")
	// Trigger a webhook when a new environment is created.
	WebhookFiltersEnvironmentCreated = WebhookFilters("environment_created")
	// Trigger a webhook when an environment is deleted.
	WebhookFiltersEnvironmentDeleted = WebhookFilters("environment_deleted")
	// Trigger a webhook when a new revision is created on an environment.
	WebhookFiltersEnvironmentRevisionCreated = WebhookFilters("environment_revision_created")
	// Trigger a webhook when a revision is retracted on an environment.
	WebhookFiltersEnvironmentRevisionRetracted = WebhookFilters("environment_revision_retracted")
	// Trigger a webhook when a revision tag is created on an environment.
	WebhookFiltersEnvironmentRevisionTagCreated = WebhookFilters("environment_revision_tag_created")
	// Trigger a webhook when a revision tag is deleted on an environment.
	WebhookFiltersEnvironmentRevisionTagDeleted = WebhookFilters("environment_revision_tag_deleted")
	// Trigger a webhook when a revision tag is updated on an environment.
	WebhookFiltersEnvironmentRevisionTagUpdated = WebhookFilters("environment_revision_tag_updated")
	// Trigger a webhook when an environment tag is created.
	WebhookFiltersEnvironmentTagCreated = WebhookFilters("environment_tag_created")
	// Trigger a webhook when an environment tag is deleted.
	WebhookFiltersEnvironmentTagDeleted = WebhookFilters("environment_tag_deleted")
	// Trigger a webhook when an environment tag is updated.
	WebhookFiltersEnvironmentTagUpdated = WebhookFilters("environment_tag_updated")
	// Trigger a webhook when an imported environment has changed.
	WebhookFiltersImportedEnvironmentChanged = WebhookFilters("imported_environment_changed")
)

func (WebhookFilters) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookFilters)(nil)).Elem()
}

func (e WebhookFilters) ToWebhookFiltersOutput() WebhookFiltersOutput {
	return pulumi.ToOutput(e).(WebhookFiltersOutput)
}

func (e WebhookFilters) ToWebhookFiltersOutputWithContext(ctx context.Context) WebhookFiltersOutput {
	return pulumi.ToOutputWithContext(ctx, e).(WebhookFiltersOutput)
}

func (e WebhookFilters) ToWebhookFiltersPtrOutput() WebhookFiltersPtrOutput {
	return e.ToWebhookFiltersPtrOutputWithContext(context.Background())
}

func (e WebhookFilters) ToWebhookFiltersPtrOutputWithContext(ctx context.Context) WebhookFiltersPtrOutput {
	return WebhookFilters(e).ToWebhookFiltersOutputWithContext(ctx).ToWebhookFiltersPtrOutputWithContext(ctx)
}

func (e WebhookFilters) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e WebhookFilters) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e WebhookFilters) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e WebhookFilters) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type WebhookFiltersOutput struct{ *pulumi.OutputState }

func (WebhookFiltersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookFilters)(nil)).Elem()
}

func (o WebhookFiltersOutput) ToWebhookFiltersOutput() WebhookFiltersOutput {
	return o
}

func (o WebhookFiltersOutput) ToWebhookFiltersOutputWithContext(ctx context.Context) WebhookFiltersOutput {
	return o
}

func (o WebhookFiltersOutput) ToWebhookFiltersPtrOutput() WebhookFiltersPtrOutput {
	return o.ToWebhookFiltersPtrOutputWithContext(context.Background())
}

func (o WebhookFiltersOutput) ToWebhookFiltersPtrOutputWithContext(ctx context.Context) WebhookFiltersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebhookFilters) *WebhookFilters {
		return &v
	}).(WebhookFiltersPtrOutput)
}

func (o WebhookFiltersOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o WebhookFiltersOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WebhookFilters) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o WebhookFiltersOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WebhookFiltersOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WebhookFilters) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type WebhookFiltersPtrOutput struct{ *pulumi.OutputState }

func (WebhookFiltersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebhookFilters)(nil)).Elem()
}

func (o WebhookFiltersPtrOutput) ToWebhookFiltersPtrOutput() WebhookFiltersPtrOutput {
	return o
}

func (o WebhookFiltersPtrOutput) ToWebhookFiltersPtrOutputWithContext(ctx context.Context) WebhookFiltersPtrOutput {
	return o
}

func (o WebhookFiltersPtrOutput) Elem() WebhookFiltersOutput {
	return o.ApplyT(func(v *WebhookFilters) WebhookFilters {
		if v != nil {
			return *v
		}
		var ret WebhookFilters
		return ret
	}).(WebhookFiltersOutput)
}

func (o WebhookFiltersPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WebhookFiltersPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *WebhookFilters) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// WebhookFiltersInput is an input type that accepts values of the WebhookFilters enum
// A concrete instance of `WebhookFiltersInput` can be one of the following:
//
//	WebhookFiltersStackCreated
//	WebhookFiltersStackDeleted
//	WebhookFiltersUpdateSucceeded
//	WebhookFiltersUpdateFailed
//	WebhookFiltersPreviewSucceeded
//	WebhookFiltersPreviewFailed
//	WebhookFiltersDestroySucceeded
//	WebhookFiltersDestroyFailed
//	WebhookFiltersRefreshSucceeded
//	WebhookFiltersRefreshFailed
//	WebhookFiltersDeploymentQueued
//	WebhookFiltersDeploymentStarted
//	WebhookFiltersDeploymentSucceeded
//	WebhookFiltersDeploymentFailed
//	WebhookFiltersDriftDetected
//	WebhookFiltersDriftDetectionSucceeded
//	WebhookFiltersDriftDetectionFailed
//	WebhookFiltersDriftRemediationSucceeded
//	WebhookFiltersDriftRemediationFailed
//	WebhookFiltersEnvironmentCreated
//	WebhookFiltersEnvironmentDeleted
//	WebhookFiltersEnvironmentRevisionCreated
//	WebhookFiltersEnvironmentRevisionRetracted
//	WebhookFiltersEnvironmentRevisionTagCreated
//	WebhookFiltersEnvironmentRevisionTagDeleted
//	WebhookFiltersEnvironmentRevisionTagUpdated
//	WebhookFiltersEnvironmentTagCreated
//	WebhookFiltersEnvironmentTagDeleted
//	WebhookFiltersEnvironmentTagUpdated
//	WebhookFiltersImportedEnvironmentChanged
type WebhookFiltersInput interface {
	pulumi.Input

	ToWebhookFiltersOutput() WebhookFiltersOutput
	ToWebhookFiltersOutputWithContext(context.Context) WebhookFiltersOutput
}

var webhookFiltersPtrType = reflect.TypeOf((**WebhookFilters)(nil)).Elem()

type WebhookFiltersPtrInput interface {
	pulumi.Input

	ToWebhookFiltersPtrOutput() WebhookFiltersPtrOutput
	ToWebhookFiltersPtrOutputWithContext(context.Context) WebhookFiltersPtrOutput
}

type webhookFiltersPtr string

func WebhookFiltersPtr(v string) WebhookFiltersPtrInput {
	return (*webhookFiltersPtr)(&v)
}

func (*webhookFiltersPtr) ElementType() reflect.Type {
	return webhookFiltersPtrType
}

func (in *webhookFiltersPtr) ToWebhookFiltersPtrOutput() WebhookFiltersPtrOutput {
	return pulumi.ToOutput(in).(WebhookFiltersPtrOutput)
}

func (in *webhookFiltersPtr) ToWebhookFiltersPtrOutputWithContext(ctx context.Context) WebhookFiltersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(WebhookFiltersPtrOutput)
}

// WebhookFiltersArrayInput is an input type that accepts WebhookFiltersArray and WebhookFiltersArrayOutput values.
// You can construct a concrete instance of `WebhookFiltersArrayInput` via:
//
//	WebhookFiltersArray{ WebhookFiltersArgs{...} }
type WebhookFiltersArrayInput interface {
	pulumi.Input

	ToWebhookFiltersArrayOutput() WebhookFiltersArrayOutput
	ToWebhookFiltersArrayOutputWithContext(context.Context) WebhookFiltersArrayOutput
}

type WebhookFiltersArray []WebhookFilters

func (WebhookFiltersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebhookFilters)(nil)).Elem()
}

func (i WebhookFiltersArray) ToWebhookFiltersArrayOutput() WebhookFiltersArrayOutput {
	return i.ToWebhookFiltersArrayOutputWithContext(context.Background())
}

func (i WebhookFiltersArray) ToWebhookFiltersArrayOutputWithContext(ctx context.Context) WebhookFiltersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookFiltersArrayOutput)
}

type WebhookFiltersArrayOutput struct{ *pulumi.OutputState }

func (WebhookFiltersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebhookFilters)(nil)).Elem()
}

func (o WebhookFiltersArrayOutput) ToWebhookFiltersArrayOutput() WebhookFiltersArrayOutput {
	return o
}

func (o WebhookFiltersArrayOutput) ToWebhookFiltersArrayOutputWithContext(ctx context.Context) WebhookFiltersArrayOutput {
	return o
}

func (o WebhookFiltersArrayOutput) Index(i pulumi.IntInput) WebhookFiltersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebhookFilters {
		return vs[0].([]WebhookFilters)[vs[1].(int)]
	}).(WebhookFiltersOutput)
}

type WebhookFormat string

const (
	// The default webhook format.
	WebhookFormatRaw = WebhookFormat("raw")
	// Messages formatted for consumption by Slack incoming webhooks.
	WebhookFormatSlack = WebhookFormat("slack")
	// Initiate deployments on a stack from a Pulumi Cloud webhook.
	WebhookFormatPulumiDeployments = WebhookFormat("pulumi_deployments")
	// Messages formatted for consumption by Microsoft Teams incoming webhooks.
	WebhookFormatMicrosoftTeams = WebhookFormat("ms_teams")
)

func (WebhookFormat) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookFormat)(nil)).Elem()
}

func (e WebhookFormat) ToWebhookFormatOutput() WebhookFormatOutput {
	return pulumi.ToOutput(e).(WebhookFormatOutput)
}

func (e WebhookFormat) ToWebhookFormatOutputWithContext(ctx context.Context) WebhookFormatOutput {
	return pulumi.ToOutputWithContext(ctx, e).(WebhookFormatOutput)
}

func (e WebhookFormat) ToWebhookFormatPtrOutput() WebhookFormatPtrOutput {
	return e.ToWebhookFormatPtrOutputWithContext(context.Background())
}

func (e WebhookFormat) ToWebhookFormatPtrOutputWithContext(ctx context.Context) WebhookFormatPtrOutput {
	return WebhookFormat(e).ToWebhookFormatOutputWithContext(ctx).ToWebhookFormatPtrOutputWithContext(ctx)
}

func (e WebhookFormat) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e WebhookFormat) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e WebhookFormat) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e WebhookFormat) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type WebhookFormatOutput struct{ *pulumi.OutputState }

func (WebhookFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookFormat)(nil)).Elem()
}

func (o WebhookFormatOutput) ToWebhookFormatOutput() WebhookFormatOutput {
	return o
}

func (o WebhookFormatOutput) ToWebhookFormatOutputWithContext(ctx context.Context) WebhookFormatOutput {
	return o
}

func (o WebhookFormatOutput) ToWebhookFormatPtrOutput() WebhookFormatPtrOutput {
	return o.ToWebhookFormatPtrOutputWithContext(context.Background())
}

func (o WebhookFormatOutput) ToWebhookFormatPtrOutputWithContext(ctx context.Context) WebhookFormatPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebhookFormat) *WebhookFormat {
		return &v
	}).(WebhookFormatPtrOutput)
}

func (o WebhookFormatOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o WebhookFormatOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WebhookFormat) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o WebhookFormatOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WebhookFormatOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WebhookFormat) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type WebhookFormatPtrOutput struct{ *pulumi.OutputState }

func (WebhookFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebhookFormat)(nil)).Elem()
}

func (o WebhookFormatPtrOutput) ToWebhookFormatPtrOutput() WebhookFormatPtrOutput {
	return o
}

func (o WebhookFormatPtrOutput) ToWebhookFormatPtrOutputWithContext(ctx context.Context) WebhookFormatPtrOutput {
	return o
}

func (o WebhookFormatPtrOutput) Elem() WebhookFormatOutput {
	return o.ApplyT(func(v *WebhookFormat) WebhookFormat {
		if v != nil {
			return *v
		}
		var ret WebhookFormat
		return ret
	}).(WebhookFormatOutput)
}

func (o WebhookFormatPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WebhookFormatPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *WebhookFormat) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// WebhookFormatInput is an input type that accepts values of the WebhookFormat enum
// A concrete instance of `WebhookFormatInput` can be one of the following:
//
//	WebhookFormatRaw
//	WebhookFormatSlack
//	WebhookFormatPulumiDeployments
//	WebhookFormatMicrosoftTeams
type WebhookFormatInput interface {
	pulumi.Input

	ToWebhookFormatOutput() WebhookFormatOutput
	ToWebhookFormatOutputWithContext(context.Context) WebhookFormatOutput
}

var webhookFormatPtrType = reflect.TypeOf((**WebhookFormat)(nil)).Elem()

type WebhookFormatPtrInput interface {
	pulumi.Input

	ToWebhookFormatPtrOutput() WebhookFormatPtrOutput
	ToWebhookFormatPtrOutputWithContext(context.Context) WebhookFormatPtrOutput
}

type webhookFormatPtr string

func WebhookFormatPtr(v string) WebhookFormatPtrInput {
	return (*webhookFormatPtr)(&v)
}

func (*webhookFormatPtr) ElementType() reflect.Type {
	return webhookFormatPtrType
}

func (in *webhookFormatPtr) ToWebhookFormatPtrOutput() WebhookFormatPtrOutput {
	return pulumi.ToOutput(in).(WebhookFormatPtrOutput)
}

func (in *webhookFormatPtr) ToWebhookFormatPtrOutputWithContext(ctx context.Context) WebhookFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(WebhookFormatPtrOutput)
}

type WebhookGroup string

const (
	// A group of webhooks containing all stack events.
	WebhookGroupStacks = WebhookGroup("stacks")
	// A group of webhooks containing all deployment events.
	WebhookGroupDeployments = WebhookGroup("deployments")
	// A group of webhooks containing all environment events.
	WebhookGroupEnvironments = WebhookGroup("environments")
)

func (WebhookGroup) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookGroup)(nil)).Elem()
}

func (e WebhookGroup) ToWebhookGroupOutput() WebhookGroupOutput {
	return pulumi.ToOutput(e).(WebhookGroupOutput)
}

func (e WebhookGroup) ToWebhookGroupOutputWithContext(ctx context.Context) WebhookGroupOutput {
	return pulumi.ToOutputWithContext(ctx, e).(WebhookGroupOutput)
}

func (e WebhookGroup) ToWebhookGroupPtrOutput() WebhookGroupPtrOutput {
	return e.ToWebhookGroupPtrOutputWithContext(context.Background())
}

func (e WebhookGroup) ToWebhookGroupPtrOutputWithContext(ctx context.Context) WebhookGroupPtrOutput {
	return WebhookGroup(e).ToWebhookGroupOutputWithContext(ctx).ToWebhookGroupPtrOutputWithContext(ctx)
}

func (e WebhookGroup) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e WebhookGroup) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e WebhookGroup) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e WebhookGroup) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type WebhookGroupOutput struct{ *pulumi.OutputState }

func (WebhookGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookGroup)(nil)).Elem()
}

func (o WebhookGroupOutput) ToWebhookGroupOutput() WebhookGroupOutput {
	return o
}

func (o WebhookGroupOutput) ToWebhookGroupOutputWithContext(ctx context.Context) WebhookGroupOutput {
	return o
}

func (o WebhookGroupOutput) ToWebhookGroupPtrOutput() WebhookGroupPtrOutput {
	return o.ToWebhookGroupPtrOutputWithContext(context.Background())
}

func (o WebhookGroupOutput) ToWebhookGroupPtrOutputWithContext(ctx context.Context) WebhookGroupPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebhookGroup) *WebhookGroup {
		return &v
	}).(WebhookGroupPtrOutput)
}

func (o WebhookGroupOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o WebhookGroupOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WebhookGroup) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o WebhookGroupOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WebhookGroupOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WebhookGroup) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type WebhookGroupPtrOutput struct{ *pulumi.OutputState }

func (WebhookGroupPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebhookGroup)(nil)).Elem()
}

func (o WebhookGroupPtrOutput) ToWebhookGroupPtrOutput() WebhookGroupPtrOutput {
	return o
}

func (o WebhookGroupPtrOutput) ToWebhookGroupPtrOutputWithContext(ctx context.Context) WebhookGroupPtrOutput {
	return o
}

func (o WebhookGroupPtrOutput) Elem() WebhookGroupOutput {
	return o.ApplyT(func(v *WebhookGroup) WebhookGroup {
		if v != nil {
			return *v
		}
		var ret WebhookGroup
		return ret
	}).(WebhookGroupOutput)
}

func (o WebhookGroupPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WebhookGroupPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *WebhookGroup) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// WebhookGroupInput is an input type that accepts values of the WebhookGroup enum
// A concrete instance of `WebhookGroupInput` can be one of the following:
//
//	WebhookGroupStacks
//	WebhookGroupDeployments
//	WebhookGroupEnvironments
type WebhookGroupInput interface {
	pulumi.Input

	ToWebhookGroupOutput() WebhookGroupOutput
	ToWebhookGroupOutputWithContext(context.Context) WebhookGroupOutput
}

var webhookGroupPtrType = reflect.TypeOf((**WebhookGroup)(nil)).Elem()

type WebhookGroupPtrInput interface {
	pulumi.Input

	ToWebhookGroupPtrOutput() WebhookGroupPtrOutput
	ToWebhookGroupPtrOutputWithContext(context.Context) WebhookGroupPtrOutput
}

type webhookGroupPtr string

func WebhookGroupPtr(v string) WebhookGroupPtrInput {
	return (*webhookGroupPtr)(&v)
}

func (*webhookGroupPtr) ElementType() reflect.Type {
	return webhookGroupPtrType
}

func (in *webhookGroupPtr) ToWebhookGroupPtrOutput() WebhookGroupPtrOutput {
	return pulumi.ToOutput(in).(WebhookGroupPtrOutput)
}

func (in *webhookGroupPtr) ToWebhookGroupPtrOutputWithContext(ctx context.Context) WebhookGroupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(WebhookGroupPtrOutput)
}

// WebhookGroupArrayInput is an input type that accepts WebhookGroupArray and WebhookGroupArrayOutput values.
// You can construct a concrete instance of `WebhookGroupArrayInput` via:
//
//	WebhookGroupArray{ WebhookGroupArgs{...} }
type WebhookGroupArrayInput interface {
	pulumi.Input

	ToWebhookGroupArrayOutput() WebhookGroupArrayOutput
	ToWebhookGroupArrayOutputWithContext(context.Context) WebhookGroupArrayOutput
}

type WebhookGroupArray []WebhookGroup

func (WebhookGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebhookGroup)(nil)).Elem()
}

func (i WebhookGroupArray) ToWebhookGroupArrayOutput() WebhookGroupArrayOutput {
	return i.ToWebhookGroupArrayOutputWithContext(context.Background())
}

func (i WebhookGroupArray) ToWebhookGroupArrayOutputWithContext(ctx context.Context) WebhookGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookGroupArrayOutput)
}

type WebhookGroupArrayOutput struct{ *pulumi.OutputState }

func (WebhookGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebhookGroup)(nil)).Elem()
}

func (o WebhookGroupArrayOutput) ToWebhookGroupArrayOutput() WebhookGroupArrayOutput {
	return o
}

func (o WebhookGroupArrayOutput) ToWebhookGroupArrayOutputWithContext(ctx context.Context) WebhookGroupArrayOutput {
	return o
}

func (o WebhookGroupArrayOutput) Index(i pulumi.IntInput) WebhookGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebhookGroup {
		return vs[0].([]WebhookGroup)[vs[1].(int)]
	}).(WebhookGroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AuthPolicyDecisionInput)(nil)).Elem(), AuthPolicyDecision("deny"))
	pulumi.RegisterInputType(reflect.TypeOf((*AuthPolicyDecisionPtrInput)(nil)).Elem(), AuthPolicyDecision("deny"))
	pulumi.RegisterInputType(reflect.TypeOf((*AuthPolicyPermissionLevelInput)(nil)).Elem(), AuthPolicyPermissionLevel("standard"))
	pulumi.RegisterInputType(reflect.TypeOf((*AuthPolicyPermissionLevelPtrInput)(nil)).Elem(), AuthPolicyPermissionLevel("standard"))
	pulumi.RegisterInputType(reflect.TypeOf((*AuthPolicyPermissionLevelArrayInput)(nil)).Elem(), AuthPolicyPermissionLevelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthPolicyTokenTypeInput)(nil)).Elem(), AuthPolicyTokenType("personal"))
	pulumi.RegisterInputType(reflect.TypeOf((*AuthPolicyTokenTypePtrInput)(nil)).Elem(), AuthPolicyTokenType("personal"))
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentPermissionInput)(nil)).Elem(), EnvironmentPermission("none"))
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentPermissionPtrInput)(nil)).Elem(), EnvironmentPermission("none"))
	pulumi.RegisterInputType(reflect.TypeOf((*PulumiOperationInput)(nil)).Elem(), PulumiOperation("update"))
	pulumi.RegisterInputType(reflect.TypeOf((*PulumiOperationPtrInput)(nil)).Elem(), PulumiOperation("update"))
	pulumi.RegisterInputType(reflect.TypeOf((*WebhookFiltersInput)(nil)).Elem(), WebhookFilters("stack_created"))
	pulumi.RegisterInputType(reflect.TypeOf((*WebhookFiltersPtrInput)(nil)).Elem(), WebhookFilters("stack_created"))
	pulumi.RegisterInputType(reflect.TypeOf((*WebhookFiltersArrayInput)(nil)).Elem(), WebhookFiltersArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebhookFormatInput)(nil)).Elem(), WebhookFormat("raw"))
	pulumi.RegisterInputType(reflect.TypeOf((*WebhookFormatPtrInput)(nil)).Elem(), WebhookFormat("raw"))
	pulumi.RegisterInputType(reflect.TypeOf((*WebhookGroupInput)(nil)).Elem(), WebhookGroup("stacks"))
	pulumi.RegisterInputType(reflect.TypeOf((*WebhookGroupPtrInput)(nil)).Elem(), WebhookGroup("stacks"))
	pulumi.RegisterInputType(reflect.TypeOf((*WebhookGroupArrayInput)(nil)).Elem(), WebhookGroupArray{})
	pulumi.RegisterOutputType(AuthPolicyDecisionOutput{})
	pulumi.RegisterOutputType(AuthPolicyDecisionPtrOutput{})
	pulumi.RegisterOutputType(AuthPolicyPermissionLevelOutput{})
	pulumi.RegisterOutputType(AuthPolicyPermissionLevelPtrOutput{})
	pulumi.RegisterOutputType(AuthPolicyPermissionLevelArrayOutput{})
	pulumi.RegisterOutputType(AuthPolicyTokenTypeOutput{})
	pulumi.RegisterOutputType(AuthPolicyTokenTypePtrOutput{})
	pulumi.RegisterOutputType(EnvironmentPermissionOutput{})
	pulumi.RegisterOutputType(EnvironmentPermissionPtrOutput{})
	pulumi.RegisterOutputType(PulumiOperationOutput{})
	pulumi.RegisterOutputType(PulumiOperationPtrOutput{})
	pulumi.RegisterOutputType(WebhookFiltersOutput{})
	pulumi.RegisterOutputType(WebhookFiltersPtrOutput{})
	pulumi.RegisterOutputType(WebhookFiltersArrayOutput{})
	pulumi.RegisterOutputType(WebhookFormatOutput{})
	pulumi.RegisterOutputType(WebhookFormatPtrOutput{})
	pulumi.RegisterOutputType(WebhookGroupOutput{})
	pulumi.RegisterOutputType(WebhookGroupPtrOutput{})
	pulumi.RegisterOutputType(WebhookGroupArrayOutput{})
}
