// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package pulumiservice

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-pulumiservice/sdk/go/pulumiservice/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Insights Account for cloud resource scanning and analysis
type InsightsAccount struct {
	pulumi.CustomResourceState

	// The name of the insights account.
	AccountName pulumi.StringOutput `pulumi:"accountName"`
	// Optional cron expression for scheduled scanning.
	Cron pulumi.StringPtrOutput `pulumi:"cron"`
	// The ESC environment used for provider credentials.
	Environment pulumi.StringOutput `pulumi:"environment"`
	// The insights account identifier.
	InsightsAccountId pulumi.StringOutput `pulumi:"insightsAccountId"`
	// The organization's name.
	OrganizationName pulumi.StringOutput `pulumi:"organizationName"`
	// The cloud provider (e.g., 'aws', 'azure', 'gcp').
	Provider pulumi.StringOutput `pulumi:"provider"`
	// Provider-specific configuration as a JSON object.
	ProviderConfig pulumi.AnyOutput `pulumi:"providerConfig"`
	// The provider version used for scanning.
	ProviderVersion pulumi.StringPtrOutput `pulumi:"providerVersion"`
	// Whether scheduled scanning is enabled.
	ScheduledScanEnabled pulumi.BoolOutput `pulumi:"scheduledScanEnabled"`
}

// NewInsightsAccount registers a new resource with the given unique name, arguments, and options.
func NewInsightsAccount(ctx *pulumi.Context,
	name string, args *InsightsAccountArgs, opts ...pulumi.ResourceOption) (*InsightsAccount, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountName == nil {
		return nil, errors.New("invalid value for required argument 'AccountName'")
	}
	if args.Environment == nil {
		return nil, errors.New("invalid value for required argument 'Environment'")
	}
	if args.OrganizationName == nil {
		return nil, errors.New("invalid value for required argument 'OrganizationName'")
	}
	if args.Provider == nil {
		return nil, errors.New("invalid value for required argument 'Provider'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource InsightsAccount
	err := ctx.RegisterResource("pulumiservice:index:InsightsAccount", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInsightsAccount gets an existing InsightsAccount resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInsightsAccount(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InsightsAccountState, opts ...pulumi.ResourceOption) (*InsightsAccount, error) {
	var resource InsightsAccount
	err := ctx.ReadResource("pulumiservice:index:InsightsAccount", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering InsightsAccount resources.
type insightsAccountState struct {
}

type InsightsAccountState struct {
}

func (InsightsAccountState) ElementType() reflect.Type {
	return reflect.TypeOf((*insightsAccountState)(nil)).Elem()
}

type insightsAccountArgs struct {
	// Name of the insights account.
	AccountName string `pulumi:"accountName"`
	// Optional cron expression for scheduled scanning.
	Cron *string `pulumi:"cron"`
	// The ESC environment used for provider credentials.
	Environment string `pulumi:"environment"`
	// The organization's name.
	OrganizationName string `pulumi:"organizationName"`
	// The cloud provider (e.g., 'aws', 'azure', 'gcp').
	Provider string `pulumi:"provider"`
	// Provider-specific configuration as a JSON object.
	ProviderConfig interface{} `pulumi:"providerConfig"`
}

// The set of arguments for constructing a InsightsAccount resource.
type InsightsAccountArgs struct {
	// Name of the insights account.
	AccountName pulumi.StringInput
	// Optional cron expression for scheduled scanning.
	Cron pulumi.StringPtrInput
	// The ESC environment used for provider credentials.
	Environment pulumi.StringInput
	// The organization's name.
	OrganizationName pulumi.StringInput
	// The cloud provider (e.g., 'aws', 'azure', 'gcp').
	Provider pulumi.StringInput
	// Provider-specific configuration as a JSON object.
	ProviderConfig pulumi.Input
}

func (InsightsAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*insightsAccountArgs)(nil)).Elem()
}

type InsightsAccountInput interface {
	pulumi.Input

	ToInsightsAccountOutput() InsightsAccountOutput
	ToInsightsAccountOutputWithContext(ctx context.Context) InsightsAccountOutput
}

func (*InsightsAccount) ElementType() reflect.Type {
	return reflect.TypeOf((**InsightsAccount)(nil)).Elem()
}

func (i *InsightsAccount) ToInsightsAccountOutput() InsightsAccountOutput {
	return i.ToInsightsAccountOutputWithContext(context.Background())
}

func (i *InsightsAccount) ToInsightsAccountOutputWithContext(ctx context.Context) InsightsAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InsightsAccountOutput)
}

// InsightsAccountArrayInput is an input type that accepts InsightsAccountArray and InsightsAccountArrayOutput values.
// You can construct a concrete instance of `InsightsAccountArrayInput` via:
//
//	InsightsAccountArray{ InsightsAccountArgs{...} }
type InsightsAccountArrayInput interface {
	pulumi.Input

	ToInsightsAccountArrayOutput() InsightsAccountArrayOutput
	ToInsightsAccountArrayOutputWithContext(context.Context) InsightsAccountArrayOutput
}

type InsightsAccountArray []InsightsAccountInput

func (InsightsAccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*InsightsAccount)(nil)).Elem()
}

func (i InsightsAccountArray) ToInsightsAccountArrayOutput() InsightsAccountArrayOutput {
	return i.ToInsightsAccountArrayOutputWithContext(context.Background())
}

func (i InsightsAccountArray) ToInsightsAccountArrayOutputWithContext(ctx context.Context) InsightsAccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InsightsAccountArrayOutput)
}

// InsightsAccountMapInput is an input type that accepts InsightsAccountMap and InsightsAccountMapOutput values.
// You can construct a concrete instance of `InsightsAccountMapInput` via:
//
//	InsightsAccountMap{ "key": InsightsAccountArgs{...} }
type InsightsAccountMapInput interface {
	pulumi.Input

	ToInsightsAccountMapOutput() InsightsAccountMapOutput
	ToInsightsAccountMapOutputWithContext(context.Context) InsightsAccountMapOutput
}

type InsightsAccountMap map[string]InsightsAccountInput

func (InsightsAccountMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*InsightsAccount)(nil)).Elem()
}

func (i InsightsAccountMap) ToInsightsAccountMapOutput() InsightsAccountMapOutput {
	return i.ToInsightsAccountMapOutputWithContext(context.Background())
}

func (i InsightsAccountMap) ToInsightsAccountMapOutputWithContext(ctx context.Context) InsightsAccountMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InsightsAccountMapOutput)
}

type InsightsAccountOutput struct{ *pulumi.OutputState }

func (InsightsAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InsightsAccount)(nil)).Elem()
}

func (o InsightsAccountOutput) ToInsightsAccountOutput() InsightsAccountOutput {
	return o
}

func (o InsightsAccountOutput) ToInsightsAccountOutputWithContext(ctx context.Context) InsightsAccountOutput {
	return o
}

// The name of the insights account.
func (o InsightsAccountOutput) AccountName() pulumi.StringOutput {
	return o.ApplyT(func(v *InsightsAccount) pulumi.StringOutput { return v.AccountName }).(pulumi.StringOutput)
}

// Optional cron expression for scheduled scanning.
func (o InsightsAccountOutput) Cron() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InsightsAccount) pulumi.StringPtrOutput { return v.Cron }).(pulumi.StringPtrOutput)
}

// The ESC environment used for provider credentials.
func (o InsightsAccountOutput) Environment() pulumi.StringOutput {
	return o.ApplyT(func(v *InsightsAccount) pulumi.StringOutput { return v.Environment }).(pulumi.StringOutput)
}

// The insights account identifier.
func (o InsightsAccountOutput) InsightsAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *InsightsAccount) pulumi.StringOutput { return v.InsightsAccountId }).(pulumi.StringOutput)
}

// The organization's name.
func (o InsightsAccountOutput) OrganizationName() pulumi.StringOutput {
	return o.ApplyT(func(v *InsightsAccount) pulumi.StringOutput { return v.OrganizationName }).(pulumi.StringOutput)
}

// The cloud provider (e.g., 'aws', 'azure', 'gcp').
func (o InsightsAccountOutput) Provider() pulumi.StringOutput {
	return o.ApplyT(func(v *InsightsAccount) pulumi.StringOutput { return v.Provider }).(pulumi.StringOutput)
}

// Provider-specific configuration as a JSON object.
func (o InsightsAccountOutput) ProviderConfig() pulumi.AnyOutput {
	return o.ApplyT(func(v *InsightsAccount) pulumi.AnyOutput { return v.ProviderConfig }).(pulumi.AnyOutput)
}

// The provider version used for scanning.
func (o InsightsAccountOutput) ProviderVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InsightsAccount) pulumi.StringPtrOutput { return v.ProviderVersion }).(pulumi.StringPtrOutput)
}

// Whether scheduled scanning is enabled.
func (o InsightsAccountOutput) ScheduledScanEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *InsightsAccount) pulumi.BoolOutput { return v.ScheduledScanEnabled }).(pulumi.BoolOutput)
}

type InsightsAccountArrayOutput struct{ *pulumi.OutputState }

func (InsightsAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*InsightsAccount)(nil)).Elem()
}

func (o InsightsAccountArrayOutput) ToInsightsAccountArrayOutput() InsightsAccountArrayOutput {
	return o
}

func (o InsightsAccountArrayOutput) ToInsightsAccountArrayOutputWithContext(ctx context.Context) InsightsAccountArrayOutput {
	return o
}

func (o InsightsAccountArrayOutput) Index(i pulumi.IntInput) InsightsAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *InsightsAccount {
		return vs[0].([]*InsightsAccount)[vs[1].(int)]
	}).(InsightsAccountOutput)
}

type InsightsAccountMapOutput struct{ *pulumi.OutputState }

func (InsightsAccountMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*InsightsAccount)(nil)).Elem()
}

func (o InsightsAccountMapOutput) ToInsightsAccountMapOutput() InsightsAccountMapOutput {
	return o
}

func (o InsightsAccountMapOutput) ToInsightsAccountMapOutputWithContext(ctx context.Context) InsightsAccountMapOutput {
	return o
}

func (o InsightsAccountMapOutput) MapIndex(k pulumi.StringInput) InsightsAccountOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *InsightsAccount {
		return vs[0].(map[string]*InsightsAccount)[vs[1].(string)]
	}).(InsightsAccountOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InsightsAccountInput)(nil)).Elem(), &InsightsAccount{})
	pulumi.RegisterInputType(reflect.TypeOf((*InsightsAccountArrayInput)(nil)).Elem(), InsightsAccountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InsightsAccountMapInput)(nil)).Elem(), InsightsAccountMap{})
	pulumi.RegisterOutputType(InsightsAccountOutput{})
	pulumi.RegisterOutputType(InsightsAccountArrayOutput{})
	pulumi.RegisterOutputType(InsightsAccountMapOutput{})
}
