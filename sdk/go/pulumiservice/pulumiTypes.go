// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package pulumiservice

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-pulumiservice/sdk/go/pulumiservice/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type AWSOIDCConfiguration struct {
	// Duration of the assume-role session in “XhYmZs” format
	Duration *string `pulumi:"duration"`
	// Optional set of IAM policy ARNs that further restrict the assume-role session
	PolicyARNs []string `pulumi:"policyARNs"`
	// The ARN of the role to assume using the OIDC token.
	RoleARN string `pulumi:"roleARN"`
	// The name of the assume-role session.
	SessionName string `pulumi:"sessionName"`
}

// AWSOIDCConfigurationInput is an input type that accepts AWSOIDCConfigurationArgs and AWSOIDCConfigurationOutput values.
// You can construct a concrete instance of `AWSOIDCConfigurationInput` via:
//
//	AWSOIDCConfigurationArgs{...}
type AWSOIDCConfigurationInput interface {
	pulumi.Input

	ToAWSOIDCConfigurationOutput() AWSOIDCConfigurationOutput
	ToAWSOIDCConfigurationOutputWithContext(context.Context) AWSOIDCConfigurationOutput
}

type AWSOIDCConfigurationArgs struct {
	// Duration of the assume-role session in “XhYmZs” format
	Duration pulumi.StringPtrInput `pulumi:"duration"`
	// Optional set of IAM policy ARNs that further restrict the assume-role session
	PolicyARNs pulumi.StringArrayInput `pulumi:"policyARNs"`
	// The ARN of the role to assume using the OIDC token.
	RoleARN pulumi.StringInput `pulumi:"roleARN"`
	// The name of the assume-role session.
	SessionName pulumi.StringInput `pulumi:"sessionName"`
}

func (AWSOIDCConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AWSOIDCConfiguration)(nil)).Elem()
}

func (i AWSOIDCConfigurationArgs) ToAWSOIDCConfigurationOutput() AWSOIDCConfigurationOutput {
	return i.ToAWSOIDCConfigurationOutputWithContext(context.Background())
}

func (i AWSOIDCConfigurationArgs) ToAWSOIDCConfigurationOutputWithContext(ctx context.Context) AWSOIDCConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AWSOIDCConfigurationOutput)
}

func (i AWSOIDCConfigurationArgs) ToAWSOIDCConfigurationPtrOutput() AWSOIDCConfigurationPtrOutput {
	return i.ToAWSOIDCConfigurationPtrOutputWithContext(context.Background())
}

func (i AWSOIDCConfigurationArgs) ToAWSOIDCConfigurationPtrOutputWithContext(ctx context.Context) AWSOIDCConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AWSOIDCConfigurationOutput).ToAWSOIDCConfigurationPtrOutputWithContext(ctx)
}

// AWSOIDCConfigurationPtrInput is an input type that accepts AWSOIDCConfigurationArgs, AWSOIDCConfigurationPtr and AWSOIDCConfigurationPtrOutput values.
// You can construct a concrete instance of `AWSOIDCConfigurationPtrInput` via:
//
//	        AWSOIDCConfigurationArgs{...}
//
//	or:
//
//	        nil
type AWSOIDCConfigurationPtrInput interface {
	pulumi.Input

	ToAWSOIDCConfigurationPtrOutput() AWSOIDCConfigurationPtrOutput
	ToAWSOIDCConfigurationPtrOutputWithContext(context.Context) AWSOIDCConfigurationPtrOutput
}

type awsoidcconfigurationPtrType AWSOIDCConfigurationArgs

func AWSOIDCConfigurationPtr(v *AWSOIDCConfigurationArgs) AWSOIDCConfigurationPtrInput {
	return (*awsoidcconfigurationPtrType)(v)
}

func (*awsoidcconfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AWSOIDCConfiguration)(nil)).Elem()
}

func (i *awsoidcconfigurationPtrType) ToAWSOIDCConfigurationPtrOutput() AWSOIDCConfigurationPtrOutput {
	return i.ToAWSOIDCConfigurationPtrOutputWithContext(context.Background())
}

func (i *awsoidcconfigurationPtrType) ToAWSOIDCConfigurationPtrOutputWithContext(ctx context.Context) AWSOIDCConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AWSOIDCConfigurationPtrOutput)
}

type AWSOIDCConfigurationOutput struct{ *pulumi.OutputState }

func (AWSOIDCConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AWSOIDCConfiguration)(nil)).Elem()
}

func (o AWSOIDCConfigurationOutput) ToAWSOIDCConfigurationOutput() AWSOIDCConfigurationOutput {
	return o
}

func (o AWSOIDCConfigurationOutput) ToAWSOIDCConfigurationOutputWithContext(ctx context.Context) AWSOIDCConfigurationOutput {
	return o
}

func (o AWSOIDCConfigurationOutput) ToAWSOIDCConfigurationPtrOutput() AWSOIDCConfigurationPtrOutput {
	return o.ToAWSOIDCConfigurationPtrOutputWithContext(context.Background())
}

func (o AWSOIDCConfigurationOutput) ToAWSOIDCConfigurationPtrOutputWithContext(ctx context.Context) AWSOIDCConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AWSOIDCConfiguration) *AWSOIDCConfiguration {
		return &v
	}).(AWSOIDCConfigurationPtrOutput)
}

// Duration of the assume-role session in “XhYmZs” format
func (o AWSOIDCConfigurationOutput) Duration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AWSOIDCConfiguration) *string { return v.Duration }).(pulumi.StringPtrOutput)
}

// Optional set of IAM policy ARNs that further restrict the assume-role session
func (o AWSOIDCConfigurationOutput) PolicyARNs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AWSOIDCConfiguration) []string { return v.PolicyARNs }).(pulumi.StringArrayOutput)
}

// The ARN of the role to assume using the OIDC token.
func (o AWSOIDCConfigurationOutput) RoleARN() pulumi.StringOutput {
	return o.ApplyT(func(v AWSOIDCConfiguration) string { return v.RoleARN }).(pulumi.StringOutput)
}

// The name of the assume-role session.
func (o AWSOIDCConfigurationOutput) SessionName() pulumi.StringOutput {
	return o.ApplyT(func(v AWSOIDCConfiguration) string { return v.SessionName }).(pulumi.StringOutput)
}

type AWSOIDCConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AWSOIDCConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AWSOIDCConfiguration)(nil)).Elem()
}

func (o AWSOIDCConfigurationPtrOutput) ToAWSOIDCConfigurationPtrOutput() AWSOIDCConfigurationPtrOutput {
	return o
}

func (o AWSOIDCConfigurationPtrOutput) ToAWSOIDCConfigurationPtrOutputWithContext(ctx context.Context) AWSOIDCConfigurationPtrOutput {
	return o
}

func (o AWSOIDCConfigurationPtrOutput) Elem() AWSOIDCConfigurationOutput {
	return o.ApplyT(func(v *AWSOIDCConfiguration) AWSOIDCConfiguration {
		if v != nil {
			return *v
		}
		var ret AWSOIDCConfiguration
		return ret
	}).(AWSOIDCConfigurationOutput)
}

// Duration of the assume-role session in “XhYmZs” format
func (o AWSOIDCConfigurationPtrOutput) Duration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AWSOIDCConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Duration
	}).(pulumi.StringPtrOutput)
}

// Optional set of IAM policy ARNs that further restrict the assume-role session
func (o AWSOIDCConfigurationPtrOutput) PolicyARNs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AWSOIDCConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.PolicyARNs
	}).(pulumi.StringArrayOutput)
}

// The ARN of the role to assume using the OIDC token.
func (o AWSOIDCConfigurationPtrOutput) RoleARN() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AWSOIDCConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.RoleARN
	}).(pulumi.StringPtrOutput)
}

// The name of the assume-role session.
func (o AWSOIDCConfigurationPtrOutput) SessionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AWSOIDCConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.SessionName
	}).(pulumi.StringPtrOutput)
}

type ApprovalRuleConfig struct {
	// Whether self-approval is allowed.
	AllowSelfApproval bool `pulumi:"allowSelfApproval"`
	// List of eligible approvers.
	EligibleApprovers []EligibleApprover `pulumi:"eligibleApprovers"`
	// Number of approvals required.
	NumApprovalsRequired int `pulumi:"numApprovalsRequired"`
	// Whether reapproval is required on changes.
	RequireReapprovalOnChange bool `pulumi:"requireReapprovalOnChange"`
}

// ApprovalRuleConfigInput is an input type that accepts ApprovalRuleConfigArgs and ApprovalRuleConfigOutput values.
// You can construct a concrete instance of `ApprovalRuleConfigInput` via:
//
//	ApprovalRuleConfigArgs{...}
type ApprovalRuleConfigInput interface {
	pulumi.Input

	ToApprovalRuleConfigOutput() ApprovalRuleConfigOutput
	ToApprovalRuleConfigOutputWithContext(context.Context) ApprovalRuleConfigOutput
}

type ApprovalRuleConfigArgs struct {
	// Whether self-approval is allowed.
	AllowSelfApproval pulumi.BoolInput `pulumi:"allowSelfApproval"`
	// List of eligible approvers.
	EligibleApprovers EligibleApproverArrayInput `pulumi:"eligibleApprovers"`
	// Number of approvals required.
	NumApprovalsRequired pulumi.IntInput `pulumi:"numApprovalsRequired"`
	// Whether reapproval is required on changes.
	RequireReapprovalOnChange pulumi.BoolInput `pulumi:"requireReapprovalOnChange"`
}

func (ApprovalRuleConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApprovalRuleConfig)(nil)).Elem()
}

func (i ApprovalRuleConfigArgs) ToApprovalRuleConfigOutput() ApprovalRuleConfigOutput {
	return i.ToApprovalRuleConfigOutputWithContext(context.Background())
}

func (i ApprovalRuleConfigArgs) ToApprovalRuleConfigOutputWithContext(ctx context.Context) ApprovalRuleConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApprovalRuleConfigOutput)
}

type ApprovalRuleConfigOutput struct{ *pulumi.OutputState }

func (ApprovalRuleConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApprovalRuleConfig)(nil)).Elem()
}

func (o ApprovalRuleConfigOutput) ToApprovalRuleConfigOutput() ApprovalRuleConfigOutput {
	return o
}

func (o ApprovalRuleConfigOutput) ToApprovalRuleConfigOutputWithContext(ctx context.Context) ApprovalRuleConfigOutput {
	return o
}

// Whether self-approval is allowed.
func (o ApprovalRuleConfigOutput) AllowSelfApproval() pulumi.BoolOutput {
	return o.ApplyT(func(v ApprovalRuleConfig) bool { return v.AllowSelfApproval }).(pulumi.BoolOutput)
}

// List of eligible approvers.
func (o ApprovalRuleConfigOutput) EligibleApprovers() EligibleApproverArrayOutput {
	return o.ApplyT(func(v ApprovalRuleConfig) []EligibleApprover { return v.EligibleApprovers }).(EligibleApproverArrayOutput)
}

// Number of approvals required.
func (o ApprovalRuleConfigOutput) NumApprovalsRequired() pulumi.IntOutput {
	return o.ApplyT(func(v ApprovalRuleConfig) int { return v.NumApprovalsRequired }).(pulumi.IntOutput)
}

// Whether reapproval is required on changes.
func (o ApprovalRuleConfigOutput) RequireReapprovalOnChange() pulumi.BoolOutput {
	return o.ApplyT(func(v ApprovalRuleConfig) bool { return v.RequireReapprovalOnChange }).(pulumi.BoolOutput)
}

type AuthPolicyDefinition struct {
	// The permission level for organization tokens.
	AuthorizedPermissions []AuthPolicyPermissionLevel `pulumi:"authorizedPermissions"`
	// The rule type of this policy definition
	Decision AuthPolicyDecision `pulumi:"decision"`
	// OIDC rules to set for this policy.
	Rules map[string]string `pulumi:"rules"`
	// The runner ID for deployment runner tokens.
	RunnerID *string `pulumi:"runnerID"`
	// The team name for team tokens.
	TeamName *string `pulumi:"teamName"`
	// The token type for this policy definition
	TokenType AuthPolicyTokenType `pulumi:"tokenType"`
	// The user login for personal tokens.
	UserLogin *string `pulumi:"userLogin"`
}

// AuthPolicyDefinitionInput is an input type that accepts AuthPolicyDefinitionArgs and AuthPolicyDefinitionOutput values.
// You can construct a concrete instance of `AuthPolicyDefinitionInput` via:
//
//	AuthPolicyDefinitionArgs{...}
type AuthPolicyDefinitionInput interface {
	pulumi.Input

	ToAuthPolicyDefinitionOutput() AuthPolicyDefinitionOutput
	ToAuthPolicyDefinitionOutputWithContext(context.Context) AuthPolicyDefinitionOutput
}

type AuthPolicyDefinitionArgs struct {
	// The permission level for organization tokens.
	AuthorizedPermissions AuthPolicyPermissionLevelArrayInput `pulumi:"authorizedPermissions"`
	// The rule type of this policy definition
	Decision AuthPolicyDecisionInput `pulumi:"decision"`
	// OIDC rules to set for this policy.
	Rules pulumi.StringMapInput `pulumi:"rules"`
	// The runner ID for deployment runner tokens.
	RunnerID pulumi.StringPtrInput `pulumi:"runnerID"`
	// The team name for team tokens.
	TeamName pulumi.StringPtrInput `pulumi:"teamName"`
	// The token type for this policy definition
	TokenType AuthPolicyTokenTypeInput `pulumi:"tokenType"`
	// The user login for personal tokens.
	UserLogin pulumi.StringPtrInput `pulumi:"userLogin"`
}

func (AuthPolicyDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthPolicyDefinition)(nil)).Elem()
}

func (i AuthPolicyDefinitionArgs) ToAuthPolicyDefinitionOutput() AuthPolicyDefinitionOutput {
	return i.ToAuthPolicyDefinitionOutputWithContext(context.Background())
}

func (i AuthPolicyDefinitionArgs) ToAuthPolicyDefinitionOutputWithContext(ctx context.Context) AuthPolicyDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthPolicyDefinitionOutput)
}

// AuthPolicyDefinitionArrayInput is an input type that accepts AuthPolicyDefinitionArray and AuthPolicyDefinitionArrayOutput values.
// You can construct a concrete instance of `AuthPolicyDefinitionArrayInput` via:
//
//	AuthPolicyDefinitionArray{ AuthPolicyDefinitionArgs{...} }
type AuthPolicyDefinitionArrayInput interface {
	pulumi.Input

	ToAuthPolicyDefinitionArrayOutput() AuthPolicyDefinitionArrayOutput
	ToAuthPolicyDefinitionArrayOutputWithContext(context.Context) AuthPolicyDefinitionArrayOutput
}

type AuthPolicyDefinitionArray []AuthPolicyDefinitionInput

func (AuthPolicyDefinitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthPolicyDefinition)(nil)).Elem()
}

func (i AuthPolicyDefinitionArray) ToAuthPolicyDefinitionArrayOutput() AuthPolicyDefinitionArrayOutput {
	return i.ToAuthPolicyDefinitionArrayOutputWithContext(context.Background())
}

func (i AuthPolicyDefinitionArray) ToAuthPolicyDefinitionArrayOutputWithContext(ctx context.Context) AuthPolicyDefinitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthPolicyDefinitionArrayOutput)
}

type AuthPolicyDefinitionOutput struct{ *pulumi.OutputState }

func (AuthPolicyDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthPolicyDefinition)(nil)).Elem()
}

func (o AuthPolicyDefinitionOutput) ToAuthPolicyDefinitionOutput() AuthPolicyDefinitionOutput {
	return o
}

func (o AuthPolicyDefinitionOutput) ToAuthPolicyDefinitionOutputWithContext(ctx context.Context) AuthPolicyDefinitionOutput {
	return o
}

// The permission level for organization tokens.
func (o AuthPolicyDefinitionOutput) AuthorizedPermissions() AuthPolicyPermissionLevelArrayOutput {
	return o.ApplyT(func(v AuthPolicyDefinition) []AuthPolicyPermissionLevel { return v.AuthorizedPermissions }).(AuthPolicyPermissionLevelArrayOutput)
}

// The rule type of this policy definition
func (o AuthPolicyDefinitionOutput) Decision() AuthPolicyDecisionOutput {
	return o.ApplyT(func(v AuthPolicyDefinition) AuthPolicyDecision { return v.Decision }).(AuthPolicyDecisionOutput)
}

// OIDC rules to set for this policy.
func (o AuthPolicyDefinitionOutput) Rules() pulumi.StringMapOutput {
	return o.ApplyT(func(v AuthPolicyDefinition) map[string]string { return v.Rules }).(pulumi.StringMapOutput)
}

// The runner ID for deployment runner tokens.
func (o AuthPolicyDefinitionOutput) RunnerID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthPolicyDefinition) *string { return v.RunnerID }).(pulumi.StringPtrOutput)
}

// The team name for team tokens.
func (o AuthPolicyDefinitionOutput) TeamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthPolicyDefinition) *string { return v.TeamName }).(pulumi.StringPtrOutput)
}

// The token type for this policy definition
func (o AuthPolicyDefinitionOutput) TokenType() AuthPolicyTokenTypeOutput {
	return o.ApplyT(func(v AuthPolicyDefinition) AuthPolicyTokenType { return v.TokenType }).(AuthPolicyTokenTypeOutput)
}

// The user login for personal tokens.
func (o AuthPolicyDefinitionOutput) UserLogin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthPolicyDefinition) *string { return v.UserLogin }).(pulumi.StringPtrOutput)
}

type AuthPolicyDefinitionArrayOutput struct{ *pulumi.OutputState }

func (AuthPolicyDefinitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthPolicyDefinition)(nil)).Elem()
}

func (o AuthPolicyDefinitionArrayOutput) ToAuthPolicyDefinitionArrayOutput() AuthPolicyDefinitionArrayOutput {
	return o
}

func (o AuthPolicyDefinitionArrayOutput) ToAuthPolicyDefinitionArrayOutputWithContext(ctx context.Context) AuthPolicyDefinitionArrayOutput {
	return o
}

func (o AuthPolicyDefinitionArrayOutput) Index(i pulumi.IntInput) AuthPolicyDefinitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AuthPolicyDefinition {
		return vs[0].([]AuthPolicyDefinition)[vs[1].(int)]
	}).(AuthPolicyDefinitionOutput)
}

type AzureOIDCConfiguration struct {
	// The client ID of the federated workload identity.
	ClientId string `pulumi:"clientId"`
	// The subscription ID of the federated workload identity.
	SubscriptionId string `pulumi:"subscriptionId"`
	// The tenant ID of the federated workload identity.
	TenantId string `pulumi:"tenantId"`
}

// AzureOIDCConfigurationInput is an input type that accepts AzureOIDCConfigurationArgs and AzureOIDCConfigurationOutput values.
// You can construct a concrete instance of `AzureOIDCConfigurationInput` via:
//
//	AzureOIDCConfigurationArgs{...}
type AzureOIDCConfigurationInput interface {
	pulumi.Input

	ToAzureOIDCConfigurationOutput() AzureOIDCConfigurationOutput
	ToAzureOIDCConfigurationOutputWithContext(context.Context) AzureOIDCConfigurationOutput
}

type AzureOIDCConfigurationArgs struct {
	// The client ID of the federated workload identity.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// The subscription ID of the federated workload identity.
	SubscriptionId pulumi.StringInput `pulumi:"subscriptionId"`
	// The tenant ID of the federated workload identity.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
}

func (AzureOIDCConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureOIDCConfiguration)(nil)).Elem()
}

func (i AzureOIDCConfigurationArgs) ToAzureOIDCConfigurationOutput() AzureOIDCConfigurationOutput {
	return i.ToAzureOIDCConfigurationOutputWithContext(context.Background())
}

func (i AzureOIDCConfigurationArgs) ToAzureOIDCConfigurationOutputWithContext(ctx context.Context) AzureOIDCConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureOIDCConfigurationOutput)
}

func (i AzureOIDCConfigurationArgs) ToAzureOIDCConfigurationPtrOutput() AzureOIDCConfigurationPtrOutput {
	return i.ToAzureOIDCConfigurationPtrOutputWithContext(context.Background())
}

func (i AzureOIDCConfigurationArgs) ToAzureOIDCConfigurationPtrOutputWithContext(ctx context.Context) AzureOIDCConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureOIDCConfigurationOutput).ToAzureOIDCConfigurationPtrOutputWithContext(ctx)
}

// AzureOIDCConfigurationPtrInput is an input type that accepts AzureOIDCConfigurationArgs, AzureOIDCConfigurationPtr and AzureOIDCConfigurationPtrOutput values.
// You can construct a concrete instance of `AzureOIDCConfigurationPtrInput` via:
//
//	        AzureOIDCConfigurationArgs{...}
//
//	or:
//
//	        nil
type AzureOIDCConfigurationPtrInput interface {
	pulumi.Input

	ToAzureOIDCConfigurationPtrOutput() AzureOIDCConfigurationPtrOutput
	ToAzureOIDCConfigurationPtrOutputWithContext(context.Context) AzureOIDCConfigurationPtrOutput
}

type azureOIDCConfigurationPtrType AzureOIDCConfigurationArgs

func AzureOIDCConfigurationPtr(v *AzureOIDCConfigurationArgs) AzureOIDCConfigurationPtrInput {
	return (*azureOIDCConfigurationPtrType)(v)
}

func (*azureOIDCConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureOIDCConfiguration)(nil)).Elem()
}

func (i *azureOIDCConfigurationPtrType) ToAzureOIDCConfigurationPtrOutput() AzureOIDCConfigurationPtrOutput {
	return i.ToAzureOIDCConfigurationPtrOutputWithContext(context.Background())
}

func (i *azureOIDCConfigurationPtrType) ToAzureOIDCConfigurationPtrOutputWithContext(ctx context.Context) AzureOIDCConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureOIDCConfigurationPtrOutput)
}

type AzureOIDCConfigurationOutput struct{ *pulumi.OutputState }

func (AzureOIDCConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureOIDCConfiguration)(nil)).Elem()
}

func (o AzureOIDCConfigurationOutput) ToAzureOIDCConfigurationOutput() AzureOIDCConfigurationOutput {
	return o
}

func (o AzureOIDCConfigurationOutput) ToAzureOIDCConfigurationOutputWithContext(ctx context.Context) AzureOIDCConfigurationOutput {
	return o
}

func (o AzureOIDCConfigurationOutput) ToAzureOIDCConfigurationPtrOutput() AzureOIDCConfigurationPtrOutput {
	return o.ToAzureOIDCConfigurationPtrOutputWithContext(context.Background())
}

func (o AzureOIDCConfigurationOutput) ToAzureOIDCConfigurationPtrOutputWithContext(ctx context.Context) AzureOIDCConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureOIDCConfiguration) *AzureOIDCConfiguration {
		return &v
	}).(AzureOIDCConfigurationPtrOutput)
}

// The client ID of the federated workload identity.
func (o AzureOIDCConfigurationOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v AzureOIDCConfiguration) string { return v.ClientId }).(pulumi.StringOutput)
}

// The subscription ID of the federated workload identity.
func (o AzureOIDCConfigurationOutput) SubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v AzureOIDCConfiguration) string { return v.SubscriptionId }).(pulumi.StringOutput)
}

// The tenant ID of the federated workload identity.
func (o AzureOIDCConfigurationOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v AzureOIDCConfiguration) string { return v.TenantId }).(pulumi.StringOutput)
}

type AzureOIDCConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AzureOIDCConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureOIDCConfiguration)(nil)).Elem()
}

func (o AzureOIDCConfigurationPtrOutput) ToAzureOIDCConfigurationPtrOutput() AzureOIDCConfigurationPtrOutput {
	return o
}

func (o AzureOIDCConfigurationPtrOutput) ToAzureOIDCConfigurationPtrOutputWithContext(ctx context.Context) AzureOIDCConfigurationPtrOutput {
	return o
}

func (o AzureOIDCConfigurationPtrOutput) Elem() AzureOIDCConfigurationOutput {
	return o.ApplyT(func(v *AzureOIDCConfiguration) AzureOIDCConfiguration {
		if v != nil {
			return *v
		}
		var ret AzureOIDCConfiguration
		return ret
	}).(AzureOIDCConfigurationOutput)
}

// The client ID of the federated workload identity.
func (o AzureOIDCConfigurationPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureOIDCConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.ClientId
	}).(pulumi.StringPtrOutput)
}

// The subscription ID of the federated workload identity.
func (o AzureOIDCConfigurationPtrOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureOIDCConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.SubscriptionId
	}).(pulumi.StringPtrOutput)
}

// The tenant ID of the federated workload identity.
func (o AzureOIDCConfigurationPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureOIDCConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Dependency cache settings for the deployment
type DeploymentSettingsCacheOptions struct {
	// Enable dependency caching
	Enable *bool `pulumi:"enable"`
}

// Defaults sets the appropriate defaults for DeploymentSettingsCacheOptions
func (val *DeploymentSettingsCacheOptions) Defaults() *DeploymentSettingsCacheOptions {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Enable == nil {
		enable_ := false
		tmp.Enable = &enable_
	}
	return &tmp
}

// DeploymentSettingsCacheOptionsInput is an input type that accepts DeploymentSettingsCacheOptionsArgs and DeploymentSettingsCacheOptionsOutput values.
// You can construct a concrete instance of `DeploymentSettingsCacheOptionsInput` via:
//
//	DeploymentSettingsCacheOptionsArgs{...}
type DeploymentSettingsCacheOptionsInput interface {
	pulumi.Input

	ToDeploymentSettingsCacheOptionsOutput() DeploymentSettingsCacheOptionsOutput
	ToDeploymentSettingsCacheOptionsOutputWithContext(context.Context) DeploymentSettingsCacheOptionsOutput
}

// Dependency cache settings for the deployment
type DeploymentSettingsCacheOptionsArgs struct {
	// Enable dependency caching
	Enable pulumi.BoolPtrInput `pulumi:"enable"`
}

// Defaults sets the appropriate defaults for DeploymentSettingsCacheOptionsArgs
func (val *DeploymentSettingsCacheOptionsArgs) Defaults() *DeploymentSettingsCacheOptionsArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Enable == nil {
		tmp.Enable = pulumi.BoolPtr(false)
	}
	return &tmp
}
func (DeploymentSettingsCacheOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentSettingsCacheOptions)(nil)).Elem()
}

func (i DeploymentSettingsCacheOptionsArgs) ToDeploymentSettingsCacheOptionsOutput() DeploymentSettingsCacheOptionsOutput {
	return i.ToDeploymentSettingsCacheOptionsOutputWithContext(context.Background())
}

func (i DeploymentSettingsCacheOptionsArgs) ToDeploymentSettingsCacheOptionsOutputWithContext(ctx context.Context) DeploymentSettingsCacheOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentSettingsCacheOptionsOutput)
}

func (i DeploymentSettingsCacheOptionsArgs) ToDeploymentSettingsCacheOptionsPtrOutput() DeploymentSettingsCacheOptionsPtrOutput {
	return i.ToDeploymentSettingsCacheOptionsPtrOutputWithContext(context.Background())
}

func (i DeploymentSettingsCacheOptionsArgs) ToDeploymentSettingsCacheOptionsPtrOutputWithContext(ctx context.Context) DeploymentSettingsCacheOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentSettingsCacheOptionsOutput).ToDeploymentSettingsCacheOptionsPtrOutputWithContext(ctx)
}

// DeploymentSettingsCacheOptionsPtrInput is an input type that accepts DeploymentSettingsCacheOptionsArgs, DeploymentSettingsCacheOptionsPtr and DeploymentSettingsCacheOptionsPtrOutput values.
// You can construct a concrete instance of `DeploymentSettingsCacheOptionsPtrInput` via:
//
//	        DeploymentSettingsCacheOptionsArgs{...}
//
//	or:
//
//	        nil
type DeploymentSettingsCacheOptionsPtrInput interface {
	pulumi.Input

	ToDeploymentSettingsCacheOptionsPtrOutput() DeploymentSettingsCacheOptionsPtrOutput
	ToDeploymentSettingsCacheOptionsPtrOutputWithContext(context.Context) DeploymentSettingsCacheOptionsPtrOutput
}

type deploymentSettingsCacheOptionsPtrType DeploymentSettingsCacheOptionsArgs

func DeploymentSettingsCacheOptionsPtr(v *DeploymentSettingsCacheOptionsArgs) DeploymentSettingsCacheOptionsPtrInput {
	return (*deploymentSettingsCacheOptionsPtrType)(v)
}

func (*deploymentSettingsCacheOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentSettingsCacheOptions)(nil)).Elem()
}

func (i *deploymentSettingsCacheOptionsPtrType) ToDeploymentSettingsCacheOptionsPtrOutput() DeploymentSettingsCacheOptionsPtrOutput {
	return i.ToDeploymentSettingsCacheOptionsPtrOutputWithContext(context.Background())
}

func (i *deploymentSettingsCacheOptionsPtrType) ToDeploymentSettingsCacheOptionsPtrOutputWithContext(ctx context.Context) DeploymentSettingsCacheOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentSettingsCacheOptionsPtrOutput)
}

// Dependency cache settings for the deployment
type DeploymentSettingsCacheOptionsOutput struct{ *pulumi.OutputState }

func (DeploymentSettingsCacheOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentSettingsCacheOptions)(nil)).Elem()
}

func (o DeploymentSettingsCacheOptionsOutput) ToDeploymentSettingsCacheOptionsOutput() DeploymentSettingsCacheOptionsOutput {
	return o
}

func (o DeploymentSettingsCacheOptionsOutput) ToDeploymentSettingsCacheOptionsOutputWithContext(ctx context.Context) DeploymentSettingsCacheOptionsOutput {
	return o
}

func (o DeploymentSettingsCacheOptionsOutput) ToDeploymentSettingsCacheOptionsPtrOutput() DeploymentSettingsCacheOptionsPtrOutput {
	return o.ToDeploymentSettingsCacheOptionsPtrOutputWithContext(context.Background())
}

func (o DeploymentSettingsCacheOptionsOutput) ToDeploymentSettingsCacheOptionsPtrOutputWithContext(ctx context.Context) DeploymentSettingsCacheOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeploymentSettingsCacheOptions) *DeploymentSettingsCacheOptions {
		return &v
	}).(DeploymentSettingsCacheOptionsPtrOutput)
}

// Enable dependency caching
func (o DeploymentSettingsCacheOptionsOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeploymentSettingsCacheOptions) *bool { return v.Enable }).(pulumi.BoolPtrOutput)
}

type DeploymentSettingsCacheOptionsPtrOutput struct{ *pulumi.OutputState }

func (DeploymentSettingsCacheOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentSettingsCacheOptions)(nil)).Elem()
}

func (o DeploymentSettingsCacheOptionsPtrOutput) ToDeploymentSettingsCacheOptionsPtrOutput() DeploymentSettingsCacheOptionsPtrOutput {
	return o
}

func (o DeploymentSettingsCacheOptionsPtrOutput) ToDeploymentSettingsCacheOptionsPtrOutputWithContext(ctx context.Context) DeploymentSettingsCacheOptionsPtrOutput {
	return o
}

func (o DeploymentSettingsCacheOptionsPtrOutput) Elem() DeploymentSettingsCacheOptionsOutput {
	return o.ApplyT(func(v *DeploymentSettingsCacheOptions) DeploymentSettingsCacheOptions {
		if v != nil {
			return *v
		}
		var ret DeploymentSettingsCacheOptions
		return ret
	}).(DeploymentSettingsCacheOptionsOutput)
}

// Enable dependency caching
func (o DeploymentSettingsCacheOptionsPtrOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeploymentSettingsCacheOptions) *bool {
		if v == nil {
			return nil
		}
		return v.Enable
	}).(pulumi.BoolPtrOutput)
}

// The executor context defines information about the executor where the deployment is executed. If unspecified, the default 'pulumi/pulumi' image is used.
type DeploymentSettingsExecutorContext struct {
	// Allows overriding the default executor image with a custom image. E.g. 'pulumi/pulumi-nodejs:latest'
	ExecutorImage string `pulumi:"executorImage"`
}

// DeploymentSettingsExecutorContextInput is an input type that accepts DeploymentSettingsExecutorContextArgs and DeploymentSettingsExecutorContextOutput values.
// You can construct a concrete instance of `DeploymentSettingsExecutorContextInput` via:
//
//	DeploymentSettingsExecutorContextArgs{...}
type DeploymentSettingsExecutorContextInput interface {
	pulumi.Input

	ToDeploymentSettingsExecutorContextOutput() DeploymentSettingsExecutorContextOutput
	ToDeploymentSettingsExecutorContextOutputWithContext(context.Context) DeploymentSettingsExecutorContextOutput
}

// The executor context defines information about the executor where the deployment is executed. If unspecified, the default 'pulumi/pulumi' image is used.
type DeploymentSettingsExecutorContextArgs struct {
	// Allows overriding the default executor image with a custom image. E.g. 'pulumi/pulumi-nodejs:latest'
	ExecutorImage pulumi.StringInput `pulumi:"executorImage"`
}

func (DeploymentSettingsExecutorContextArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentSettingsExecutorContext)(nil)).Elem()
}

func (i DeploymentSettingsExecutorContextArgs) ToDeploymentSettingsExecutorContextOutput() DeploymentSettingsExecutorContextOutput {
	return i.ToDeploymentSettingsExecutorContextOutputWithContext(context.Background())
}

func (i DeploymentSettingsExecutorContextArgs) ToDeploymentSettingsExecutorContextOutputWithContext(ctx context.Context) DeploymentSettingsExecutorContextOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentSettingsExecutorContextOutput)
}

func (i DeploymentSettingsExecutorContextArgs) ToDeploymentSettingsExecutorContextPtrOutput() DeploymentSettingsExecutorContextPtrOutput {
	return i.ToDeploymentSettingsExecutorContextPtrOutputWithContext(context.Background())
}

func (i DeploymentSettingsExecutorContextArgs) ToDeploymentSettingsExecutorContextPtrOutputWithContext(ctx context.Context) DeploymentSettingsExecutorContextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentSettingsExecutorContextOutput).ToDeploymentSettingsExecutorContextPtrOutputWithContext(ctx)
}

// DeploymentSettingsExecutorContextPtrInput is an input type that accepts DeploymentSettingsExecutorContextArgs, DeploymentSettingsExecutorContextPtr and DeploymentSettingsExecutorContextPtrOutput values.
// You can construct a concrete instance of `DeploymentSettingsExecutorContextPtrInput` via:
//
//	        DeploymentSettingsExecutorContextArgs{...}
//
//	or:
//
//	        nil
type DeploymentSettingsExecutorContextPtrInput interface {
	pulumi.Input

	ToDeploymentSettingsExecutorContextPtrOutput() DeploymentSettingsExecutorContextPtrOutput
	ToDeploymentSettingsExecutorContextPtrOutputWithContext(context.Context) DeploymentSettingsExecutorContextPtrOutput
}

type deploymentSettingsExecutorContextPtrType DeploymentSettingsExecutorContextArgs

func DeploymentSettingsExecutorContextPtr(v *DeploymentSettingsExecutorContextArgs) DeploymentSettingsExecutorContextPtrInput {
	return (*deploymentSettingsExecutorContextPtrType)(v)
}

func (*deploymentSettingsExecutorContextPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentSettingsExecutorContext)(nil)).Elem()
}

func (i *deploymentSettingsExecutorContextPtrType) ToDeploymentSettingsExecutorContextPtrOutput() DeploymentSettingsExecutorContextPtrOutput {
	return i.ToDeploymentSettingsExecutorContextPtrOutputWithContext(context.Background())
}

func (i *deploymentSettingsExecutorContextPtrType) ToDeploymentSettingsExecutorContextPtrOutputWithContext(ctx context.Context) DeploymentSettingsExecutorContextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentSettingsExecutorContextPtrOutput)
}

// The executor context defines information about the executor where the deployment is executed. If unspecified, the default 'pulumi/pulumi' image is used.
type DeploymentSettingsExecutorContextOutput struct{ *pulumi.OutputState }

func (DeploymentSettingsExecutorContextOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentSettingsExecutorContext)(nil)).Elem()
}

func (o DeploymentSettingsExecutorContextOutput) ToDeploymentSettingsExecutorContextOutput() DeploymentSettingsExecutorContextOutput {
	return o
}

func (o DeploymentSettingsExecutorContextOutput) ToDeploymentSettingsExecutorContextOutputWithContext(ctx context.Context) DeploymentSettingsExecutorContextOutput {
	return o
}

func (o DeploymentSettingsExecutorContextOutput) ToDeploymentSettingsExecutorContextPtrOutput() DeploymentSettingsExecutorContextPtrOutput {
	return o.ToDeploymentSettingsExecutorContextPtrOutputWithContext(context.Background())
}

func (o DeploymentSettingsExecutorContextOutput) ToDeploymentSettingsExecutorContextPtrOutputWithContext(ctx context.Context) DeploymentSettingsExecutorContextPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeploymentSettingsExecutorContext) *DeploymentSettingsExecutorContext {
		return &v
	}).(DeploymentSettingsExecutorContextPtrOutput)
}

// Allows overriding the default executor image with a custom image. E.g. 'pulumi/pulumi-nodejs:latest'
func (o DeploymentSettingsExecutorContextOutput) ExecutorImage() pulumi.StringOutput {
	return o.ApplyT(func(v DeploymentSettingsExecutorContext) string { return v.ExecutorImage }).(pulumi.StringOutput)
}

type DeploymentSettingsExecutorContextPtrOutput struct{ *pulumi.OutputState }

func (DeploymentSettingsExecutorContextPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentSettingsExecutorContext)(nil)).Elem()
}

func (o DeploymentSettingsExecutorContextPtrOutput) ToDeploymentSettingsExecutorContextPtrOutput() DeploymentSettingsExecutorContextPtrOutput {
	return o
}

func (o DeploymentSettingsExecutorContextPtrOutput) ToDeploymentSettingsExecutorContextPtrOutputWithContext(ctx context.Context) DeploymentSettingsExecutorContextPtrOutput {
	return o
}

func (o DeploymentSettingsExecutorContextPtrOutput) Elem() DeploymentSettingsExecutorContextOutput {
	return o.ApplyT(func(v *DeploymentSettingsExecutorContext) DeploymentSettingsExecutorContext {
		if v != nil {
			return *v
		}
		var ret DeploymentSettingsExecutorContext
		return ret
	}).(DeploymentSettingsExecutorContextOutput)
}

// Allows overriding the default executor image with a custom image. E.g. 'pulumi/pulumi-nodejs:latest'
func (o DeploymentSettingsExecutorContextPtrOutput) ExecutorImage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentSettingsExecutorContext) *string {
		if v == nil {
			return nil
		}
		return &v.ExecutorImage
	}).(pulumi.StringPtrOutput)
}

// Git source settings for a deployment.
type DeploymentSettingsGitAuthBasicAuth struct {
	// Password for git basic authentication.
	Password string `pulumi:"password"`
	// User name for git basic authentication.
	Username string `pulumi:"username"`
}

// DeploymentSettingsGitAuthBasicAuthInput is an input type that accepts DeploymentSettingsGitAuthBasicAuthArgs and DeploymentSettingsGitAuthBasicAuthOutput values.
// You can construct a concrete instance of `DeploymentSettingsGitAuthBasicAuthInput` via:
//
//	DeploymentSettingsGitAuthBasicAuthArgs{...}
type DeploymentSettingsGitAuthBasicAuthInput interface {
	pulumi.Input

	ToDeploymentSettingsGitAuthBasicAuthOutput() DeploymentSettingsGitAuthBasicAuthOutput
	ToDeploymentSettingsGitAuthBasicAuthOutputWithContext(context.Context) DeploymentSettingsGitAuthBasicAuthOutput
}

// Git source settings for a deployment.
type DeploymentSettingsGitAuthBasicAuthArgs struct {
	// Password for git basic authentication.
	Password pulumi.StringInput `pulumi:"password"`
	// User name for git basic authentication.
	Username pulumi.StringInput `pulumi:"username"`
}

func (DeploymentSettingsGitAuthBasicAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentSettingsGitAuthBasicAuth)(nil)).Elem()
}

func (i DeploymentSettingsGitAuthBasicAuthArgs) ToDeploymentSettingsGitAuthBasicAuthOutput() DeploymentSettingsGitAuthBasicAuthOutput {
	return i.ToDeploymentSettingsGitAuthBasicAuthOutputWithContext(context.Background())
}

func (i DeploymentSettingsGitAuthBasicAuthArgs) ToDeploymentSettingsGitAuthBasicAuthOutputWithContext(ctx context.Context) DeploymentSettingsGitAuthBasicAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentSettingsGitAuthBasicAuthOutput)
}

func (i DeploymentSettingsGitAuthBasicAuthArgs) ToDeploymentSettingsGitAuthBasicAuthPtrOutput() DeploymentSettingsGitAuthBasicAuthPtrOutput {
	return i.ToDeploymentSettingsGitAuthBasicAuthPtrOutputWithContext(context.Background())
}

func (i DeploymentSettingsGitAuthBasicAuthArgs) ToDeploymentSettingsGitAuthBasicAuthPtrOutputWithContext(ctx context.Context) DeploymentSettingsGitAuthBasicAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentSettingsGitAuthBasicAuthOutput).ToDeploymentSettingsGitAuthBasicAuthPtrOutputWithContext(ctx)
}

// DeploymentSettingsGitAuthBasicAuthPtrInput is an input type that accepts DeploymentSettingsGitAuthBasicAuthArgs, DeploymentSettingsGitAuthBasicAuthPtr and DeploymentSettingsGitAuthBasicAuthPtrOutput values.
// You can construct a concrete instance of `DeploymentSettingsGitAuthBasicAuthPtrInput` via:
//
//	        DeploymentSettingsGitAuthBasicAuthArgs{...}
//
//	or:
//
//	        nil
type DeploymentSettingsGitAuthBasicAuthPtrInput interface {
	pulumi.Input

	ToDeploymentSettingsGitAuthBasicAuthPtrOutput() DeploymentSettingsGitAuthBasicAuthPtrOutput
	ToDeploymentSettingsGitAuthBasicAuthPtrOutputWithContext(context.Context) DeploymentSettingsGitAuthBasicAuthPtrOutput
}

type deploymentSettingsGitAuthBasicAuthPtrType DeploymentSettingsGitAuthBasicAuthArgs

func DeploymentSettingsGitAuthBasicAuthPtr(v *DeploymentSettingsGitAuthBasicAuthArgs) DeploymentSettingsGitAuthBasicAuthPtrInput {
	return (*deploymentSettingsGitAuthBasicAuthPtrType)(v)
}

func (*deploymentSettingsGitAuthBasicAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentSettingsGitAuthBasicAuth)(nil)).Elem()
}

func (i *deploymentSettingsGitAuthBasicAuthPtrType) ToDeploymentSettingsGitAuthBasicAuthPtrOutput() DeploymentSettingsGitAuthBasicAuthPtrOutput {
	return i.ToDeploymentSettingsGitAuthBasicAuthPtrOutputWithContext(context.Background())
}

func (i *deploymentSettingsGitAuthBasicAuthPtrType) ToDeploymentSettingsGitAuthBasicAuthPtrOutputWithContext(ctx context.Context) DeploymentSettingsGitAuthBasicAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentSettingsGitAuthBasicAuthPtrOutput)
}

// Git source settings for a deployment.
type DeploymentSettingsGitAuthBasicAuthOutput struct{ *pulumi.OutputState }

func (DeploymentSettingsGitAuthBasicAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentSettingsGitAuthBasicAuth)(nil)).Elem()
}

func (o DeploymentSettingsGitAuthBasicAuthOutput) ToDeploymentSettingsGitAuthBasicAuthOutput() DeploymentSettingsGitAuthBasicAuthOutput {
	return o
}

func (o DeploymentSettingsGitAuthBasicAuthOutput) ToDeploymentSettingsGitAuthBasicAuthOutputWithContext(ctx context.Context) DeploymentSettingsGitAuthBasicAuthOutput {
	return o
}

func (o DeploymentSettingsGitAuthBasicAuthOutput) ToDeploymentSettingsGitAuthBasicAuthPtrOutput() DeploymentSettingsGitAuthBasicAuthPtrOutput {
	return o.ToDeploymentSettingsGitAuthBasicAuthPtrOutputWithContext(context.Background())
}

func (o DeploymentSettingsGitAuthBasicAuthOutput) ToDeploymentSettingsGitAuthBasicAuthPtrOutputWithContext(ctx context.Context) DeploymentSettingsGitAuthBasicAuthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeploymentSettingsGitAuthBasicAuth) *DeploymentSettingsGitAuthBasicAuth {
		return &v
	}).(DeploymentSettingsGitAuthBasicAuthPtrOutput)
}

// Password for git basic authentication.
func (o DeploymentSettingsGitAuthBasicAuthOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v DeploymentSettingsGitAuthBasicAuth) string { return v.Password }).(pulumi.StringOutput)
}

// User name for git basic authentication.
func (o DeploymentSettingsGitAuthBasicAuthOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v DeploymentSettingsGitAuthBasicAuth) string { return v.Username }).(pulumi.StringOutput)
}

type DeploymentSettingsGitAuthBasicAuthPtrOutput struct{ *pulumi.OutputState }

func (DeploymentSettingsGitAuthBasicAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentSettingsGitAuthBasicAuth)(nil)).Elem()
}

func (o DeploymentSettingsGitAuthBasicAuthPtrOutput) ToDeploymentSettingsGitAuthBasicAuthPtrOutput() DeploymentSettingsGitAuthBasicAuthPtrOutput {
	return o
}

func (o DeploymentSettingsGitAuthBasicAuthPtrOutput) ToDeploymentSettingsGitAuthBasicAuthPtrOutputWithContext(ctx context.Context) DeploymentSettingsGitAuthBasicAuthPtrOutput {
	return o
}

func (o DeploymentSettingsGitAuthBasicAuthPtrOutput) Elem() DeploymentSettingsGitAuthBasicAuthOutput {
	return o.ApplyT(func(v *DeploymentSettingsGitAuthBasicAuth) DeploymentSettingsGitAuthBasicAuth {
		if v != nil {
			return *v
		}
		var ret DeploymentSettingsGitAuthBasicAuth
		return ret
	}).(DeploymentSettingsGitAuthBasicAuthOutput)
}

// Password for git basic authentication.
func (o DeploymentSettingsGitAuthBasicAuthPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentSettingsGitAuthBasicAuth) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// User name for git basic authentication.
func (o DeploymentSettingsGitAuthBasicAuthPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentSettingsGitAuthBasicAuth) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

// Git source settings for a deployment.
type DeploymentSettingsGitAuthSSHAuth struct {
	// Optional password for SSH authentication.
	Password *string `pulumi:"password"`
	// SSH private key.
	SshPrivateKey string `pulumi:"sshPrivateKey"`
}

// DeploymentSettingsGitAuthSSHAuthInput is an input type that accepts DeploymentSettingsGitAuthSSHAuthArgs and DeploymentSettingsGitAuthSSHAuthOutput values.
// You can construct a concrete instance of `DeploymentSettingsGitAuthSSHAuthInput` via:
//
//	DeploymentSettingsGitAuthSSHAuthArgs{...}
type DeploymentSettingsGitAuthSSHAuthInput interface {
	pulumi.Input

	ToDeploymentSettingsGitAuthSSHAuthOutput() DeploymentSettingsGitAuthSSHAuthOutput
	ToDeploymentSettingsGitAuthSSHAuthOutputWithContext(context.Context) DeploymentSettingsGitAuthSSHAuthOutput
}

// Git source settings for a deployment.
type DeploymentSettingsGitAuthSSHAuthArgs struct {
	// Optional password for SSH authentication.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// SSH private key.
	SshPrivateKey pulumi.StringInput `pulumi:"sshPrivateKey"`
}

func (DeploymentSettingsGitAuthSSHAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentSettingsGitAuthSSHAuth)(nil)).Elem()
}

func (i DeploymentSettingsGitAuthSSHAuthArgs) ToDeploymentSettingsGitAuthSSHAuthOutput() DeploymentSettingsGitAuthSSHAuthOutput {
	return i.ToDeploymentSettingsGitAuthSSHAuthOutputWithContext(context.Background())
}

func (i DeploymentSettingsGitAuthSSHAuthArgs) ToDeploymentSettingsGitAuthSSHAuthOutputWithContext(ctx context.Context) DeploymentSettingsGitAuthSSHAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentSettingsGitAuthSSHAuthOutput)
}

func (i DeploymentSettingsGitAuthSSHAuthArgs) ToDeploymentSettingsGitAuthSSHAuthPtrOutput() DeploymentSettingsGitAuthSSHAuthPtrOutput {
	return i.ToDeploymentSettingsGitAuthSSHAuthPtrOutputWithContext(context.Background())
}

func (i DeploymentSettingsGitAuthSSHAuthArgs) ToDeploymentSettingsGitAuthSSHAuthPtrOutputWithContext(ctx context.Context) DeploymentSettingsGitAuthSSHAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentSettingsGitAuthSSHAuthOutput).ToDeploymentSettingsGitAuthSSHAuthPtrOutputWithContext(ctx)
}

// DeploymentSettingsGitAuthSSHAuthPtrInput is an input type that accepts DeploymentSettingsGitAuthSSHAuthArgs, DeploymentSettingsGitAuthSSHAuthPtr and DeploymentSettingsGitAuthSSHAuthPtrOutput values.
// You can construct a concrete instance of `DeploymentSettingsGitAuthSSHAuthPtrInput` via:
//
//	        DeploymentSettingsGitAuthSSHAuthArgs{...}
//
//	or:
//
//	        nil
type DeploymentSettingsGitAuthSSHAuthPtrInput interface {
	pulumi.Input

	ToDeploymentSettingsGitAuthSSHAuthPtrOutput() DeploymentSettingsGitAuthSSHAuthPtrOutput
	ToDeploymentSettingsGitAuthSSHAuthPtrOutputWithContext(context.Context) DeploymentSettingsGitAuthSSHAuthPtrOutput
}

type deploymentSettingsGitAuthSSHAuthPtrType DeploymentSettingsGitAuthSSHAuthArgs

func DeploymentSettingsGitAuthSSHAuthPtr(v *DeploymentSettingsGitAuthSSHAuthArgs) DeploymentSettingsGitAuthSSHAuthPtrInput {
	return (*deploymentSettingsGitAuthSSHAuthPtrType)(v)
}

func (*deploymentSettingsGitAuthSSHAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentSettingsGitAuthSSHAuth)(nil)).Elem()
}

func (i *deploymentSettingsGitAuthSSHAuthPtrType) ToDeploymentSettingsGitAuthSSHAuthPtrOutput() DeploymentSettingsGitAuthSSHAuthPtrOutput {
	return i.ToDeploymentSettingsGitAuthSSHAuthPtrOutputWithContext(context.Background())
}

func (i *deploymentSettingsGitAuthSSHAuthPtrType) ToDeploymentSettingsGitAuthSSHAuthPtrOutputWithContext(ctx context.Context) DeploymentSettingsGitAuthSSHAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentSettingsGitAuthSSHAuthPtrOutput)
}

// Git source settings for a deployment.
type DeploymentSettingsGitAuthSSHAuthOutput struct{ *pulumi.OutputState }

func (DeploymentSettingsGitAuthSSHAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentSettingsGitAuthSSHAuth)(nil)).Elem()
}

func (o DeploymentSettingsGitAuthSSHAuthOutput) ToDeploymentSettingsGitAuthSSHAuthOutput() DeploymentSettingsGitAuthSSHAuthOutput {
	return o
}

func (o DeploymentSettingsGitAuthSSHAuthOutput) ToDeploymentSettingsGitAuthSSHAuthOutputWithContext(ctx context.Context) DeploymentSettingsGitAuthSSHAuthOutput {
	return o
}

func (o DeploymentSettingsGitAuthSSHAuthOutput) ToDeploymentSettingsGitAuthSSHAuthPtrOutput() DeploymentSettingsGitAuthSSHAuthPtrOutput {
	return o.ToDeploymentSettingsGitAuthSSHAuthPtrOutputWithContext(context.Background())
}

func (o DeploymentSettingsGitAuthSSHAuthOutput) ToDeploymentSettingsGitAuthSSHAuthPtrOutputWithContext(ctx context.Context) DeploymentSettingsGitAuthSSHAuthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeploymentSettingsGitAuthSSHAuth) *DeploymentSettingsGitAuthSSHAuth {
		return &v
	}).(DeploymentSettingsGitAuthSSHAuthPtrOutput)
}

// Optional password for SSH authentication.
func (o DeploymentSettingsGitAuthSSHAuthOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentSettingsGitAuthSSHAuth) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// SSH private key.
func (o DeploymentSettingsGitAuthSSHAuthOutput) SshPrivateKey() pulumi.StringOutput {
	return o.ApplyT(func(v DeploymentSettingsGitAuthSSHAuth) string { return v.SshPrivateKey }).(pulumi.StringOutput)
}

type DeploymentSettingsGitAuthSSHAuthPtrOutput struct{ *pulumi.OutputState }

func (DeploymentSettingsGitAuthSSHAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentSettingsGitAuthSSHAuth)(nil)).Elem()
}

func (o DeploymentSettingsGitAuthSSHAuthPtrOutput) ToDeploymentSettingsGitAuthSSHAuthPtrOutput() DeploymentSettingsGitAuthSSHAuthPtrOutput {
	return o
}

func (o DeploymentSettingsGitAuthSSHAuthPtrOutput) ToDeploymentSettingsGitAuthSSHAuthPtrOutputWithContext(ctx context.Context) DeploymentSettingsGitAuthSSHAuthPtrOutput {
	return o
}

func (o DeploymentSettingsGitAuthSSHAuthPtrOutput) Elem() DeploymentSettingsGitAuthSSHAuthOutput {
	return o.ApplyT(func(v *DeploymentSettingsGitAuthSSHAuth) DeploymentSettingsGitAuthSSHAuth {
		if v != nil {
			return *v
		}
		var ret DeploymentSettingsGitAuthSSHAuth
		return ret
	}).(DeploymentSettingsGitAuthSSHAuthOutput)
}

// Optional password for SSH authentication.
func (o DeploymentSettingsGitAuthSSHAuthPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentSettingsGitAuthSSHAuth) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// SSH private key.
func (o DeploymentSettingsGitAuthSSHAuthPtrOutput) SshPrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentSettingsGitAuthSSHAuth) *string {
		if v == nil {
			return nil
		}
		return &v.SshPrivateKey
	}).(pulumi.StringPtrOutput)
}

// Git source settings for a deployment.
type DeploymentSettingsGitSource struct {
	// The branch to deploy. One of either `branch` or `commit` must be specified.
	Branch *string `pulumi:"branch"`
	// The commit to deploy. One of either `branch` or `commit` must be specified.
	Commit *string `pulumi:"commit"`
	// Git authentication configuration for this deployment. Should not be specified if there are `gitHub` settings for this deployment.
	GitAuth *DeploymentSettingsGitSourceGitAuth `pulumi:"gitAuth"`
	// The directory within the repository where the Pulumi.yaml is located.
	RepoDir *string `pulumi:"repoDir"`
	// The repository URL to use for git settings. Should not be specified if there are `gitHub` settings for this deployment.
	RepoUrl *string `pulumi:"repoUrl"`
}

// DeploymentSettingsGitSourceInput is an input type that accepts DeploymentSettingsGitSourceArgs and DeploymentSettingsGitSourceOutput values.
// You can construct a concrete instance of `DeploymentSettingsGitSourceInput` via:
//
//	DeploymentSettingsGitSourceArgs{...}
type DeploymentSettingsGitSourceInput interface {
	pulumi.Input

	ToDeploymentSettingsGitSourceOutput() DeploymentSettingsGitSourceOutput
	ToDeploymentSettingsGitSourceOutputWithContext(context.Context) DeploymentSettingsGitSourceOutput
}

// Git source settings for a deployment.
type DeploymentSettingsGitSourceArgs struct {
	// The branch to deploy. One of either `branch` or `commit` must be specified.
	Branch pulumi.StringPtrInput `pulumi:"branch"`
	// The commit to deploy. One of either `branch` or `commit` must be specified.
	Commit pulumi.StringPtrInput `pulumi:"commit"`
	// Git authentication configuration for this deployment. Should not be specified if there are `gitHub` settings for this deployment.
	GitAuth DeploymentSettingsGitSourceGitAuthPtrInput `pulumi:"gitAuth"`
	// The directory within the repository where the Pulumi.yaml is located.
	RepoDir pulumi.StringPtrInput `pulumi:"repoDir"`
	// The repository URL to use for git settings. Should not be specified if there are `gitHub` settings for this deployment.
	RepoUrl pulumi.StringPtrInput `pulumi:"repoUrl"`
}

func (DeploymentSettingsGitSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentSettingsGitSource)(nil)).Elem()
}

func (i DeploymentSettingsGitSourceArgs) ToDeploymentSettingsGitSourceOutput() DeploymentSettingsGitSourceOutput {
	return i.ToDeploymentSettingsGitSourceOutputWithContext(context.Background())
}

func (i DeploymentSettingsGitSourceArgs) ToDeploymentSettingsGitSourceOutputWithContext(ctx context.Context) DeploymentSettingsGitSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentSettingsGitSourceOutput)
}

func (i DeploymentSettingsGitSourceArgs) ToDeploymentSettingsGitSourcePtrOutput() DeploymentSettingsGitSourcePtrOutput {
	return i.ToDeploymentSettingsGitSourcePtrOutputWithContext(context.Background())
}

func (i DeploymentSettingsGitSourceArgs) ToDeploymentSettingsGitSourcePtrOutputWithContext(ctx context.Context) DeploymentSettingsGitSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentSettingsGitSourceOutput).ToDeploymentSettingsGitSourcePtrOutputWithContext(ctx)
}

// DeploymentSettingsGitSourcePtrInput is an input type that accepts DeploymentSettingsGitSourceArgs, DeploymentSettingsGitSourcePtr and DeploymentSettingsGitSourcePtrOutput values.
// You can construct a concrete instance of `DeploymentSettingsGitSourcePtrInput` via:
//
//	        DeploymentSettingsGitSourceArgs{...}
//
//	or:
//
//	        nil
type DeploymentSettingsGitSourcePtrInput interface {
	pulumi.Input

	ToDeploymentSettingsGitSourcePtrOutput() DeploymentSettingsGitSourcePtrOutput
	ToDeploymentSettingsGitSourcePtrOutputWithContext(context.Context) DeploymentSettingsGitSourcePtrOutput
}

type deploymentSettingsGitSourcePtrType DeploymentSettingsGitSourceArgs

func DeploymentSettingsGitSourcePtr(v *DeploymentSettingsGitSourceArgs) DeploymentSettingsGitSourcePtrInput {
	return (*deploymentSettingsGitSourcePtrType)(v)
}

func (*deploymentSettingsGitSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentSettingsGitSource)(nil)).Elem()
}

func (i *deploymentSettingsGitSourcePtrType) ToDeploymentSettingsGitSourcePtrOutput() DeploymentSettingsGitSourcePtrOutput {
	return i.ToDeploymentSettingsGitSourcePtrOutputWithContext(context.Background())
}

func (i *deploymentSettingsGitSourcePtrType) ToDeploymentSettingsGitSourcePtrOutputWithContext(ctx context.Context) DeploymentSettingsGitSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentSettingsGitSourcePtrOutput)
}

// Git source settings for a deployment.
type DeploymentSettingsGitSourceOutput struct{ *pulumi.OutputState }

func (DeploymentSettingsGitSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentSettingsGitSource)(nil)).Elem()
}

func (o DeploymentSettingsGitSourceOutput) ToDeploymentSettingsGitSourceOutput() DeploymentSettingsGitSourceOutput {
	return o
}

func (o DeploymentSettingsGitSourceOutput) ToDeploymentSettingsGitSourceOutputWithContext(ctx context.Context) DeploymentSettingsGitSourceOutput {
	return o
}

func (o DeploymentSettingsGitSourceOutput) ToDeploymentSettingsGitSourcePtrOutput() DeploymentSettingsGitSourcePtrOutput {
	return o.ToDeploymentSettingsGitSourcePtrOutputWithContext(context.Background())
}

func (o DeploymentSettingsGitSourceOutput) ToDeploymentSettingsGitSourcePtrOutputWithContext(ctx context.Context) DeploymentSettingsGitSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeploymentSettingsGitSource) *DeploymentSettingsGitSource {
		return &v
	}).(DeploymentSettingsGitSourcePtrOutput)
}

// The branch to deploy. One of either `branch` or `commit` must be specified.
func (o DeploymentSettingsGitSourceOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentSettingsGitSource) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

// The commit to deploy. One of either `branch` or `commit` must be specified.
func (o DeploymentSettingsGitSourceOutput) Commit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentSettingsGitSource) *string { return v.Commit }).(pulumi.StringPtrOutput)
}

// Git authentication configuration for this deployment. Should not be specified if there are `gitHub` settings for this deployment.
func (o DeploymentSettingsGitSourceOutput) GitAuth() DeploymentSettingsGitSourceGitAuthPtrOutput {
	return o.ApplyT(func(v DeploymentSettingsGitSource) *DeploymentSettingsGitSourceGitAuth { return v.GitAuth }).(DeploymentSettingsGitSourceGitAuthPtrOutput)
}

// The directory within the repository where the Pulumi.yaml is located.
func (o DeploymentSettingsGitSourceOutput) RepoDir() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentSettingsGitSource) *string { return v.RepoDir }).(pulumi.StringPtrOutput)
}

// The repository URL to use for git settings. Should not be specified if there are `gitHub` settings for this deployment.
func (o DeploymentSettingsGitSourceOutput) RepoUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentSettingsGitSource) *string { return v.RepoUrl }).(pulumi.StringPtrOutput)
}

type DeploymentSettingsGitSourcePtrOutput struct{ *pulumi.OutputState }

func (DeploymentSettingsGitSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentSettingsGitSource)(nil)).Elem()
}

func (o DeploymentSettingsGitSourcePtrOutput) ToDeploymentSettingsGitSourcePtrOutput() DeploymentSettingsGitSourcePtrOutput {
	return o
}

func (o DeploymentSettingsGitSourcePtrOutput) ToDeploymentSettingsGitSourcePtrOutputWithContext(ctx context.Context) DeploymentSettingsGitSourcePtrOutput {
	return o
}

func (o DeploymentSettingsGitSourcePtrOutput) Elem() DeploymentSettingsGitSourceOutput {
	return o.ApplyT(func(v *DeploymentSettingsGitSource) DeploymentSettingsGitSource {
		if v != nil {
			return *v
		}
		var ret DeploymentSettingsGitSource
		return ret
	}).(DeploymentSettingsGitSourceOutput)
}

// The branch to deploy. One of either `branch` or `commit` must be specified.
func (o DeploymentSettingsGitSourcePtrOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentSettingsGitSource) *string {
		if v == nil {
			return nil
		}
		return v.Branch
	}).(pulumi.StringPtrOutput)
}

// The commit to deploy. One of either `branch` or `commit` must be specified.
func (o DeploymentSettingsGitSourcePtrOutput) Commit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentSettingsGitSource) *string {
		if v == nil {
			return nil
		}
		return v.Commit
	}).(pulumi.StringPtrOutput)
}

// Git authentication configuration for this deployment. Should not be specified if there are `gitHub` settings for this deployment.
func (o DeploymentSettingsGitSourcePtrOutput) GitAuth() DeploymentSettingsGitSourceGitAuthPtrOutput {
	return o.ApplyT(func(v *DeploymentSettingsGitSource) *DeploymentSettingsGitSourceGitAuth {
		if v == nil {
			return nil
		}
		return v.GitAuth
	}).(DeploymentSettingsGitSourceGitAuthPtrOutput)
}

// The directory within the repository where the Pulumi.yaml is located.
func (o DeploymentSettingsGitSourcePtrOutput) RepoDir() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentSettingsGitSource) *string {
		if v == nil {
			return nil
		}
		return v.RepoDir
	}).(pulumi.StringPtrOutput)
}

// The repository URL to use for git settings. Should not be specified if there are `gitHub` settings for this deployment.
func (o DeploymentSettingsGitSourcePtrOutput) RepoUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentSettingsGitSource) *string {
		if v == nil {
			return nil
		}
		return v.RepoUrl
	}).(pulumi.StringPtrOutput)
}

// Git source settings for a deployment.
type DeploymentSettingsGitSourceGitAuth struct {
	// Basic auth for git authentication. Only one of `personalAccessToken`, `sshAuth`, or `basicAuth` must be defined.
	BasicAuth *DeploymentSettingsGitAuthBasicAuth `pulumi:"basicAuth"`
	// SSH auth for git authentication. Only one of `personalAccessToken`, `sshAuth`, or `basicAuth` must be defined.
	SshAuth *DeploymentSettingsGitAuthSSHAuth `pulumi:"sshAuth"`
}

// DeploymentSettingsGitSourceGitAuthInput is an input type that accepts DeploymentSettingsGitSourceGitAuthArgs and DeploymentSettingsGitSourceGitAuthOutput values.
// You can construct a concrete instance of `DeploymentSettingsGitSourceGitAuthInput` via:
//
//	DeploymentSettingsGitSourceGitAuthArgs{...}
type DeploymentSettingsGitSourceGitAuthInput interface {
	pulumi.Input

	ToDeploymentSettingsGitSourceGitAuthOutput() DeploymentSettingsGitSourceGitAuthOutput
	ToDeploymentSettingsGitSourceGitAuthOutputWithContext(context.Context) DeploymentSettingsGitSourceGitAuthOutput
}

// Git source settings for a deployment.
type DeploymentSettingsGitSourceGitAuthArgs struct {
	// Basic auth for git authentication. Only one of `personalAccessToken`, `sshAuth`, or `basicAuth` must be defined.
	BasicAuth DeploymentSettingsGitAuthBasicAuthPtrInput `pulumi:"basicAuth"`
	// SSH auth for git authentication. Only one of `personalAccessToken`, `sshAuth`, or `basicAuth` must be defined.
	SshAuth DeploymentSettingsGitAuthSSHAuthPtrInput `pulumi:"sshAuth"`
}

func (DeploymentSettingsGitSourceGitAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentSettingsGitSourceGitAuth)(nil)).Elem()
}

func (i DeploymentSettingsGitSourceGitAuthArgs) ToDeploymentSettingsGitSourceGitAuthOutput() DeploymentSettingsGitSourceGitAuthOutput {
	return i.ToDeploymentSettingsGitSourceGitAuthOutputWithContext(context.Background())
}

func (i DeploymentSettingsGitSourceGitAuthArgs) ToDeploymentSettingsGitSourceGitAuthOutputWithContext(ctx context.Context) DeploymentSettingsGitSourceGitAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentSettingsGitSourceGitAuthOutput)
}

func (i DeploymentSettingsGitSourceGitAuthArgs) ToDeploymentSettingsGitSourceGitAuthPtrOutput() DeploymentSettingsGitSourceGitAuthPtrOutput {
	return i.ToDeploymentSettingsGitSourceGitAuthPtrOutputWithContext(context.Background())
}

func (i DeploymentSettingsGitSourceGitAuthArgs) ToDeploymentSettingsGitSourceGitAuthPtrOutputWithContext(ctx context.Context) DeploymentSettingsGitSourceGitAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentSettingsGitSourceGitAuthOutput).ToDeploymentSettingsGitSourceGitAuthPtrOutputWithContext(ctx)
}

// DeploymentSettingsGitSourceGitAuthPtrInput is an input type that accepts DeploymentSettingsGitSourceGitAuthArgs, DeploymentSettingsGitSourceGitAuthPtr and DeploymentSettingsGitSourceGitAuthPtrOutput values.
// You can construct a concrete instance of `DeploymentSettingsGitSourceGitAuthPtrInput` via:
//
//	        DeploymentSettingsGitSourceGitAuthArgs{...}
//
//	or:
//
//	        nil
type DeploymentSettingsGitSourceGitAuthPtrInput interface {
	pulumi.Input

	ToDeploymentSettingsGitSourceGitAuthPtrOutput() DeploymentSettingsGitSourceGitAuthPtrOutput
	ToDeploymentSettingsGitSourceGitAuthPtrOutputWithContext(context.Context) DeploymentSettingsGitSourceGitAuthPtrOutput
}

type deploymentSettingsGitSourceGitAuthPtrType DeploymentSettingsGitSourceGitAuthArgs

func DeploymentSettingsGitSourceGitAuthPtr(v *DeploymentSettingsGitSourceGitAuthArgs) DeploymentSettingsGitSourceGitAuthPtrInput {
	return (*deploymentSettingsGitSourceGitAuthPtrType)(v)
}

func (*deploymentSettingsGitSourceGitAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentSettingsGitSourceGitAuth)(nil)).Elem()
}

func (i *deploymentSettingsGitSourceGitAuthPtrType) ToDeploymentSettingsGitSourceGitAuthPtrOutput() DeploymentSettingsGitSourceGitAuthPtrOutput {
	return i.ToDeploymentSettingsGitSourceGitAuthPtrOutputWithContext(context.Background())
}

func (i *deploymentSettingsGitSourceGitAuthPtrType) ToDeploymentSettingsGitSourceGitAuthPtrOutputWithContext(ctx context.Context) DeploymentSettingsGitSourceGitAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentSettingsGitSourceGitAuthPtrOutput)
}

// Git source settings for a deployment.
type DeploymentSettingsGitSourceGitAuthOutput struct{ *pulumi.OutputState }

func (DeploymentSettingsGitSourceGitAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentSettingsGitSourceGitAuth)(nil)).Elem()
}

func (o DeploymentSettingsGitSourceGitAuthOutput) ToDeploymentSettingsGitSourceGitAuthOutput() DeploymentSettingsGitSourceGitAuthOutput {
	return o
}

func (o DeploymentSettingsGitSourceGitAuthOutput) ToDeploymentSettingsGitSourceGitAuthOutputWithContext(ctx context.Context) DeploymentSettingsGitSourceGitAuthOutput {
	return o
}

func (o DeploymentSettingsGitSourceGitAuthOutput) ToDeploymentSettingsGitSourceGitAuthPtrOutput() DeploymentSettingsGitSourceGitAuthPtrOutput {
	return o.ToDeploymentSettingsGitSourceGitAuthPtrOutputWithContext(context.Background())
}

func (o DeploymentSettingsGitSourceGitAuthOutput) ToDeploymentSettingsGitSourceGitAuthPtrOutputWithContext(ctx context.Context) DeploymentSettingsGitSourceGitAuthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeploymentSettingsGitSourceGitAuth) *DeploymentSettingsGitSourceGitAuth {
		return &v
	}).(DeploymentSettingsGitSourceGitAuthPtrOutput)
}

// Basic auth for git authentication. Only one of `personalAccessToken`, `sshAuth`, or `basicAuth` must be defined.
func (o DeploymentSettingsGitSourceGitAuthOutput) BasicAuth() DeploymentSettingsGitAuthBasicAuthPtrOutput {
	return o.ApplyT(func(v DeploymentSettingsGitSourceGitAuth) *DeploymentSettingsGitAuthBasicAuth { return v.BasicAuth }).(DeploymentSettingsGitAuthBasicAuthPtrOutput)
}

// SSH auth for git authentication. Only one of `personalAccessToken`, `sshAuth`, or `basicAuth` must be defined.
func (o DeploymentSettingsGitSourceGitAuthOutput) SshAuth() DeploymentSettingsGitAuthSSHAuthPtrOutput {
	return o.ApplyT(func(v DeploymentSettingsGitSourceGitAuth) *DeploymentSettingsGitAuthSSHAuth { return v.SshAuth }).(DeploymentSettingsGitAuthSSHAuthPtrOutput)
}

type DeploymentSettingsGitSourceGitAuthPtrOutput struct{ *pulumi.OutputState }

func (DeploymentSettingsGitSourceGitAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentSettingsGitSourceGitAuth)(nil)).Elem()
}

func (o DeploymentSettingsGitSourceGitAuthPtrOutput) ToDeploymentSettingsGitSourceGitAuthPtrOutput() DeploymentSettingsGitSourceGitAuthPtrOutput {
	return o
}

func (o DeploymentSettingsGitSourceGitAuthPtrOutput) ToDeploymentSettingsGitSourceGitAuthPtrOutputWithContext(ctx context.Context) DeploymentSettingsGitSourceGitAuthPtrOutput {
	return o
}

func (o DeploymentSettingsGitSourceGitAuthPtrOutput) Elem() DeploymentSettingsGitSourceGitAuthOutput {
	return o.ApplyT(func(v *DeploymentSettingsGitSourceGitAuth) DeploymentSettingsGitSourceGitAuth {
		if v != nil {
			return *v
		}
		var ret DeploymentSettingsGitSourceGitAuth
		return ret
	}).(DeploymentSettingsGitSourceGitAuthOutput)
}

// Basic auth for git authentication. Only one of `personalAccessToken`, `sshAuth`, or `basicAuth` must be defined.
func (o DeploymentSettingsGitSourceGitAuthPtrOutput) BasicAuth() DeploymentSettingsGitAuthBasicAuthPtrOutput {
	return o.ApplyT(func(v *DeploymentSettingsGitSourceGitAuth) *DeploymentSettingsGitAuthBasicAuth {
		if v == nil {
			return nil
		}
		return v.BasicAuth
	}).(DeploymentSettingsGitAuthBasicAuthPtrOutput)
}

// SSH auth for git authentication. Only one of `personalAccessToken`, `sshAuth`, or `basicAuth` must be defined.
func (o DeploymentSettingsGitSourceGitAuthPtrOutput) SshAuth() DeploymentSettingsGitAuthSSHAuthPtrOutput {
	return o.ApplyT(func(v *DeploymentSettingsGitSourceGitAuth) *DeploymentSettingsGitAuthSSHAuth {
		if v == nil {
			return nil
		}
		return v.SshAuth
	}).(DeploymentSettingsGitAuthSSHAuthPtrOutput)
}

// GitHub settings for the deployment.
type DeploymentSettingsGithub struct {
	// Trigger a deployment running `pulumi up` on commit.
	DeployCommits *bool `pulumi:"deployCommits"`
	// The paths within the repo that deployments should be filtered to.
	Paths []string `pulumi:"paths"`
	// Trigger a deployment running `pulumi preview` when a PR is opened.
	PreviewPullRequests *bool `pulumi:"previewPullRequests"`
	// Use this stack as a template for pull request review stacks.
	PullRequestTemplate *bool `pulumi:"pullRequestTemplate"`
	// The GitHub repository in the format org/repo.
	Repository *string `pulumi:"repository"`
}

// Defaults sets the appropriate defaults for DeploymentSettingsGithub
func (val *DeploymentSettingsGithub) Defaults() *DeploymentSettingsGithub {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.DeployCommits == nil {
		deployCommits_ := true
		tmp.DeployCommits = &deployCommits_
	}
	if tmp.PreviewPullRequests == nil {
		previewPullRequests_ := true
		tmp.PreviewPullRequests = &previewPullRequests_
	}
	if tmp.PullRequestTemplate == nil {
		pullRequestTemplate_ := false
		tmp.PullRequestTemplate = &pullRequestTemplate_
	}
	return &tmp
}

// DeploymentSettingsGithubInput is an input type that accepts DeploymentSettingsGithubArgs and DeploymentSettingsGithubOutput values.
// You can construct a concrete instance of `DeploymentSettingsGithubInput` via:
//
//	DeploymentSettingsGithubArgs{...}
type DeploymentSettingsGithubInput interface {
	pulumi.Input

	ToDeploymentSettingsGithubOutput() DeploymentSettingsGithubOutput
	ToDeploymentSettingsGithubOutputWithContext(context.Context) DeploymentSettingsGithubOutput
}

// GitHub settings for the deployment.
type DeploymentSettingsGithubArgs struct {
	// Trigger a deployment running `pulumi up` on commit.
	DeployCommits pulumi.BoolPtrInput `pulumi:"deployCommits"`
	// The paths within the repo that deployments should be filtered to.
	Paths pulumi.StringArrayInput `pulumi:"paths"`
	// Trigger a deployment running `pulumi preview` when a PR is opened.
	PreviewPullRequests pulumi.BoolPtrInput `pulumi:"previewPullRequests"`
	// Use this stack as a template for pull request review stacks.
	PullRequestTemplate pulumi.BoolPtrInput `pulumi:"pullRequestTemplate"`
	// The GitHub repository in the format org/repo.
	Repository pulumi.StringPtrInput `pulumi:"repository"`
}

// Defaults sets the appropriate defaults for DeploymentSettingsGithubArgs
func (val *DeploymentSettingsGithubArgs) Defaults() *DeploymentSettingsGithubArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.DeployCommits == nil {
		tmp.DeployCommits = pulumi.BoolPtr(true)
	}
	if tmp.PreviewPullRequests == nil {
		tmp.PreviewPullRequests = pulumi.BoolPtr(true)
	}
	if tmp.PullRequestTemplate == nil {
		tmp.PullRequestTemplate = pulumi.BoolPtr(false)
	}
	return &tmp
}
func (DeploymentSettingsGithubArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentSettingsGithub)(nil)).Elem()
}

func (i DeploymentSettingsGithubArgs) ToDeploymentSettingsGithubOutput() DeploymentSettingsGithubOutput {
	return i.ToDeploymentSettingsGithubOutputWithContext(context.Background())
}

func (i DeploymentSettingsGithubArgs) ToDeploymentSettingsGithubOutputWithContext(ctx context.Context) DeploymentSettingsGithubOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentSettingsGithubOutput)
}

func (i DeploymentSettingsGithubArgs) ToDeploymentSettingsGithubPtrOutput() DeploymentSettingsGithubPtrOutput {
	return i.ToDeploymentSettingsGithubPtrOutputWithContext(context.Background())
}

func (i DeploymentSettingsGithubArgs) ToDeploymentSettingsGithubPtrOutputWithContext(ctx context.Context) DeploymentSettingsGithubPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentSettingsGithubOutput).ToDeploymentSettingsGithubPtrOutputWithContext(ctx)
}

// DeploymentSettingsGithubPtrInput is an input type that accepts DeploymentSettingsGithubArgs, DeploymentSettingsGithubPtr and DeploymentSettingsGithubPtrOutput values.
// You can construct a concrete instance of `DeploymentSettingsGithubPtrInput` via:
//
//	        DeploymentSettingsGithubArgs{...}
//
//	or:
//
//	        nil
type DeploymentSettingsGithubPtrInput interface {
	pulumi.Input

	ToDeploymentSettingsGithubPtrOutput() DeploymentSettingsGithubPtrOutput
	ToDeploymentSettingsGithubPtrOutputWithContext(context.Context) DeploymentSettingsGithubPtrOutput
}

type deploymentSettingsGithubPtrType DeploymentSettingsGithubArgs

func DeploymentSettingsGithubPtr(v *DeploymentSettingsGithubArgs) DeploymentSettingsGithubPtrInput {
	return (*deploymentSettingsGithubPtrType)(v)
}

func (*deploymentSettingsGithubPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentSettingsGithub)(nil)).Elem()
}

func (i *deploymentSettingsGithubPtrType) ToDeploymentSettingsGithubPtrOutput() DeploymentSettingsGithubPtrOutput {
	return i.ToDeploymentSettingsGithubPtrOutputWithContext(context.Background())
}

func (i *deploymentSettingsGithubPtrType) ToDeploymentSettingsGithubPtrOutputWithContext(ctx context.Context) DeploymentSettingsGithubPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentSettingsGithubPtrOutput)
}

// GitHub settings for the deployment.
type DeploymentSettingsGithubOutput struct{ *pulumi.OutputState }

func (DeploymentSettingsGithubOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentSettingsGithub)(nil)).Elem()
}

func (o DeploymentSettingsGithubOutput) ToDeploymentSettingsGithubOutput() DeploymentSettingsGithubOutput {
	return o
}

func (o DeploymentSettingsGithubOutput) ToDeploymentSettingsGithubOutputWithContext(ctx context.Context) DeploymentSettingsGithubOutput {
	return o
}

func (o DeploymentSettingsGithubOutput) ToDeploymentSettingsGithubPtrOutput() DeploymentSettingsGithubPtrOutput {
	return o.ToDeploymentSettingsGithubPtrOutputWithContext(context.Background())
}

func (o DeploymentSettingsGithubOutput) ToDeploymentSettingsGithubPtrOutputWithContext(ctx context.Context) DeploymentSettingsGithubPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeploymentSettingsGithub) *DeploymentSettingsGithub {
		return &v
	}).(DeploymentSettingsGithubPtrOutput)
}

// Trigger a deployment running `pulumi up` on commit.
func (o DeploymentSettingsGithubOutput) DeployCommits() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeploymentSettingsGithub) *bool { return v.DeployCommits }).(pulumi.BoolPtrOutput)
}

// The paths within the repo that deployments should be filtered to.
func (o DeploymentSettingsGithubOutput) Paths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DeploymentSettingsGithub) []string { return v.Paths }).(pulumi.StringArrayOutput)
}

// Trigger a deployment running `pulumi preview` when a PR is opened.
func (o DeploymentSettingsGithubOutput) PreviewPullRequests() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeploymentSettingsGithub) *bool { return v.PreviewPullRequests }).(pulumi.BoolPtrOutput)
}

// Use this stack as a template for pull request review stacks.
func (o DeploymentSettingsGithubOutput) PullRequestTemplate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeploymentSettingsGithub) *bool { return v.PullRequestTemplate }).(pulumi.BoolPtrOutput)
}

// The GitHub repository in the format org/repo.
func (o DeploymentSettingsGithubOutput) Repository() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentSettingsGithub) *string { return v.Repository }).(pulumi.StringPtrOutput)
}

type DeploymentSettingsGithubPtrOutput struct{ *pulumi.OutputState }

func (DeploymentSettingsGithubPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentSettingsGithub)(nil)).Elem()
}

func (o DeploymentSettingsGithubPtrOutput) ToDeploymentSettingsGithubPtrOutput() DeploymentSettingsGithubPtrOutput {
	return o
}

func (o DeploymentSettingsGithubPtrOutput) ToDeploymentSettingsGithubPtrOutputWithContext(ctx context.Context) DeploymentSettingsGithubPtrOutput {
	return o
}

func (o DeploymentSettingsGithubPtrOutput) Elem() DeploymentSettingsGithubOutput {
	return o.ApplyT(func(v *DeploymentSettingsGithub) DeploymentSettingsGithub {
		if v != nil {
			return *v
		}
		var ret DeploymentSettingsGithub
		return ret
	}).(DeploymentSettingsGithubOutput)
}

// Trigger a deployment running `pulumi up` on commit.
func (o DeploymentSettingsGithubPtrOutput) DeployCommits() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeploymentSettingsGithub) *bool {
		if v == nil {
			return nil
		}
		return v.DeployCommits
	}).(pulumi.BoolPtrOutput)
}

// The paths within the repo that deployments should be filtered to.
func (o DeploymentSettingsGithubPtrOutput) Paths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DeploymentSettingsGithub) []string {
		if v == nil {
			return nil
		}
		return v.Paths
	}).(pulumi.StringArrayOutput)
}

// Trigger a deployment running `pulumi preview` when a PR is opened.
func (o DeploymentSettingsGithubPtrOutput) PreviewPullRequests() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeploymentSettingsGithub) *bool {
		if v == nil {
			return nil
		}
		return v.PreviewPullRequests
	}).(pulumi.BoolPtrOutput)
}

// Use this stack as a template for pull request review stacks.
func (o DeploymentSettingsGithubPtrOutput) PullRequestTemplate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeploymentSettingsGithub) *bool {
		if v == nil {
			return nil
		}
		return v.PullRequestTemplate
	}).(pulumi.BoolPtrOutput)
}

// The GitHub repository in the format org/repo.
func (o DeploymentSettingsGithubPtrOutput) Repository() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentSettingsGithub) *string {
		if v == nil {
			return nil
		}
		return v.Repository
	}).(pulumi.StringPtrOutput)
}

// Settings related to the Pulumi operation environment during the deployment.
type DeploymentSettingsOperationContext struct {
	// Environment variables to set for the deployment.
	EnvironmentVariables map[string]string `pulumi:"environmentVariables"`
	// OIDC configuration to use during the deployment.
	Oidc *OperationContextOIDC `pulumi:"oidc"`
	// Options to override default behavior during the deployment.
	Options *OperationContextOptions `pulumi:"options"`
	// Shell commands to run before the Pulumi operation executes.
	PreRunCommands []string `pulumi:"preRunCommands"`
}

// DeploymentSettingsOperationContextInput is an input type that accepts DeploymentSettingsOperationContextArgs and DeploymentSettingsOperationContextOutput values.
// You can construct a concrete instance of `DeploymentSettingsOperationContextInput` via:
//
//	DeploymentSettingsOperationContextArgs{...}
type DeploymentSettingsOperationContextInput interface {
	pulumi.Input

	ToDeploymentSettingsOperationContextOutput() DeploymentSettingsOperationContextOutput
	ToDeploymentSettingsOperationContextOutputWithContext(context.Context) DeploymentSettingsOperationContextOutput
}

// Settings related to the Pulumi operation environment during the deployment.
type DeploymentSettingsOperationContextArgs struct {
	// Environment variables to set for the deployment.
	EnvironmentVariables pulumi.StringMapInput `pulumi:"environmentVariables"`
	// OIDC configuration to use during the deployment.
	Oidc OperationContextOIDCPtrInput `pulumi:"oidc"`
	// Options to override default behavior during the deployment.
	Options OperationContextOptionsPtrInput `pulumi:"options"`
	// Shell commands to run before the Pulumi operation executes.
	PreRunCommands pulumi.StringArrayInput `pulumi:"preRunCommands"`
}

func (DeploymentSettingsOperationContextArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentSettingsOperationContext)(nil)).Elem()
}

func (i DeploymentSettingsOperationContextArgs) ToDeploymentSettingsOperationContextOutput() DeploymentSettingsOperationContextOutput {
	return i.ToDeploymentSettingsOperationContextOutputWithContext(context.Background())
}

func (i DeploymentSettingsOperationContextArgs) ToDeploymentSettingsOperationContextOutputWithContext(ctx context.Context) DeploymentSettingsOperationContextOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentSettingsOperationContextOutput)
}

func (i DeploymentSettingsOperationContextArgs) ToDeploymentSettingsOperationContextPtrOutput() DeploymentSettingsOperationContextPtrOutput {
	return i.ToDeploymentSettingsOperationContextPtrOutputWithContext(context.Background())
}

func (i DeploymentSettingsOperationContextArgs) ToDeploymentSettingsOperationContextPtrOutputWithContext(ctx context.Context) DeploymentSettingsOperationContextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentSettingsOperationContextOutput).ToDeploymentSettingsOperationContextPtrOutputWithContext(ctx)
}

// DeploymentSettingsOperationContextPtrInput is an input type that accepts DeploymentSettingsOperationContextArgs, DeploymentSettingsOperationContextPtr and DeploymentSettingsOperationContextPtrOutput values.
// You can construct a concrete instance of `DeploymentSettingsOperationContextPtrInput` via:
//
//	        DeploymentSettingsOperationContextArgs{...}
//
//	or:
//
//	        nil
type DeploymentSettingsOperationContextPtrInput interface {
	pulumi.Input

	ToDeploymentSettingsOperationContextPtrOutput() DeploymentSettingsOperationContextPtrOutput
	ToDeploymentSettingsOperationContextPtrOutputWithContext(context.Context) DeploymentSettingsOperationContextPtrOutput
}

type deploymentSettingsOperationContextPtrType DeploymentSettingsOperationContextArgs

func DeploymentSettingsOperationContextPtr(v *DeploymentSettingsOperationContextArgs) DeploymentSettingsOperationContextPtrInput {
	return (*deploymentSettingsOperationContextPtrType)(v)
}

func (*deploymentSettingsOperationContextPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentSettingsOperationContext)(nil)).Elem()
}

func (i *deploymentSettingsOperationContextPtrType) ToDeploymentSettingsOperationContextPtrOutput() DeploymentSettingsOperationContextPtrOutput {
	return i.ToDeploymentSettingsOperationContextPtrOutputWithContext(context.Background())
}

func (i *deploymentSettingsOperationContextPtrType) ToDeploymentSettingsOperationContextPtrOutputWithContext(ctx context.Context) DeploymentSettingsOperationContextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentSettingsOperationContextPtrOutput)
}

// Settings related to the Pulumi operation environment during the deployment.
type DeploymentSettingsOperationContextOutput struct{ *pulumi.OutputState }

func (DeploymentSettingsOperationContextOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentSettingsOperationContext)(nil)).Elem()
}

func (o DeploymentSettingsOperationContextOutput) ToDeploymentSettingsOperationContextOutput() DeploymentSettingsOperationContextOutput {
	return o
}

func (o DeploymentSettingsOperationContextOutput) ToDeploymentSettingsOperationContextOutputWithContext(ctx context.Context) DeploymentSettingsOperationContextOutput {
	return o
}

func (o DeploymentSettingsOperationContextOutput) ToDeploymentSettingsOperationContextPtrOutput() DeploymentSettingsOperationContextPtrOutput {
	return o.ToDeploymentSettingsOperationContextPtrOutputWithContext(context.Background())
}

func (o DeploymentSettingsOperationContextOutput) ToDeploymentSettingsOperationContextPtrOutputWithContext(ctx context.Context) DeploymentSettingsOperationContextPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeploymentSettingsOperationContext) *DeploymentSettingsOperationContext {
		return &v
	}).(DeploymentSettingsOperationContextPtrOutput)
}

// Environment variables to set for the deployment.
func (o DeploymentSettingsOperationContextOutput) EnvironmentVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v DeploymentSettingsOperationContext) map[string]string { return v.EnvironmentVariables }).(pulumi.StringMapOutput)
}

// OIDC configuration to use during the deployment.
func (o DeploymentSettingsOperationContextOutput) Oidc() OperationContextOIDCPtrOutput {
	return o.ApplyT(func(v DeploymentSettingsOperationContext) *OperationContextOIDC { return v.Oidc }).(OperationContextOIDCPtrOutput)
}

// Options to override default behavior during the deployment.
func (o DeploymentSettingsOperationContextOutput) Options() OperationContextOptionsPtrOutput {
	return o.ApplyT(func(v DeploymentSettingsOperationContext) *OperationContextOptions { return v.Options }).(OperationContextOptionsPtrOutput)
}

// Shell commands to run before the Pulumi operation executes.
func (o DeploymentSettingsOperationContextOutput) PreRunCommands() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DeploymentSettingsOperationContext) []string { return v.PreRunCommands }).(pulumi.StringArrayOutput)
}

type DeploymentSettingsOperationContextPtrOutput struct{ *pulumi.OutputState }

func (DeploymentSettingsOperationContextPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentSettingsOperationContext)(nil)).Elem()
}

func (o DeploymentSettingsOperationContextPtrOutput) ToDeploymentSettingsOperationContextPtrOutput() DeploymentSettingsOperationContextPtrOutput {
	return o
}

func (o DeploymentSettingsOperationContextPtrOutput) ToDeploymentSettingsOperationContextPtrOutputWithContext(ctx context.Context) DeploymentSettingsOperationContextPtrOutput {
	return o
}

func (o DeploymentSettingsOperationContextPtrOutput) Elem() DeploymentSettingsOperationContextOutput {
	return o.ApplyT(func(v *DeploymentSettingsOperationContext) DeploymentSettingsOperationContext {
		if v != nil {
			return *v
		}
		var ret DeploymentSettingsOperationContext
		return ret
	}).(DeploymentSettingsOperationContextOutput)
}

// Environment variables to set for the deployment.
func (o DeploymentSettingsOperationContextPtrOutput) EnvironmentVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DeploymentSettingsOperationContext) map[string]string {
		if v == nil {
			return nil
		}
		return v.EnvironmentVariables
	}).(pulumi.StringMapOutput)
}

// OIDC configuration to use during the deployment.
func (o DeploymentSettingsOperationContextPtrOutput) Oidc() OperationContextOIDCPtrOutput {
	return o.ApplyT(func(v *DeploymentSettingsOperationContext) *OperationContextOIDC {
		if v == nil {
			return nil
		}
		return v.Oidc
	}).(OperationContextOIDCPtrOutput)
}

// Options to override default behavior during the deployment.
func (o DeploymentSettingsOperationContextPtrOutput) Options() OperationContextOptionsPtrOutput {
	return o.ApplyT(func(v *DeploymentSettingsOperationContext) *OperationContextOptions {
		if v == nil {
			return nil
		}
		return v.Options
	}).(OperationContextOptionsPtrOutput)
}

// Shell commands to run before the Pulumi operation executes.
func (o DeploymentSettingsOperationContextPtrOutput) PreRunCommands() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DeploymentSettingsOperationContext) []string {
		if v == nil {
			return nil
		}
		return v.PreRunCommands
	}).(pulumi.StringArrayOutput)
}

// Settings related to the source of the deployment.
type DeploymentSettingsSourceContext struct {
	// Git source settings for a deployment.
	Git *DeploymentSettingsGitSource `pulumi:"git"`
}

// DeploymentSettingsSourceContextInput is an input type that accepts DeploymentSettingsSourceContextArgs and DeploymentSettingsSourceContextOutput values.
// You can construct a concrete instance of `DeploymentSettingsSourceContextInput` via:
//
//	DeploymentSettingsSourceContextArgs{...}
type DeploymentSettingsSourceContextInput interface {
	pulumi.Input

	ToDeploymentSettingsSourceContextOutput() DeploymentSettingsSourceContextOutput
	ToDeploymentSettingsSourceContextOutputWithContext(context.Context) DeploymentSettingsSourceContextOutput
}

// Settings related to the source of the deployment.
type DeploymentSettingsSourceContextArgs struct {
	// Git source settings for a deployment.
	Git DeploymentSettingsGitSourcePtrInput `pulumi:"git"`
}

func (DeploymentSettingsSourceContextArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentSettingsSourceContext)(nil)).Elem()
}

func (i DeploymentSettingsSourceContextArgs) ToDeploymentSettingsSourceContextOutput() DeploymentSettingsSourceContextOutput {
	return i.ToDeploymentSettingsSourceContextOutputWithContext(context.Background())
}

func (i DeploymentSettingsSourceContextArgs) ToDeploymentSettingsSourceContextOutputWithContext(ctx context.Context) DeploymentSettingsSourceContextOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentSettingsSourceContextOutput)
}

func (i DeploymentSettingsSourceContextArgs) ToDeploymentSettingsSourceContextPtrOutput() DeploymentSettingsSourceContextPtrOutput {
	return i.ToDeploymentSettingsSourceContextPtrOutputWithContext(context.Background())
}

func (i DeploymentSettingsSourceContextArgs) ToDeploymentSettingsSourceContextPtrOutputWithContext(ctx context.Context) DeploymentSettingsSourceContextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentSettingsSourceContextOutput).ToDeploymentSettingsSourceContextPtrOutputWithContext(ctx)
}

// DeploymentSettingsSourceContextPtrInput is an input type that accepts DeploymentSettingsSourceContextArgs, DeploymentSettingsSourceContextPtr and DeploymentSettingsSourceContextPtrOutput values.
// You can construct a concrete instance of `DeploymentSettingsSourceContextPtrInput` via:
//
//	        DeploymentSettingsSourceContextArgs{...}
//
//	or:
//
//	        nil
type DeploymentSettingsSourceContextPtrInput interface {
	pulumi.Input

	ToDeploymentSettingsSourceContextPtrOutput() DeploymentSettingsSourceContextPtrOutput
	ToDeploymentSettingsSourceContextPtrOutputWithContext(context.Context) DeploymentSettingsSourceContextPtrOutput
}

type deploymentSettingsSourceContextPtrType DeploymentSettingsSourceContextArgs

func DeploymentSettingsSourceContextPtr(v *DeploymentSettingsSourceContextArgs) DeploymentSettingsSourceContextPtrInput {
	return (*deploymentSettingsSourceContextPtrType)(v)
}

func (*deploymentSettingsSourceContextPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentSettingsSourceContext)(nil)).Elem()
}

func (i *deploymentSettingsSourceContextPtrType) ToDeploymentSettingsSourceContextPtrOutput() DeploymentSettingsSourceContextPtrOutput {
	return i.ToDeploymentSettingsSourceContextPtrOutputWithContext(context.Background())
}

func (i *deploymentSettingsSourceContextPtrType) ToDeploymentSettingsSourceContextPtrOutputWithContext(ctx context.Context) DeploymentSettingsSourceContextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentSettingsSourceContextPtrOutput)
}

// Settings related to the source of the deployment.
type DeploymentSettingsSourceContextOutput struct{ *pulumi.OutputState }

func (DeploymentSettingsSourceContextOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentSettingsSourceContext)(nil)).Elem()
}

func (o DeploymentSettingsSourceContextOutput) ToDeploymentSettingsSourceContextOutput() DeploymentSettingsSourceContextOutput {
	return o
}

func (o DeploymentSettingsSourceContextOutput) ToDeploymentSettingsSourceContextOutputWithContext(ctx context.Context) DeploymentSettingsSourceContextOutput {
	return o
}

func (o DeploymentSettingsSourceContextOutput) ToDeploymentSettingsSourceContextPtrOutput() DeploymentSettingsSourceContextPtrOutput {
	return o.ToDeploymentSettingsSourceContextPtrOutputWithContext(context.Background())
}

func (o DeploymentSettingsSourceContextOutput) ToDeploymentSettingsSourceContextPtrOutputWithContext(ctx context.Context) DeploymentSettingsSourceContextPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeploymentSettingsSourceContext) *DeploymentSettingsSourceContext {
		return &v
	}).(DeploymentSettingsSourceContextPtrOutput)
}

// Git source settings for a deployment.
func (o DeploymentSettingsSourceContextOutput) Git() DeploymentSettingsGitSourcePtrOutput {
	return o.ApplyT(func(v DeploymentSettingsSourceContext) *DeploymentSettingsGitSource { return v.Git }).(DeploymentSettingsGitSourcePtrOutput)
}

type DeploymentSettingsSourceContextPtrOutput struct{ *pulumi.OutputState }

func (DeploymentSettingsSourceContextPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentSettingsSourceContext)(nil)).Elem()
}

func (o DeploymentSettingsSourceContextPtrOutput) ToDeploymentSettingsSourceContextPtrOutput() DeploymentSettingsSourceContextPtrOutput {
	return o
}

func (o DeploymentSettingsSourceContextPtrOutput) ToDeploymentSettingsSourceContextPtrOutputWithContext(ctx context.Context) DeploymentSettingsSourceContextPtrOutput {
	return o
}

func (o DeploymentSettingsSourceContextPtrOutput) Elem() DeploymentSettingsSourceContextOutput {
	return o.ApplyT(func(v *DeploymentSettingsSourceContext) DeploymentSettingsSourceContext {
		if v != nil {
			return *v
		}
		var ret DeploymentSettingsSourceContext
		return ret
	}).(DeploymentSettingsSourceContextOutput)
}

// Git source settings for a deployment.
func (o DeploymentSettingsSourceContextPtrOutput) Git() DeploymentSettingsGitSourcePtrOutput {
	return o.ApplyT(func(v *DeploymentSettingsSourceContext) *DeploymentSettingsGitSource {
		if v == nil {
			return nil
		}
		return v.Git
	}).(DeploymentSettingsGitSourcePtrOutput)
}

type EligibleApprover struct {
	// RBAC permission that gives right to approve.
	RbacPermission *RbacPermission `pulumi:"rbacPermission"`
	// Name of the team that can approve.
	TeamName *string `pulumi:"teamName"`
	// Login of the user that can approve.
	User *string `pulumi:"user"`
}

// EligibleApproverInput is an input type that accepts EligibleApproverArgs and EligibleApproverOutput values.
// You can construct a concrete instance of `EligibleApproverInput` via:
//
//	EligibleApproverArgs{...}
type EligibleApproverInput interface {
	pulumi.Input

	ToEligibleApproverOutput() EligibleApproverOutput
	ToEligibleApproverOutputWithContext(context.Context) EligibleApproverOutput
}

type EligibleApproverArgs struct {
	// RBAC permission that gives right to approve.
	RbacPermission RbacPermissionPtrInput `pulumi:"rbacPermission"`
	// Name of the team that can approve.
	TeamName pulumi.StringPtrInput `pulumi:"teamName"`
	// Login of the user that can approve.
	User pulumi.StringPtrInput `pulumi:"user"`
}

func (EligibleApproverArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EligibleApprover)(nil)).Elem()
}

func (i EligibleApproverArgs) ToEligibleApproverOutput() EligibleApproverOutput {
	return i.ToEligibleApproverOutputWithContext(context.Background())
}

func (i EligibleApproverArgs) ToEligibleApproverOutputWithContext(ctx context.Context) EligibleApproverOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EligibleApproverOutput)
}

// EligibleApproverArrayInput is an input type that accepts EligibleApproverArray and EligibleApproverArrayOutput values.
// You can construct a concrete instance of `EligibleApproverArrayInput` via:
//
//	EligibleApproverArray{ EligibleApproverArgs{...} }
type EligibleApproverArrayInput interface {
	pulumi.Input

	ToEligibleApproverArrayOutput() EligibleApproverArrayOutput
	ToEligibleApproverArrayOutputWithContext(context.Context) EligibleApproverArrayOutput
}

type EligibleApproverArray []EligibleApproverInput

func (EligibleApproverArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EligibleApprover)(nil)).Elem()
}

func (i EligibleApproverArray) ToEligibleApproverArrayOutput() EligibleApproverArrayOutput {
	return i.ToEligibleApproverArrayOutputWithContext(context.Background())
}

func (i EligibleApproverArray) ToEligibleApproverArrayOutputWithContext(ctx context.Context) EligibleApproverArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EligibleApproverArrayOutput)
}

type EligibleApproverOutput struct{ *pulumi.OutputState }

func (EligibleApproverOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EligibleApprover)(nil)).Elem()
}

func (o EligibleApproverOutput) ToEligibleApproverOutput() EligibleApproverOutput {
	return o
}

func (o EligibleApproverOutput) ToEligibleApproverOutputWithContext(ctx context.Context) EligibleApproverOutput {
	return o
}

// RBAC permission that gives right to approve.
func (o EligibleApproverOutput) RbacPermission() RbacPermissionPtrOutput {
	return o.ApplyT(func(v EligibleApprover) *RbacPermission { return v.RbacPermission }).(RbacPermissionPtrOutput)
}

// Name of the team that can approve.
func (o EligibleApproverOutput) TeamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EligibleApprover) *string { return v.TeamName }).(pulumi.StringPtrOutput)
}

// Login of the user that can approve.
func (o EligibleApproverOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EligibleApprover) *string { return v.User }).(pulumi.StringPtrOutput)
}

type EligibleApproverArrayOutput struct{ *pulumi.OutputState }

func (EligibleApproverArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EligibleApprover)(nil)).Elem()
}

func (o EligibleApproverArrayOutput) ToEligibleApproverArrayOutput() EligibleApproverArrayOutput {
	return o
}

func (o EligibleApproverArrayOutput) ToEligibleApproverArrayOutputWithContext(ctx context.Context) EligibleApproverArrayOutput {
	return o
}

func (o EligibleApproverArrayOutput) Index(i pulumi.IntInput) EligibleApproverOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EligibleApprover {
		return vs[0].([]EligibleApprover)[vs[1].(int)]
	}).(EligibleApproverOutput)
}

type EnvironmentIdentifier struct {
	// The environment name.
	Name string `pulumi:"name"`
	// The organization name.
	Organization string `pulumi:"organization"`
	// The project name.
	Project string `pulumi:"project"`
}

// EnvironmentIdentifierInput is an input type that accepts EnvironmentIdentifierArgs and EnvironmentIdentifierOutput values.
// You can construct a concrete instance of `EnvironmentIdentifierInput` via:
//
//	EnvironmentIdentifierArgs{...}
type EnvironmentIdentifierInput interface {
	pulumi.Input

	ToEnvironmentIdentifierOutput() EnvironmentIdentifierOutput
	ToEnvironmentIdentifierOutputWithContext(context.Context) EnvironmentIdentifierOutput
}

type EnvironmentIdentifierArgs struct {
	// The environment name.
	Name pulumi.StringInput `pulumi:"name"`
	// The organization name.
	Organization pulumi.StringInput `pulumi:"organization"`
	// The project name.
	Project pulumi.StringInput `pulumi:"project"`
}

func (EnvironmentIdentifierArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentIdentifier)(nil)).Elem()
}

func (i EnvironmentIdentifierArgs) ToEnvironmentIdentifierOutput() EnvironmentIdentifierOutput {
	return i.ToEnvironmentIdentifierOutputWithContext(context.Background())
}

func (i EnvironmentIdentifierArgs) ToEnvironmentIdentifierOutputWithContext(ctx context.Context) EnvironmentIdentifierOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentIdentifierOutput)
}

type EnvironmentIdentifierOutput struct{ *pulumi.OutputState }

func (EnvironmentIdentifierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentIdentifier)(nil)).Elem()
}

func (o EnvironmentIdentifierOutput) ToEnvironmentIdentifierOutput() EnvironmentIdentifierOutput {
	return o
}

func (o EnvironmentIdentifierOutput) ToEnvironmentIdentifierOutputWithContext(ctx context.Context) EnvironmentIdentifierOutput {
	return o
}

// The environment name.
func (o EnvironmentIdentifierOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentIdentifier) string { return v.Name }).(pulumi.StringOutput)
}

// The organization name.
func (o EnvironmentIdentifierOutput) Organization() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentIdentifier) string { return v.Organization }).(pulumi.StringOutput)
}

// The project name.
func (o EnvironmentIdentifierOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentIdentifier) string { return v.Project }).(pulumi.StringOutput)
}

type GCPOIDCConfiguration struct {
	// The numerical ID of the GCP project.
	ProjectId string `pulumi:"projectId"`
	// The ID of the identity provider associated with the workload pool.
	ProviderId string `pulumi:"providerId"`
	// The region of the GCP project.
	Region *string `pulumi:"region"`
	// The email address of the service account to use.
	ServiceAccount string `pulumi:"serviceAccount"`
	// The lifetime of the temporary credentials in “XhYmZs” format.
	TokenLifetime *string `pulumi:"tokenLifetime"`
	// The ID of the workload pool to use.
	WorkloadPoolId string `pulumi:"workloadPoolId"`
}

// GCPOIDCConfigurationInput is an input type that accepts GCPOIDCConfigurationArgs and GCPOIDCConfigurationOutput values.
// You can construct a concrete instance of `GCPOIDCConfigurationInput` via:
//
//	GCPOIDCConfigurationArgs{...}
type GCPOIDCConfigurationInput interface {
	pulumi.Input

	ToGCPOIDCConfigurationOutput() GCPOIDCConfigurationOutput
	ToGCPOIDCConfigurationOutputWithContext(context.Context) GCPOIDCConfigurationOutput
}

type GCPOIDCConfigurationArgs struct {
	// The numerical ID of the GCP project.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
	// The ID of the identity provider associated with the workload pool.
	ProviderId pulumi.StringInput `pulumi:"providerId"`
	// The region of the GCP project.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// The email address of the service account to use.
	ServiceAccount pulumi.StringInput `pulumi:"serviceAccount"`
	// The lifetime of the temporary credentials in “XhYmZs” format.
	TokenLifetime pulumi.StringPtrInput `pulumi:"tokenLifetime"`
	// The ID of the workload pool to use.
	WorkloadPoolId pulumi.StringInput `pulumi:"workloadPoolId"`
}

func (GCPOIDCConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GCPOIDCConfiguration)(nil)).Elem()
}

func (i GCPOIDCConfigurationArgs) ToGCPOIDCConfigurationOutput() GCPOIDCConfigurationOutput {
	return i.ToGCPOIDCConfigurationOutputWithContext(context.Background())
}

func (i GCPOIDCConfigurationArgs) ToGCPOIDCConfigurationOutputWithContext(ctx context.Context) GCPOIDCConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GCPOIDCConfigurationOutput)
}

func (i GCPOIDCConfigurationArgs) ToGCPOIDCConfigurationPtrOutput() GCPOIDCConfigurationPtrOutput {
	return i.ToGCPOIDCConfigurationPtrOutputWithContext(context.Background())
}

func (i GCPOIDCConfigurationArgs) ToGCPOIDCConfigurationPtrOutputWithContext(ctx context.Context) GCPOIDCConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GCPOIDCConfigurationOutput).ToGCPOIDCConfigurationPtrOutputWithContext(ctx)
}

// GCPOIDCConfigurationPtrInput is an input type that accepts GCPOIDCConfigurationArgs, GCPOIDCConfigurationPtr and GCPOIDCConfigurationPtrOutput values.
// You can construct a concrete instance of `GCPOIDCConfigurationPtrInput` via:
//
//	        GCPOIDCConfigurationArgs{...}
//
//	or:
//
//	        nil
type GCPOIDCConfigurationPtrInput interface {
	pulumi.Input

	ToGCPOIDCConfigurationPtrOutput() GCPOIDCConfigurationPtrOutput
	ToGCPOIDCConfigurationPtrOutputWithContext(context.Context) GCPOIDCConfigurationPtrOutput
}

type gcpoidcconfigurationPtrType GCPOIDCConfigurationArgs

func GCPOIDCConfigurationPtr(v *GCPOIDCConfigurationArgs) GCPOIDCConfigurationPtrInput {
	return (*gcpoidcconfigurationPtrType)(v)
}

func (*gcpoidcconfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GCPOIDCConfiguration)(nil)).Elem()
}

func (i *gcpoidcconfigurationPtrType) ToGCPOIDCConfigurationPtrOutput() GCPOIDCConfigurationPtrOutput {
	return i.ToGCPOIDCConfigurationPtrOutputWithContext(context.Background())
}

func (i *gcpoidcconfigurationPtrType) ToGCPOIDCConfigurationPtrOutputWithContext(ctx context.Context) GCPOIDCConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GCPOIDCConfigurationPtrOutput)
}

type GCPOIDCConfigurationOutput struct{ *pulumi.OutputState }

func (GCPOIDCConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GCPOIDCConfiguration)(nil)).Elem()
}

func (o GCPOIDCConfigurationOutput) ToGCPOIDCConfigurationOutput() GCPOIDCConfigurationOutput {
	return o
}

func (o GCPOIDCConfigurationOutput) ToGCPOIDCConfigurationOutputWithContext(ctx context.Context) GCPOIDCConfigurationOutput {
	return o
}

func (o GCPOIDCConfigurationOutput) ToGCPOIDCConfigurationPtrOutput() GCPOIDCConfigurationPtrOutput {
	return o.ToGCPOIDCConfigurationPtrOutputWithContext(context.Background())
}

func (o GCPOIDCConfigurationOutput) ToGCPOIDCConfigurationPtrOutputWithContext(ctx context.Context) GCPOIDCConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GCPOIDCConfiguration) *GCPOIDCConfiguration {
		return &v
	}).(GCPOIDCConfigurationPtrOutput)
}

// The numerical ID of the GCP project.
func (o GCPOIDCConfigurationOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GCPOIDCConfiguration) string { return v.ProjectId }).(pulumi.StringOutput)
}

// The ID of the identity provider associated with the workload pool.
func (o GCPOIDCConfigurationOutput) ProviderId() pulumi.StringOutput {
	return o.ApplyT(func(v GCPOIDCConfiguration) string { return v.ProviderId }).(pulumi.StringOutput)
}

// The region of the GCP project.
func (o GCPOIDCConfigurationOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GCPOIDCConfiguration) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// The email address of the service account to use.
func (o GCPOIDCConfigurationOutput) ServiceAccount() pulumi.StringOutput {
	return o.ApplyT(func(v GCPOIDCConfiguration) string { return v.ServiceAccount }).(pulumi.StringOutput)
}

// The lifetime of the temporary credentials in “XhYmZs” format.
func (o GCPOIDCConfigurationOutput) TokenLifetime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GCPOIDCConfiguration) *string { return v.TokenLifetime }).(pulumi.StringPtrOutput)
}

// The ID of the workload pool to use.
func (o GCPOIDCConfigurationOutput) WorkloadPoolId() pulumi.StringOutput {
	return o.ApplyT(func(v GCPOIDCConfiguration) string { return v.WorkloadPoolId }).(pulumi.StringOutput)
}

type GCPOIDCConfigurationPtrOutput struct{ *pulumi.OutputState }

func (GCPOIDCConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GCPOIDCConfiguration)(nil)).Elem()
}

func (o GCPOIDCConfigurationPtrOutput) ToGCPOIDCConfigurationPtrOutput() GCPOIDCConfigurationPtrOutput {
	return o
}

func (o GCPOIDCConfigurationPtrOutput) ToGCPOIDCConfigurationPtrOutputWithContext(ctx context.Context) GCPOIDCConfigurationPtrOutput {
	return o
}

func (o GCPOIDCConfigurationPtrOutput) Elem() GCPOIDCConfigurationOutput {
	return o.ApplyT(func(v *GCPOIDCConfiguration) GCPOIDCConfiguration {
		if v != nil {
			return *v
		}
		var ret GCPOIDCConfiguration
		return ret
	}).(GCPOIDCConfigurationOutput)
}

// The numerical ID of the GCP project.
func (o GCPOIDCConfigurationPtrOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GCPOIDCConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.ProjectId
	}).(pulumi.StringPtrOutput)
}

// The ID of the identity provider associated with the workload pool.
func (o GCPOIDCConfigurationPtrOutput) ProviderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GCPOIDCConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.ProviderId
	}).(pulumi.StringPtrOutput)
}

// The region of the GCP project.
func (o GCPOIDCConfigurationPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GCPOIDCConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

// The email address of the service account to use.
func (o GCPOIDCConfigurationPtrOutput) ServiceAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GCPOIDCConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.ServiceAccount
	}).(pulumi.StringPtrOutput)
}

// The lifetime of the temporary credentials in “XhYmZs” format.
func (o GCPOIDCConfigurationPtrOutput) TokenLifetime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GCPOIDCConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.TokenLifetime
	}).(pulumi.StringPtrOutput)
}

// The ID of the workload pool to use.
func (o GCPOIDCConfigurationPtrOutput) WorkloadPoolId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GCPOIDCConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.WorkloadPoolId
	}).(pulumi.StringPtrOutput)
}

type OperationContextOIDC struct {
	// AWS-specific OIDC configuration.
	Aws *AWSOIDCConfiguration `pulumi:"aws"`
	// Azure-specific OIDC configuration.
	Azure *AzureOIDCConfiguration `pulumi:"azure"`
	// GCP-specific OIDC configuration.
	Gcp *GCPOIDCConfiguration `pulumi:"gcp"`
}

// OperationContextOIDCInput is an input type that accepts OperationContextOIDCArgs and OperationContextOIDCOutput values.
// You can construct a concrete instance of `OperationContextOIDCInput` via:
//
//	OperationContextOIDCArgs{...}
type OperationContextOIDCInput interface {
	pulumi.Input

	ToOperationContextOIDCOutput() OperationContextOIDCOutput
	ToOperationContextOIDCOutputWithContext(context.Context) OperationContextOIDCOutput
}

type OperationContextOIDCArgs struct {
	// AWS-specific OIDC configuration.
	Aws AWSOIDCConfigurationPtrInput `pulumi:"aws"`
	// Azure-specific OIDC configuration.
	Azure AzureOIDCConfigurationPtrInput `pulumi:"azure"`
	// GCP-specific OIDC configuration.
	Gcp GCPOIDCConfigurationPtrInput `pulumi:"gcp"`
}

func (OperationContextOIDCArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OperationContextOIDC)(nil)).Elem()
}

func (i OperationContextOIDCArgs) ToOperationContextOIDCOutput() OperationContextOIDCOutput {
	return i.ToOperationContextOIDCOutputWithContext(context.Background())
}

func (i OperationContextOIDCArgs) ToOperationContextOIDCOutputWithContext(ctx context.Context) OperationContextOIDCOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OperationContextOIDCOutput)
}

func (i OperationContextOIDCArgs) ToOperationContextOIDCPtrOutput() OperationContextOIDCPtrOutput {
	return i.ToOperationContextOIDCPtrOutputWithContext(context.Background())
}

func (i OperationContextOIDCArgs) ToOperationContextOIDCPtrOutputWithContext(ctx context.Context) OperationContextOIDCPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OperationContextOIDCOutput).ToOperationContextOIDCPtrOutputWithContext(ctx)
}

// OperationContextOIDCPtrInput is an input type that accepts OperationContextOIDCArgs, OperationContextOIDCPtr and OperationContextOIDCPtrOutput values.
// You can construct a concrete instance of `OperationContextOIDCPtrInput` via:
//
//	        OperationContextOIDCArgs{...}
//
//	or:
//
//	        nil
type OperationContextOIDCPtrInput interface {
	pulumi.Input

	ToOperationContextOIDCPtrOutput() OperationContextOIDCPtrOutput
	ToOperationContextOIDCPtrOutputWithContext(context.Context) OperationContextOIDCPtrOutput
}

type operationContextOIDCPtrType OperationContextOIDCArgs

func OperationContextOIDCPtr(v *OperationContextOIDCArgs) OperationContextOIDCPtrInput {
	return (*operationContextOIDCPtrType)(v)
}

func (*operationContextOIDCPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OperationContextOIDC)(nil)).Elem()
}

func (i *operationContextOIDCPtrType) ToOperationContextOIDCPtrOutput() OperationContextOIDCPtrOutput {
	return i.ToOperationContextOIDCPtrOutputWithContext(context.Background())
}

func (i *operationContextOIDCPtrType) ToOperationContextOIDCPtrOutputWithContext(ctx context.Context) OperationContextOIDCPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OperationContextOIDCPtrOutput)
}

type OperationContextOIDCOutput struct{ *pulumi.OutputState }

func (OperationContextOIDCOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OperationContextOIDC)(nil)).Elem()
}

func (o OperationContextOIDCOutput) ToOperationContextOIDCOutput() OperationContextOIDCOutput {
	return o
}

func (o OperationContextOIDCOutput) ToOperationContextOIDCOutputWithContext(ctx context.Context) OperationContextOIDCOutput {
	return o
}

func (o OperationContextOIDCOutput) ToOperationContextOIDCPtrOutput() OperationContextOIDCPtrOutput {
	return o.ToOperationContextOIDCPtrOutputWithContext(context.Background())
}

func (o OperationContextOIDCOutput) ToOperationContextOIDCPtrOutputWithContext(ctx context.Context) OperationContextOIDCPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OperationContextOIDC) *OperationContextOIDC {
		return &v
	}).(OperationContextOIDCPtrOutput)
}

// AWS-specific OIDC configuration.
func (o OperationContextOIDCOutput) Aws() AWSOIDCConfigurationPtrOutput {
	return o.ApplyT(func(v OperationContextOIDC) *AWSOIDCConfiguration { return v.Aws }).(AWSOIDCConfigurationPtrOutput)
}

// Azure-specific OIDC configuration.
func (o OperationContextOIDCOutput) Azure() AzureOIDCConfigurationPtrOutput {
	return o.ApplyT(func(v OperationContextOIDC) *AzureOIDCConfiguration { return v.Azure }).(AzureOIDCConfigurationPtrOutput)
}

// GCP-specific OIDC configuration.
func (o OperationContextOIDCOutput) Gcp() GCPOIDCConfigurationPtrOutput {
	return o.ApplyT(func(v OperationContextOIDC) *GCPOIDCConfiguration { return v.Gcp }).(GCPOIDCConfigurationPtrOutput)
}

type OperationContextOIDCPtrOutput struct{ *pulumi.OutputState }

func (OperationContextOIDCPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OperationContextOIDC)(nil)).Elem()
}

func (o OperationContextOIDCPtrOutput) ToOperationContextOIDCPtrOutput() OperationContextOIDCPtrOutput {
	return o
}

func (o OperationContextOIDCPtrOutput) ToOperationContextOIDCPtrOutputWithContext(ctx context.Context) OperationContextOIDCPtrOutput {
	return o
}

func (o OperationContextOIDCPtrOutput) Elem() OperationContextOIDCOutput {
	return o.ApplyT(func(v *OperationContextOIDC) OperationContextOIDC {
		if v != nil {
			return *v
		}
		var ret OperationContextOIDC
		return ret
	}).(OperationContextOIDCOutput)
}

// AWS-specific OIDC configuration.
func (o OperationContextOIDCPtrOutput) Aws() AWSOIDCConfigurationPtrOutput {
	return o.ApplyT(func(v *OperationContextOIDC) *AWSOIDCConfiguration {
		if v == nil {
			return nil
		}
		return v.Aws
	}).(AWSOIDCConfigurationPtrOutput)
}

// Azure-specific OIDC configuration.
func (o OperationContextOIDCPtrOutput) Azure() AzureOIDCConfigurationPtrOutput {
	return o.ApplyT(func(v *OperationContextOIDC) *AzureOIDCConfiguration {
		if v == nil {
			return nil
		}
		return v.Azure
	}).(AzureOIDCConfigurationPtrOutput)
}

// GCP-specific OIDC configuration.
func (o OperationContextOIDCPtrOutput) Gcp() GCPOIDCConfigurationPtrOutput {
	return o.ApplyT(func(v *OperationContextOIDC) *GCPOIDCConfiguration {
		if v == nil {
			return nil
		}
		return v.Gcp
	}).(GCPOIDCConfigurationPtrOutput)
}

type OperationContextOptions struct {
	// Whether the stack should be deleted after it is destroyed.
	DeleteAfterDestroy *bool `pulumi:"deleteAfterDestroy"`
	// The shell to use to run commands during the deployment. Defaults to 'bash'.
	Shell *string `pulumi:"shell"`
	// Skip the default dependency installation step - use this to customize the dependency installation (e.g. if using yarn or poetry)
	SkipInstallDependencies *bool `pulumi:"skipInstallDependencies"`
	// Skip intermediate deployments (Consolidate multiple deployments of the same type into one deployment)
	SkipIntermediateDeployments *bool `pulumi:"skipIntermediateDeployments"`
}

// OperationContextOptionsInput is an input type that accepts OperationContextOptionsArgs and OperationContextOptionsOutput values.
// You can construct a concrete instance of `OperationContextOptionsInput` via:
//
//	OperationContextOptionsArgs{...}
type OperationContextOptionsInput interface {
	pulumi.Input

	ToOperationContextOptionsOutput() OperationContextOptionsOutput
	ToOperationContextOptionsOutputWithContext(context.Context) OperationContextOptionsOutput
}

type OperationContextOptionsArgs struct {
	// Whether the stack should be deleted after it is destroyed.
	DeleteAfterDestroy pulumi.BoolPtrInput `pulumi:"deleteAfterDestroy"`
	// The shell to use to run commands during the deployment. Defaults to 'bash'.
	Shell pulumi.StringPtrInput `pulumi:"shell"`
	// Skip the default dependency installation step - use this to customize the dependency installation (e.g. if using yarn or poetry)
	SkipInstallDependencies pulumi.BoolPtrInput `pulumi:"skipInstallDependencies"`
	// Skip intermediate deployments (Consolidate multiple deployments of the same type into one deployment)
	SkipIntermediateDeployments pulumi.BoolPtrInput `pulumi:"skipIntermediateDeployments"`
}

func (OperationContextOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OperationContextOptions)(nil)).Elem()
}

func (i OperationContextOptionsArgs) ToOperationContextOptionsOutput() OperationContextOptionsOutput {
	return i.ToOperationContextOptionsOutputWithContext(context.Background())
}

func (i OperationContextOptionsArgs) ToOperationContextOptionsOutputWithContext(ctx context.Context) OperationContextOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OperationContextOptionsOutput)
}

func (i OperationContextOptionsArgs) ToOperationContextOptionsPtrOutput() OperationContextOptionsPtrOutput {
	return i.ToOperationContextOptionsPtrOutputWithContext(context.Background())
}

func (i OperationContextOptionsArgs) ToOperationContextOptionsPtrOutputWithContext(ctx context.Context) OperationContextOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OperationContextOptionsOutput).ToOperationContextOptionsPtrOutputWithContext(ctx)
}

// OperationContextOptionsPtrInput is an input type that accepts OperationContextOptionsArgs, OperationContextOptionsPtr and OperationContextOptionsPtrOutput values.
// You can construct a concrete instance of `OperationContextOptionsPtrInput` via:
//
//	        OperationContextOptionsArgs{...}
//
//	or:
//
//	        nil
type OperationContextOptionsPtrInput interface {
	pulumi.Input

	ToOperationContextOptionsPtrOutput() OperationContextOptionsPtrOutput
	ToOperationContextOptionsPtrOutputWithContext(context.Context) OperationContextOptionsPtrOutput
}

type operationContextOptionsPtrType OperationContextOptionsArgs

func OperationContextOptionsPtr(v *OperationContextOptionsArgs) OperationContextOptionsPtrInput {
	return (*operationContextOptionsPtrType)(v)
}

func (*operationContextOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OperationContextOptions)(nil)).Elem()
}

func (i *operationContextOptionsPtrType) ToOperationContextOptionsPtrOutput() OperationContextOptionsPtrOutput {
	return i.ToOperationContextOptionsPtrOutputWithContext(context.Background())
}

func (i *operationContextOptionsPtrType) ToOperationContextOptionsPtrOutputWithContext(ctx context.Context) OperationContextOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OperationContextOptionsPtrOutput)
}

type OperationContextOptionsOutput struct{ *pulumi.OutputState }

func (OperationContextOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OperationContextOptions)(nil)).Elem()
}

func (o OperationContextOptionsOutput) ToOperationContextOptionsOutput() OperationContextOptionsOutput {
	return o
}

func (o OperationContextOptionsOutput) ToOperationContextOptionsOutputWithContext(ctx context.Context) OperationContextOptionsOutput {
	return o
}

func (o OperationContextOptionsOutput) ToOperationContextOptionsPtrOutput() OperationContextOptionsPtrOutput {
	return o.ToOperationContextOptionsPtrOutputWithContext(context.Background())
}

func (o OperationContextOptionsOutput) ToOperationContextOptionsPtrOutputWithContext(ctx context.Context) OperationContextOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OperationContextOptions) *OperationContextOptions {
		return &v
	}).(OperationContextOptionsPtrOutput)
}

// Whether the stack should be deleted after it is destroyed.
func (o OperationContextOptionsOutput) DeleteAfterDestroy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OperationContextOptions) *bool { return v.DeleteAfterDestroy }).(pulumi.BoolPtrOutput)
}

// The shell to use to run commands during the deployment. Defaults to 'bash'.
func (o OperationContextOptionsOutput) Shell() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OperationContextOptions) *string { return v.Shell }).(pulumi.StringPtrOutput)
}

// Skip the default dependency installation step - use this to customize the dependency installation (e.g. if using yarn or poetry)
func (o OperationContextOptionsOutput) SkipInstallDependencies() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OperationContextOptions) *bool { return v.SkipInstallDependencies }).(pulumi.BoolPtrOutput)
}

// Skip intermediate deployments (Consolidate multiple deployments of the same type into one deployment)
func (o OperationContextOptionsOutput) SkipIntermediateDeployments() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OperationContextOptions) *bool { return v.SkipIntermediateDeployments }).(pulumi.BoolPtrOutput)
}

type OperationContextOptionsPtrOutput struct{ *pulumi.OutputState }

func (OperationContextOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OperationContextOptions)(nil)).Elem()
}

func (o OperationContextOptionsPtrOutput) ToOperationContextOptionsPtrOutput() OperationContextOptionsPtrOutput {
	return o
}

func (o OperationContextOptionsPtrOutput) ToOperationContextOptionsPtrOutputWithContext(ctx context.Context) OperationContextOptionsPtrOutput {
	return o
}

func (o OperationContextOptionsPtrOutput) Elem() OperationContextOptionsOutput {
	return o.ApplyT(func(v *OperationContextOptions) OperationContextOptions {
		if v != nil {
			return *v
		}
		var ret OperationContextOptions
		return ret
	}).(OperationContextOptionsOutput)
}

// Whether the stack should be deleted after it is destroyed.
func (o OperationContextOptionsPtrOutput) DeleteAfterDestroy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OperationContextOptions) *bool {
		if v == nil {
			return nil
		}
		return v.DeleteAfterDestroy
	}).(pulumi.BoolPtrOutput)
}

// The shell to use to run commands during the deployment. Defaults to 'bash'.
func (o OperationContextOptionsPtrOutput) Shell() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OperationContextOptions) *string {
		if v == nil {
			return nil
		}
		return v.Shell
	}).(pulumi.StringPtrOutput)
}

// Skip the default dependency installation step - use this to customize the dependency installation (e.g. if using yarn or poetry)
func (o OperationContextOptionsPtrOutput) SkipInstallDependencies() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OperationContextOptions) *bool {
		if v == nil {
			return nil
		}
		return v.SkipInstallDependencies
	}).(pulumi.BoolPtrOutput)
}

// Skip intermediate deployments (Consolidate multiple deployments of the same type into one deployment)
func (o OperationContextOptionsPtrOutput) SkipIntermediateDeployments() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OperationContextOptions) *bool {
		if v == nil {
			return nil
		}
		return v.SkipIntermediateDeployments
	}).(pulumi.BoolPtrOutput)
}

// An item that belongs to a service (stack or environment).
type ServiceItem struct {
	// The type of item (stack or environment).
	ItemType string `pulumi:"itemType"`
	// The name of the item (format: org/project/stackOrEnv).
	Name string `pulumi:"name"`
}

// ServiceItemInput is an input type that accepts ServiceItemArgs and ServiceItemOutput values.
// You can construct a concrete instance of `ServiceItemInput` via:
//
//	ServiceItemArgs{...}
type ServiceItemInput interface {
	pulumi.Input

	ToServiceItemOutput() ServiceItemOutput
	ToServiceItemOutputWithContext(context.Context) ServiceItemOutput
}

// An item that belongs to a service (stack or environment).
type ServiceItemArgs struct {
	// The type of item (stack or environment).
	ItemType pulumi.StringInput `pulumi:"itemType"`
	// The name of the item (format: org/project/stackOrEnv).
	Name pulumi.StringInput `pulumi:"name"`
}

func (ServiceItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceItem)(nil)).Elem()
}

func (i ServiceItemArgs) ToServiceItemOutput() ServiceItemOutput {
	return i.ToServiceItemOutputWithContext(context.Background())
}

func (i ServiceItemArgs) ToServiceItemOutputWithContext(ctx context.Context) ServiceItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceItemOutput)
}

// ServiceItemArrayInput is an input type that accepts ServiceItemArray and ServiceItemArrayOutput values.
// You can construct a concrete instance of `ServiceItemArrayInput` via:
//
//	ServiceItemArray{ ServiceItemArgs{...} }
type ServiceItemArrayInput interface {
	pulumi.Input

	ToServiceItemArrayOutput() ServiceItemArrayOutput
	ToServiceItemArrayOutputWithContext(context.Context) ServiceItemArrayOutput
}

type ServiceItemArray []ServiceItemInput

func (ServiceItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceItem)(nil)).Elem()
}

func (i ServiceItemArray) ToServiceItemArrayOutput() ServiceItemArrayOutput {
	return i.ToServiceItemArrayOutputWithContext(context.Background())
}

func (i ServiceItemArray) ToServiceItemArrayOutputWithContext(ctx context.Context) ServiceItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceItemArrayOutput)
}

// An item that belongs to a service (stack or environment).
type ServiceItemOutput struct{ *pulumi.OutputState }

func (ServiceItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceItem)(nil)).Elem()
}

func (o ServiceItemOutput) ToServiceItemOutput() ServiceItemOutput {
	return o
}

func (o ServiceItemOutput) ToServiceItemOutputWithContext(ctx context.Context) ServiceItemOutput {
	return o
}

// The type of item (stack or environment).
func (o ServiceItemOutput) ItemType() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceItem) string { return v.ItemType }).(pulumi.StringOutput)
}

// The name of the item (format: org/project/stackOrEnv).
func (o ServiceItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceItem) string { return v.Name }).(pulumi.StringOutput)
}

type ServiceItemArrayOutput struct{ *pulumi.OutputState }

func (ServiceItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceItem)(nil)).Elem()
}

func (o ServiceItemArrayOutput) ToServiceItemArrayOutput() ServiceItemArrayOutput {
	return o
}

func (o ServiceItemArrayOutput) ToServiceItemArrayOutputWithContext(ctx context.Context) ServiceItemArrayOutput {
	return o
}

func (o ServiceItemArrayOutput) Index(i pulumi.IntInput) ServiceItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceItem {
		return vs[0].([]ServiceItem)[vs[1].(int)]
	}).(ServiceItemOutput)
}

type TemplateSourceDestination struct {
	// Destination URL that gets filled in on new project creation.
	Url *string `pulumi:"url"`
}

// TemplateSourceDestinationInput is an input type that accepts TemplateSourceDestinationArgs and TemplateSourceDestinationOutput values.
// You can construct a concrete instance of `TemplateSourceDestinationInput` via:
//
//	TemplateSourceDestinationArgs{...}
type TemplateSourceDestinationInput interface {
	pulumi.Input

	ToTemplateSourceDestinationOutput() TemplateSourceDestinationOutput
	ToTemplateSourceDestinationOutputWithContext(context.Context) TemplateSourceDestinationOutput
}

type TemplateSourceDestinationArgs struct {
	// Destination URL that gets filled in on new project creation.
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (TemplateSourceDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSourceDestination)(nil)).Elem()
}

func (i TemplateSourceDestinationArgs) ToTemplateSourceDestinationOutput() TemplateSourceDestinationOutput {
	return i.ToTemplateSourceDestinationOutputWithContext(context.Background())
}

func (i TemplateSourceDestinationArgs) ToTemplateSourceDestinationOutputWithContext(ctx context.Context) TemplateSourceDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSourceDestinationOutput)
}

func (i TemplateSourceDestinationArgs) ToTemplateSourceDestinationPtrOutput() TemplateSourceDestinationPtrOutput {
	return i.ToTemplateSourceDestinationPtrOutputWithContext(context.Background())
}

func (i TemplateSourceDestinationArgs) ToTemplateSourceDestinationPtrOutputWithContext(ctx context.Context) TemplateSourceDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSourceDestinationOutput).ToTemplateSourceDestinationPtrOutputWithContext(ctx)
}

// TemplateSourceDestinationPtrInput is an input type that accepts TemplateSourceDestinationArgs, TemplateSourceDestinationPtr and TemplateSourceDestinationPtrOutput values.
// You can construct a concrete instance of `TemplateSourceDestinationPtrInput` via:
//
//	        TemplateSourceDestinationArgs{...}
//
//	or:
//
//	        nil
type TemplateSourceDestinationPtrInput interface {
	pulumi.Input

	ToTemplateSourceDestinationPtrOutput() TemplateSourceDestinationPtrOutput
	ToTemplateSourceDestinationPtrOutputWithContext(context.Context) TemplateSourceDestinationPtrOutput
}

type templateSourceDestinationPtrType TemplateSourceDestinationArgs

func TemplateSourceDestinationPtr(v *TemplateSourceDestinationArgs) TemplateSourceDestinationPtrInput {
	return (*templateSourceDestinationPtrType)(v)
}

func (*templateSourceDestinationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateSourceDestination)(nil)).Elem()
}

func (i *templateSourceDestinationPtrType) ToTemplateSourceDestinationPtrOutput() TemplateSourceDestinationPtrOutput {
	return i.ToTemplateSourceDestinationPtrOutputWithContext(context.Background())
}

func (i *templateSourceDestinationPtrType) ToTemplateSourceDestinationPtrOutputWithContext(ctx context.Context) TemplateSourceDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSourceDestinationPtrOutput)
}

type TemplateSourceDestinationOutput struct{ *pulumi.OutputState }

func (TemplateSourceDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSourceDestination)(nil)).Elem()
}

func (o TemplateSourceDestinationOutput) ToTemplateSourceDestinationOutput() TemplateSourceDestinationOutput {
	return o
}

func (o TemplateSourceDestinationOutput) ToTemplateSourceDestinationOutputWithContext(ctx context.Context) TemplateSourceDestinationOutput {
	return o
}

func (o TemplateSourceDestinationOutput) ToTemplateSourceDestinationPtrOutput() TemplateSourceDestinationPtrOutput {
	return o.ToTemplateSourceDestinationPtrOutputWithContext(context.Background())
}

func (o TemplateSourceDestinationOutput) ToTemplateSourceDestinationPtrOutputWithContext(ctx context.Context) TemplateSourceDestinationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateSourceDestination) *TemplateSourceDestination {
		return &v
	}).(TemplateSourceDestinationPtrOutput)
}

// Destination URL that gets filled in on new project creation.
func (o TemplateSourceDestinationOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateSourceDestination) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type TemplateSourceDestinationPtrOutput struct{ *pulumi.OutputState }

func (TemplateSourceDestinationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateSourceDestination)(nil)).Elem()
}

func (o TemplateSourceDestinationPtrOutput) ToTemplateSourceDestinationPtrOutput() TemplateSourceDestinationPtrOutput {
	return o
}

func (o TemplateSourceDestinationPtrOutput) ToTemplateSourceDestinationPtrOutputWithContext(ctx context.Context) TemplateSourceDestinationPtrOutput {
	return o
}

func (o TemplateSourceDestinationPtrOutput) Elem() TemplateSourceDestinationOutput {
	return o.ApplyT(func(v *TemplateSourceDestination) TemplateSourceDestination {
		if v != nil {
			return *v
		}
		var ret TemplateSourceDestination
		return ret
	}).(TemplateSourceDestinationOutput)
}

// Destination URL that gets filled in on new project creation.
func (o TemplateSourceDestinationPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateSourceDestination) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AWSOIDCConfigurationInput)(nil)).Elem(), AWSOIDCConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AWSOIDCConfigurationPtrInput)(nil)).Elem(), AWSOIDCConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApprovalRuleConfigInput)(nil)).Elem(), ApprovalRuleConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthPolicyDefinitionInput)(nil)).Elem(), AuthPolicyDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthPolicyDefinitionArrayInput)(nil)).Elem(), AuthPolicyDefinitionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureOIDCConfigurationInput)(nil)).Elem(), AzureOIDCConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureOIDCConfigurationPtrInput)(nil)).Elem(), AzureOIDCConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentSettingsCacheOptionsInput)(nil)).Elem(), DeploymentSettingsCacheOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentSettingsCacheOptionsPtrInput)(nil)).Elem(), DeploymentSettingsCacheOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentSettingsExecutorContextInput)(nil)).Elem(), DeploymentSettingsExecutorContextArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentSettingsExecutorContextPtrInput)(nil)).Elem(), DeploymentSettingsExecutorContextArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentSettingsGitAuthBasicAuthInput)(nil)).Elem(), DeploymentSettingsGitAuthBasicAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentSettingsGitAuthBasicAuthPtrInput)(nil)).Elem(), DeploymentSettingsGitAuthBasicAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentSettingsGitAuthSSHAuthInput)(nil)).Elem(), DeploymentSettingsGitAuthSSHAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentSettingsGitAuthSSHAuthPtrInput)(nil)).Elem(), DeploymentSettingsGitAuthSSHAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentSettingsGitSourceInput)(nil)).Elem(), DeploymentSettingsGitSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentSettingsGitSourcePtrInput)(nil)).Elem(), DeploymentSettingsGitSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentSettingsGitSourceGitAuthInput)(nil)).Elem(), DeploymentSettingsGitSourceGitAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentSettingsGitSourceGitAuthPtrInput)(nil)).Elem(), DeploymentSettingsGitSourceGitAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentSettingsGithubInput)(nil)).Elem(), DeploymentSettingsGithubArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentSettingsGithubPtrInput)(nil)).Elem(), DeploymentSettingsGithubArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentSettingsOperationContextInput)(nil)).Elem(), DeploymentSettingsOperationContextArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentSettingsOperationContextPtrInput)(nil)).Elem(), DeploymentSettingsOperationContextArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentSettingsSourceContextInput)(nil)).Elem(), DeploymentSettingsSourceContextArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentSettingsSourceContextPtrInput)(nil)).Elem(), DeploymentSettingsSourceContextArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EligibleApproverInput)(nil)).Elem(), EligibleApproverArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EligibleApproverArrayInput)(nil)).Elem(), EligibleApproverArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentIdentifierInput)(nil)).Elem(), EnvironmentIdentifierArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GCPOIDCConfigurationInput)(nil)).Elem(), GCPOIDCConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GCPOIDCConfigurationPtrInput)(nil)).Elem(), GCPOIDCConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OperationContextOIDCInput)(nil)).Elem(), OperationContextOIDCArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OperationContextOIDCPtrInput)(nil)).Elem(), OperationContextOIDCArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OperationContextOptionsInput)(nil)).Elem(), OperationContextOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OperationContextOptionsPtrInput)(nil)).Elem(), OperationContextOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceItemInput)(nil)).Elem(), ServiceItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceItemArrayInput)(nil)).Elem(), ServiceItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSourceDestinationInput)(nil)).Elem(), TemplateSourceDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSourceDestinationPtrInput)(nil)).Elem(), TemplateSourceDestinationArgs{})
	pulumi.RegisterOutputType(AWSOIDCConfigurationOutput{})
	pulumi.RegisterOutputType(AWSOIDCConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ApprovalRuleConfigOutput{})
	pulumi.RegisterOutputType(AuthPolicyDefinitionOutput{})
	pulumi.RegisterOutputType(AuthPolicyDefinitionArrayOutput{})
	pulumi.RegisterOutputType(AzureOIDCConfigurationOutput{})
	pulumi.RegisterOutputType(AzureOIDCConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DeploymentSettingsCacheOptionsOutput{})
	pulumi.RegisterOutputType(DeploymentSettingsCacheOptionsPtrOutput{})
	pulumi.RegisterOutputType(DeploymentSettingsExecutorContextOutput{})
	pulumi.RegisterOutputType(DeploymentSettingsExecutorContextPtrOutput{})
	pulumi.RegisterOutputType(DeploymentSettingsGitAuthBasicAuthOutput{})
	pulumi.RegisterOutputType(DeploymentSettingsGitAuthBasicAuthPtrOutput{})
	pulumi.RegisterOutputType(DeploymentSettingsGitAuthSSHAuthOutput{})
	pulumi.RegisterOutputType(DeploymentSettingsGitAuthSSHAuthPtrOutput{})
	pulumi.RegisterOutputType(DeploymentSettingsGitSourceOutput{})
	pulumi.RegisterOutputType(DeploymentSettingsGitSourcePtrOutput{})
	pulumi.RegisterOutputType(DeploymentSettingsGitSourceGitAuthOutput{})
	pulumi.RegisterOutputType(DeploymentSettingsGitSourceGitAuthPtrOutput{})
	pulumi.RegisterOutputType(DeploymentSettingsGithubOutput{})
	pulumi.RegisterOutputType(DeploymentSettingsGithubPtrOutput{})
	pulumi.RegisterOutputType(DeploymentSettingsOperationContextOutput{})
	pulumi.RegisterOutputType(DeploymentSettingsOperationContextPtrOutput{})
	pulumi.RegisterOutputType(DeploymentSettingsSourceContextOutput{})
	pulumi.RegisterOutputType(DeploymentSettingsSourceContextPtrOutput{})
	pulumi.RegisterOutputType(EligibleApproverOutput{})
	pulumi.RegisterOutputType(EligibleApproverArrayOutput{})
	pulumi.RegisterOutputType(EnvironmentIdentifierOutput{})
	pulumi.RegisterOutputType(GCPOIDCConfigurationOutput{})
	pulumi.RegisterOutputType(GCPOIDCConfigurationPtrOutput{})
	pulumi.RegisterOutputType(OperationContextOIDCOutput{})
	pulumi.RegisterOutputType(OperationContextOIDCPtrOutput{})
	pulumi.RegisterOutputType(OperationContextOptionsOutput{})
	pulumi.RegisterOutputType(OperationContextOptionsPtrOutput{})
	pulumi.RegisterOutputType(ServiceItemOutput{})
	pulumi.RegisterOutputType(ServiceItemArrayOutput{})
	pulumi.RegisterOutputType(TemplateSourceDestinationOutput{})
	pulumi.RegisterOutputType(TemplateSourceDestinationPtrOutput{})
}
