// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Manages the membership of a user in a Pulumi Cloud organization. This resource allows you to add users to organizations and assign roles (admin or member).
 */
export class OrgMember extends pulumi.CustomResource {
    /**
     * Get an existing OrgMember resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): OrgMember {
        return new OrgMember(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'pulumiservice:index:OrgMember';

    /**
     * Returns true if the given object is an instance of OrgMember.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OrgMember {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OrgMember.__pulumiType;
    }

    /**
     * Whether the user is known to Pulumi (read-only).
     */
    public /*out*/ readonly knownToPulumi!: pulumi.Output<boolean | undefined>;
    /**
     * The name of the Pulumi organization.
     */
    public readonly organizationName!: pulumi.Output<string>;
    /**
     * The role to assign to the user. Must be either 'admin' or 'member'.
     */
    public readonly role!: pulumi.Output<string>;
    /**
     * The username of the Pulumi user to add to the organization.
     */
    public readonly userName!: pulumi.Output<string>;
    /**
     * Whether the user is a virtual admin (read-only).
     */
    public /*out*/ readonly virtualAdmin!: pulumi.Output<boolean | undefined>;

    /**
     * Create a OrgMember resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OrgMemberArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.organizationName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'organizationName'");
            }
            if ((!args || args.role === undefined) && !opts.urn) {
                throw new Error("Missing required property 'role'");
            }
            if ((!args || args.userName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'userName'");
            }
            resourceInputs["organizationName"] = args ? args.organizationName : undefined;
            resourceInputs["role"] = args ? args.role : undefined;
            resourceInputs["userName"] = args ? args.userName : undefined;
            resourceInputs["knownToPulumi"] = undefined /*out*/;
            resourceInputs["virtualAdmin"] = undefined /*out*/;
        } else {
            resourceInputs["knownToPulumi"] = undefined /*out*/;
            resourceInputs["organizationName"] = undefined /*out*/;
            resourceInputs["role"] = undefined /*out*/;
            resourceInputs["userName"] = undefined /*out*/;
            resourceInputs["virtualAdmin"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OrgMember.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a OrgMember resource.
 */
export interface OrgMemberArgs {
    /**
     * The name of the Pulumi organization.
     */
    organizationName: pulumi.Input<string>;
    /**
     * The role to assign to the user. Must be either 'admin' or 'member'.
     */
    role: pulumi.Input<string>;
    /**
     * The username of the Pulumi user to add to the organization.
     */
    userName: pulumi.Input<string>;
}
