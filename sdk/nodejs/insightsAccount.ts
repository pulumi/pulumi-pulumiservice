// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Insights Account for cloud resource scanning and analysis
 */
export class InsightsAccount extends pulumi.CustomResource {
    /**
     * Get an existing InsightsAccount resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): InsightsAccount {
        return new InsightsAccount(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'pulumiservice:index:InsightsAccount';

    /**
     * Returns true if the given object is an instance of InsightsAccount.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is InsightsAccount {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === InsightsAccount.__pulumiType;
    }

    /**
     * The name of the insights account.
     */
    public readonly accountName!: pulumi.Output<string>;
    /**
     * Optional cron expression for scheduled scanning.
     */
    public readonly cron!: pulumi.Output<string | undefined>;
    /**
     * The ESC environment used for provider credentials.
     */
    public readonly environment!: pulumi.Output<string>;
    /**
     * The insights account identifier.
     */
    public /*out*/ readonly insightsAccountId!: pulumi.Output<string>;
    /**
     * The organization's name.
     */
    public readonly organizationName!: pulumi.Output<string>;
    /**
     * The cloud provider (e.g., 'aws', 'azure', 'gcp').
     */
    public readonly provider!: pulumi.Output<string>;
    /**
     * Provider-specific configuration as a JSON object.
     */
    public readonly providerConfig!: pulumi.Output<any | undefined>;
    /**
     * The provider version used for scanning.
     */
    public /*out*/ readonly providerVersion!: pulumi.Output<string | undefined>;
    /**
     * Whether scheduled scanning is enabled.
     */
    public /*out*/ readonly scheduledScanEnabled!: pulumi.Output<boolean>;

    /**
     * Create a InsightsAccount resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InsightsAccountArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.accountName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountName'");
            }
            if ((!args || args.environment === undefined) && !opts.urn) {
                throw new Error("Missing required property 'environment'");
            }
            if ((!args || args.organizationName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'organizationName'");
            }
            if ((!args || args.provider === undefined) && !opts.urn) {
                throw new Error("Missing required property 'provider'");
            }
            resourceInputs["accountName"] = args ? args.accountName : undefined;
            resourceInputs["cron"] = args ? args.cron : undefined;
            resourceInputs["environment"] = args ? args.environment : undefined;
            resourceInputs["organizationName"] = args ? args.organizationName : undefined;
            resourceInputs["provider"] = args ? args.provider : undefined;
            resourceInputs["providerConfig"] = args ? args.providerConfig : undefined;
            resourceInputs["insightsAccountId"] = undefined /*out*/;
            resourceInputs["providerVersion"] = undefined /*out*/;
            resourceInputs["scheduledScanEnabled"] = undefined /*out*/;
        } else {
            resourceInputs["accountName"] = undefined /*out*/;
            resourceInputs["cron"] = undefined /*out*/;
            resourceInputs["environment"] = undefined /*out*/;
            resourceInputs["insightsAccountId"] = undefined /*out*/;
            resourceInputs["organizationName"] = undefined /*out*/;
            resourceInputs["provider"] = undefined /*out*/;
            resourceInputs["providerConfig"] = undefined /*out*/;
            resourceInputs["providerVersion"] = undefined /*out*/;
            resourceInputs["scheduledScanEnabled"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(InsightsAccount.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a InsightsAccount resource.
 */
export interface InsightsAccountArgs {
    /**
     * Name of the insights account.
     */
    accountName: pulumi.Input<string>;
    /**
     * Optional cron expression for scheduled scanning.
     */
    cron?: pulumi.Input<string>;
    /**
     * The ESC environment used for provider credentials.
     */
    environment: pulumi.Input<string>;
    /**
     * The organization's name.
     */
    organizationName: pulumi.Input<string>;
    /**
     * The cloud provider (e.g., 'aws', 'azure', 'gcp').
     */
    provider: pulumi.Input<string>;
    /**
     * Provider-specific configuration as a JSON object.
     */
    providerConfig?: any;
}
