// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Get details about a specific version of a policy pack.
 */
export function getPolicyPack(args: GetPolicyPackArgs, opts?: pulumi.InvokeOptions): Promise<GetPolicyPackResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pulumiservice:index:getPolicyPack", {
        "organizationName": args.organizationName,
        "policyPackName": args.policyPackName,
        "version": args.version,
    }, opts);
}

export interface GetPolicyPackArgs {
    /**
     * The name of the Pulumi organization.
     */
    organizationName: string;
    /**
     * The name of the policy pack.
     */
    policyPackName: string;
    /**
     * The version number of the policy pack. If not specified, returns the latest version.
     */
    version?: number;
}

export interface GetPolicyPackResult {
    /**
     * Configuration for the policy pack.
     */
    readonly config?: {[key: string]: any};
    /**
     * The display name of the policy pack.
     */
    readonly displayName: string;
    /**
     * The name of the policy pack.
     */
    readonly name: string;
    /**
     * List of policies in this pack.
     */
    readonly policies?: {[key: string]: string}[];
    /**
     * The version number.
     */
    readonly version: number;
    /**
     * The version tag (if any).
     */
    readonly versionTag?: string;
}
/**
 * Get details about a specific version of a policy pack.
 */
export function getPolicyPackOutput(args: GetPolicyPackOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPolicyPackResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("pulumiservice:index:getPolicyPack", {
        "organizationName": args.organizationName,
        "policyPackName": args.policyPackName,
        "version": args.version,
    }, opts);
}

export interface GetPolicyPackOutputArgs {
    /**
     * The name of the Pulumi organization.
     */
    organizationName: pulumi.Input<string>;
    /**
     * The name of the policy pack.
     */
    policyPackName: pulumi.Input<string>;
    /**
     * The version number of the policy pack. If not specified, returns the latest version.
     */
    version?: pulumi.Input<number>;
}
