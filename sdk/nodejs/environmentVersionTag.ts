// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * A tag on a specific revision of an environment.
 */
export class EnvironmentVersionTag extends pulumi.CustomResource {
    /**
     * Get an existing EnvironmentVersionTag resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): EnvironmentVersionTag {
        return new EnvironmentVersionTag(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'pulumiservice:index:EnvironmentVersionTag';

    /**
     * Returns true if the given object is an instance of EnvironmentVersionTag.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EnvironmentVersionTag {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EnvironmentVersionTag.__pulumiType;
    }

    /**
     * Environment name.
     */
    declare public readonly environment: pulumi.Output<string>;
    /**
     * Organization name.
     */
    declare public readonly organization: pulumi.Output<string>;
    /**
     * Project name.
     */
    declare public readonly project: pulumi.Output<string>;
    /**
     * Revision number.
     */
    declare public readonly revision: pulumi.Output<number>;
    /**
     * Tag name.
     */
    declare public readonly tagName: pulumi.Output<string>;

    /**
     * Create a EnvironmentVersionTag resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EnvironmentVersionTagArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.environment === undefined && !opts.urn) {
                throw new Error("Missing required property 'environment'");
            }
            if (args?.organization === undefined && !opts.urn) {
                throw new Error("Missing required property 'organization'");
            }
            if (args?.revision === undefined && !opts.urn) {
                throw new Error("Missing required property 'revision'");
            }
            if (args?.tagName === undefined && !opts.urn) {
                throw new Error("Missing required property 'tagName'");
            }
            resourceInputs["environment"] = args?.environment;
            resourceInputs["organization"] = args?.organization;
            resourceInputs["project"] = (args?.project) ?? "default";
            resourceInputs["revision"] = args?.revision;
            resourceInputs["tagName"] = args?.tagName;
        } else {
            resourceInputs["environment"] = undefined /*out*/;
            resourceInputs["organization"] = undefined /*out*/;
            resourceInputs["project"] = undefined /*out*/;
            resourceInputs["revision"] = undefined /*out*/;
            resourceInputs["tagName"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(EnvironmentVersionTag.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a EnvironmentVersionTag resource.
 */
export interface EnvironmentVersionTagArgs {
    /**
     * Environment name.
     */
    environment: pulumi.Input<string>;
    /**
     * Organization name.
     */
    organization: pulumi.Input<string>;
    /**
     * Project name.
     */
    project?: pulumi.Input<string>;
    /**
     * Revision number.
     */
    revision: pulumi.Input<number>;
    /**
     * Tag name.
     */
    tagName: pulumi.Input<string>;
}
