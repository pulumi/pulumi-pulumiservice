// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Access tokens allow a user to authenticate against the Pulumi Cloud
 *
 * ### Import
 *
 * Access tokens can be imported using the token `id` e.g.,
 *
 * ```sh
 *  $ pulumi import pulumiservice:index:AccessToken my_token abc123def456
 * ```
 */
export class AccessToken extends pulumi.CustomResource {
    /**
     * Get an existing AccessToken resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): AccessToken {
        return new AccessToken(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'pulumiservice:index:AccessToken';

    /**
     * Returns true if the given object is an instance of AccessToken.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AccessToken {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AccessToken.__pulumiType;
    }

    /**
     * Description of the access token.
     */
    declare public readonly description: pulumi.Output<string>;
    /**
     * The token's value.
     */
    declare public /*out*/ readonly value: pulumi.Output<string>;

    /**
     * Create a AccessToken resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AccessTokenArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.description === undefined && !opts.urn) {
                throw new Error("Missing required property 'description'");
            }
            resourceInputs["description"] = args?.description;
            resourceInputs["value"] = undefined /*out*/;
        } else {
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["value"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["value"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(AccessToken.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a AccessToken resource.
 */
export interface AccessTokenArgs {
    /**
     * Description of the access token.
     */
    description: pulumi.Input<string>;
}
