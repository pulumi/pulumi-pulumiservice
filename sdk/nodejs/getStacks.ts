// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Get a list of all stacks accessible by the authenticated user.
 */
export function getStacks(args?: GetStacksArgs, opts?: pulumi.InvokeOptions): Promise<GetStacksResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pulumiservice:index:getStacks", {
        "maxResults": args.maxResults,
    }, opts);
}

export interface GetStacksArgs {
    /**
     * Maximum number of stacks to return. If not specified, all stacks are returned.
     */
    maxResults?: number;
}

export interface GetStacksResult {
    /**
     * Continuation token for pagination.
     */
    readonly continuationToken?: string;
    /**
     * List of accessible stacks.
     */
    readonly stacks: {[key: string]: string}[];
}
/**
 * Get a list of all stacks accessible by the authenticated user.
 */
export function getStacksOutput(args?: GetStacksOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetStacksResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("pulumiservice:index:getStacks", {
        "maxResults": args.maxResults,
    }, opts);
}

export interface GetStacksOutputArgs {
    /**
     * Maximum number of stacks to return. If not specified, all stacks are returned.
     */
    maxResults?: pulumi.Input<number>;
}
