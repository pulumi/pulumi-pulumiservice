// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as enums from "./types/enums";
import * as utilities from "./utilities";

/**
 * Creates a task in the Neo agent system for tracking user instructions and entity changes. Tasks are immutable once created.
 */
export function createTask(args: CreateTaskArgs, opts?: pulumi.InvokeOptions): Promise<CreateTaskResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pulumiservice:index:createTask", {
        "content": args.content,
        "entityAdd": args.entityAdd,
        "entityRemove": args.entityRemove,
        "organizationName": args.organizationName,
        "timestamp": args.timestamp,
    }, opts);
}

export interface CreateTaskArgs {
    /**
     * The exact user instruction for the task.
     */
    content: string;
    /**
     * Entities to add in this task.
     */
    entityAdd?: inputs.TaskEntity[];
    /**
     * Entities to remove in this task.
     */
    entityRemove?: inputs.TaskEntity[];
    /**
     * The name of the organization.
     */
    organizationName: string;
    /**
     * When the event occurred (ISO 8601 format). Defaults to current time if not specified.
     */
    timestamp?: string;
}

export interface CreateTaskResult {
    /**
     * The exact user instruction for the task.
     */
    readonly content: string;
    /**
     * The final list of entities after add/remove operations.
     */
    readonly entities?: outputs.TaskEntity[];
    /**
     * The unique identifier of the created task.
     */
    readonly id: string;
    /**
     * The name of the organization.
     */
    readonly organizationName: string;
    /**
     * When the task was created (ISO 8601 format).
     */
    readonly timestamp: string;
}
/**
 * Creates a task in the Neo agent system for tracking user instructions and entity changes. Tasks are immutable once created.
 */
export function createTaskOutput(args: CreateTaskOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<CreateTaskResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("pulumiservice:index:createTask", {
        "content": args.content,
        "entityAdd": args.entityAdd,
        "entityRemove": args.entityRemove,
        "organizationName": args.organizationName,
        "timestamp": args.timestamp,
    }, opts);
}

export interface CreateTaskOutputArgs {
    /**
     * The exact user instruction for the task.
     */
    content: pulumi.Input<string>;
    /**
     * Entities to add in this task.
     */
    entityAdd?: pulumi.Input<pulumi.Input<inputs.TaskEntityArgs>[]>;
    /**
     * Entities to remove in this task.
     */
    entityRemove?: pulumi.Input<pulumi.Input<inputs.TaskEntityArgs>[]>;
    /**
     * The name of the organization.
     */
    organizationName: pulumi.Input<string>;
    /**
     * When the event occurred (ISO 8601 format). Defaults to current time if not specified.
     */
    timestamp?: pulumi.Input<string>;
}
