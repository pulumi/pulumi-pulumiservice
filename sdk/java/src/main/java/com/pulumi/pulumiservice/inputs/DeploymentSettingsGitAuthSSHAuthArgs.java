// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.pulumiservice.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Git source settings for a deployment.
 * 
 */
public final class DeploymentSettingsGitAuthSSHAuthArgs extends com.pulumi.resources.ResourceArgs {

    public static final DeploymentSettingsGitAuthSSHAuthArgs Empty = new DeploymentSettingsGitAuthSSHAuthArgs();

    /**
     * Optional password for SSH authentication.
     * 
     */
    @Import(name="password")
    private @Nullable Output<String> password;

    /**
     * @return Optional password for SSH authentication.
     * 
     */
    public Optional<Output<String>> password() {
        return Optional.ofNullable(this.password);
    }

    /**
     * SSH private key.
     * 
     */
    @Import(name="sshPrivateKey", required=true)
    private Output<String> sshPrivateKey;

    /**
     * @return SSH private key.
     * 
     */
    public Output<String> sshPrivateKey() {
        return this.sshPrivateKey;
    }

    private DeploymentSettingsGitAuthSSHAuthArgs() {}

    private DeploymentSettingsGitAuthSSHAuthArgs(DeploymentSettingsGitAuthSSHAuthArgs $) {
        this.password = $.password;
        this.sshPrivateKey = $.sshPrivateKey;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DeploymentSettingsGitAuthSSHAuthArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DeploymentSettingsGitAuthSSHAuthArgs $;

        public Builder() {
            $ = new DeploymentSettingsGitAuthSSHAuthArgs();
        }

        public Builder(DeploymentSettingsGitAuthSSHAuthArgs defaults) {
            $ = new DeploymentSettingsGitAuthSSHAuthArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param password Optional password for SSH authentication.
         * 
         * @return builder
         * 
         */
        public Builder password(@Nullable Output<String> password) {
            $.password = password;
            return this;
        }

        /**
         * @param password Optional password for SSH authentication.
         * 
         * @return builder
         * 
         */
        public Builder password(String password) {
            return password(Output.of(password));
        }

        /**
         * @param sshPrivateKey SSH private key.
         * 
         * @return builder
         * 
         */
        public Builder sshPrivateKey(Output<String> sshPrivateKey) {
            $.sshPrivateKey = sshPrivateKey;
            return this;
        }

        /**
         * @param sshPrivateKey SSH private key.
         * 
         * @return builder
         * 
         */
        public Builder sshPrivateKey(String sshPrivateKey) {
            return sshPrivateKey(Output.of(sshPrivateKey));
        }

        public DeploymentSettingsGitAuthSSHAuthArgs build() {
            if ($.sshPrivateKey == null) {
                throw new MissingRequiredPropertyException("DeploymentSettingsGitAuthSSHAuthArgs", "sshPrivateKey");
            }
            return $;
        }
    }

}
