// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.pulumiservice.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.pulumiservice.outputs.OperationContextOIDC;
import com.pulumi.pulumiservice.outputs.OperationContextOptions;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DeploymentSettingsOperationContext {
    /**
     * @return Environment variables to set for the deployment.
     * 
     */
    private @Nullable Map<String,String> environmentVariables;
    /**
     * @return OIDC configuration to use during the deployment.
     * 
     */
    private @Nullable OperationContextOIDC oidc;
    /**
     * @return Options to override default behavior during the deployment.
     * 
     */
    private @Nullable OperationContextOptions options;
    /**
     * @return Shell commands to run before the Pulumi operation executes.
     * 
     */
    private @Nullable List<String> preRunCommands;

    private DeploymentSettingsOperationContext() {}
    /**
     * @return Environment variables to set for the deployment.
     * 
     */
    public Map<String,String> environmentVariables() {
        return this.environmentVariables == null ? Map.of() : this.environmentVariables;
    }
    /**
     * @return OIDC configuration to use during the deployment.
     * 
     */
    public Optional<OperationContextOIDC> oidc() {
        return Optional.ofNullable(this.oidc);
    }
    /**
     * @return Options to override default behavior during the deployment.
     * 
     */
    public Optional<OperationContextOptions> options() {
        return Optional.ofNullable(this.options);
    }
    /**
     * @return Shell commands to run before the Pulumi operation executes.
     * 
     */
    public List<String> preRunCommands() {
        return this.preRunCommands == null ? List.of() : this.preRunCommands;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DeploymentSettingsOperationContext defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Map<String,String> environmentVariables;
        private @Nullable OperationContextOIDC oidc;
        private @Nullable OperationContextOptions options;
        private @Nullable List<String> preRunCommands;
        public Builder() {}
        public Builder(DeploymentSettingsOperationContext defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.environmentVariables = defaults.environmentVariables;
    	      this.oidc = defaults.oidc;
    	      this.options = defaults.options;
    	      this.preRunCommands = defaults.preRunCommands;
        }

        @CustomType.Setter
        public Builder environmentVariables(@Nullable Map<String,String> environmentVariables) {

            this.environmentVariables = environmentVariables;
            return this;
        }
        @CustomType.Setter
        public Builder oidc(@Nullable OperationContextOIDC oidc) {

            this.oidc = oidc;
            return this;
        }
        @CustomType.Setter
        public Builder options(@Nullable OperationContextOptions options) {

            this.options = options;
            return this;
        }
        @CustomType.Setter
        public Builder preRunCommands(@Nullable List<String> preRunCommands) {

            this.preRunCommands = preRunCommands;
            return this;
        }
        public Builder preRunCommands(String... preRunCommands) {
            return preRunCommands(List.of(preRunCommands));
        }
        public DeploymentSettingsOperationContext build() {
            final var _resultValue = new DeploymentSettingsOperationContext();
            _resultValue.environmentVariables = environmentVariables;
            _resultValue.oidc = oidc;
            _resultValue.options = options;
            _resultValue.preRunCommands = preRunCommands;
            return _resultValue;
        }
    }
}
