// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.pulumiservice.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.pulumiservice.inputs.DeploymentSettingsGitSourceArgs;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Settings related to the source of the deployment.
 * 
 */
public final class DeploymentSettingsSourceContextArgs extends com.pulumi.resources.ResourceArgs {

    public static final DeploymentSettingsSourceContextArgs Empty = new DeploymentSettingsSourceContextArgs();

    /**
     * Git source settings for a deployment.
     * 
     */
    @Import(name="git")
    private @Nullable Output<DeploymentSettingsGitSourceArgs> git;

    /**
     * @return Git source settings for a deployment.
     * 
     */
    public Optional<Output<DeploymentSettingsGitSourceArgs>> git() {
        return Optional.ofNullable(this.git);
    }

    private DeploymentSettingsSourceContextArgs() {}

    private DeploymentSettingsSourceContextArgs(DeploymentSettingsSourceContextArgs $) {
        this.git = $.git;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DeploymentSettingsSourceContextArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DeploymentSettingsSourceContextArgs $;

        public Builder() {
            $ = new DeploymentSettingsSourceContextArgs();
        }

        public Builder(DeploymentSettingsSourceContextArgs defaults) {
            $ = new DeploymentSettingsSourceContextArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param git Git source settings for a deployment.
         * 
         * @return builder
         * 
         */
        public Builder git(@Nullable Output<DeploymentSettingsGitSourceArgs> git) {
            $.git = git;
            return this;
        }

        /**
         * @param git Git source settings for a deployment.
         * 
         * @return builder
         * 
         */
        public Builder git(DeploymentSettingsGitSourceArgs git) {
            return git(Output.of(git));
        }

        public DeploymentSettingsSourceContextArgs build() {
            return $;
        }
    }

}
