// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.pulumiservice.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.pulumiservice.outputs.DeploymentSettingsGitAuthBasicAuth;
import com.pulumi.pulumiservice.outputs.DeploymentSettingsGitAuthSSHAuth;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DeploymentSettingsGitSourceGitAuth {
    /**
     * @return Basic auth for git authentication. Only one of `personalAccessToken`, `sshAuth`, or `basicAuth` must be defined.
     * 
     */
    private @Nullable DeploymentSettingsGitAuthBasicAuth basicAuth;
    /**
     * @return SSH auth for git authentication. Only one of `personalAccessToken`, `sshAuth`, or `basicAuth` must be defined.
     * 
     */
    private @Nullable DeploymentSettingsGitAuthSSHAuth sshAuth;

    private DeploymentSettingsGitSourceGitAuth() {}
    /**
     * @return Basic auth for git authentication. Only one of `personalAccessToken`, `sshAuth`, or `basicAuth` must be defined.
     * 
     */
    public Optional<DeploymentSettingsGitAuthBasicAuth> basicAuth() {
        return Optional.ofNullable(this.basicAuth);
    }
    /**
     * @return SSH auth for git authentication. Only one of `personalAccessToken`, `sshAuth`, or `basicAuth` must be defined.
     * 
     */
    public Optional<DeploymentSettingsGitAuthSSHAuth> sshAuth() {
        return Optional.ofNullable(this.sshAuth);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DeploymentSettingsGitSourceGitAuth defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable DeploymentSettingsGitAuthBasicAuth basicAuth;
        private @Nullable DeploymentSettingsGitAuthSSHAuth sshAuth;
        public Builder() {}
        public Builder(DeploymentSettingsGitSourceGitAuth defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.basicAuth = defaults.basicAuth;
    	      this.sshAuth = defaults.sshAuth;
        }

        @CustomType.Setter
        public Builder basicAuth(@Nullable DeploymentSettingsGitAuthBasicAuth basicAuth) {

            this.basicAuth = basicAuth;
            return this;
        }
        @CustomType.Setter
        public Builder sshAuth(@Nullable DeploymentSettingsGitAuthSSHAuth sshAuth) {

            this.sshAuth = sshAuth;
            return this;
        }
        public DeploymentSettingsGitSourceGitAuth build() {
            final var _resultValue = new DeploymentSettingsGitSourceGitAuth();
            _resultValue.basicAuth = basicAuth;
            _resultValue.sshAuth = sshAuth;
            return _resultValue;
        }
    }
}
