// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.PulumiService
{
    /// <summary>
    /// The Pulumi Cloud allows users to create access tokens scoped to team. Team access tokens is a resource to create them and assign them to a team
    /// </summary>
    [PulumiServiceResourceType("pulumiservice:index:TeamAccessToken")]
    public partial class TeamAccessToken : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Optional. Description for the token.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The name for the token. This must be unique amongst all machine tokens within your organization.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The organization's name.
        /// </summary>
        [Output("organizationName")]
        public Output<string> OrganizationName { get; private set; } = null!;

        /// <summary>
        /// The team name.
        /// </summary>
        [Output("teamName")]
        public Output<string> TeamName { get; private set; } = null!;

        /// <summary>
        /// The token's value.
        /// </summary>
        [Output("value")]
        public Output<string> Value { get; private set; } = null!;


        /// <summary>
        /// Create a TeamAccessToken resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public TeamAccessToken(string name, TeamAccessTokenArgs args, CustomResourceOptions? options = null)
            : base("pulumiservice:index:TeamAccessToken", name, args ?? new TeamAccessTokenArgs(), MakeResourceOptions(options, ""))
        {
        }

        private TeamAccessToken(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("pulumiservice:index:TeamAccessToken", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "value",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing TeamAccessToken resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static TeamAccessToken Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new TeamAccessToken(name, id, options);
        }
    }

    public sealed class TeamAccessTokenArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Optional. Team description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The name for the token. This must be unique amongst all machine tokens within your organization.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The organization's name.
        /// </summary>
        [Input("organizationName", required: true)]
        public Input<string> OrganizationName { get; set; } = null!;

        /// <summary>
        /// The team name.
        /// </summary>
        [Input("teamName", required: true)]
        public Input<string> TeamName { get; set; } = null!;

        public TeamAccessTokenArgs()
        {
        }
        public static new TeamAccessTokenArgs Empty => new TeamAccessTokenArgs();
    }
}
