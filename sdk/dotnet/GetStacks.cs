// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.PulumiService
{
    public static class GetStacks
    {
        /// <summary>
        /// Get a list of all stacks accessible by the authenticated user.
        /// </summary>
        public static Task<GetStacksResult> InvokeAsync(GetStacksArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetStacksResult>("pulumiservice:index:getStacks", args ?? new GetStacksArgs(), options.WithDefaults());

        /// <summary>
        /// Get a list of all stacks accessible by the authenticated user.
        /// </summary>
        public static Output<GetStacksResult> Invoke(GetStacksInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetStacksResult>("pulumiservice:index:getStacks", args ?? new GetStacksInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetStacksArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Maximum number of stacks to return. If not specified, all stacks are returned.
        /// </summary>
        [Input("maxResults")]
        public int? MaxResults { get; set; }

        public GetStacksArgs()
        {
        }
        public static new GetStacksArgs Empty => new GetStacksArgs();
    }

    public sealed class GetStacksInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Maximum number of stacks to return. If not specified, all stacks are returned.
        /// </summary>
        [Input("maxResults")]
        public Input<int>? MaxResults { get; set; }

        public GetStacksInvokeArgs()
        {
        }
        public static new GetStacksInvokeArgs Empty => new GetStacksInvokeArgs();
    }


    [OutputType]
    public sealed class GetStacksResult
    {
        /// <summary>
        /// Continuation token for pagination.
        /// </summary>
        public readonly string? ContinuationToken;
        /// <summary>
        /// List of accessible stacks.
        /// </summary>
        public readonly ImmutableArray<ImmutableDictionary<string, string>> Stacks;

        [OutputConstructor]
        private GetStacksResult(
            string? continuationToken,

            ImmutableArray<ImmutableDictionary<string, string>> stacks)
        {
            ContinuationToken = continuationToken;
            Stacks = stacks;
        }
    }
}
