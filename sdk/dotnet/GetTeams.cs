// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.PulumiService
{
    public static class GetTeams
    {
        /// <summary>
        /// Get a list of all teams in an organization.
        /// </summary>
        public static Task<GetTeamsResult> InvokeAsync(GetTeamsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTeamsResult>("pulumiservice:index:getTeams", args ?? new GetTeamsArgs(), options.WithDefaults());

        /// <summary>
        /// Get a list of all teams in an organization.
        /// </summary>
        public static Output<GetTeamsResult> Invoke(GetTeamsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTeamsResult>("pulumiservice:index:getTeams", args ?? new GetTeamsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTeamsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Pulumi organization.
        /// </summary>
        [Input("organizationName", required: true)]
        public string OrganizationName { get; set; } = null!;

        public GetTeamsArgs()
        {
        }
        public static new GetTeamsArgs Empty => new GetTeamsArgs();
    }

    public sealed class GetTeamsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Pulumi organization.
        /// </summary>
        [Input("organizationName", required: true)]
        public Input<string> OrganizationName { get; set; } = null!;

        public GetTeamsInvokeArgs()
        {
        }
        public static new GetTeamsInvokeArgs Empty => new GetTeamsInvokeArgs();
    }


    [OutputType]
    public sealed class GetTeamsResult
    {
        /// <summary>
        /// List of teams in the organization.
        /// </summary>
        public readonly ImmutableArray<ImmutableDictionary<string, string>> Teams;

        [OutputConstructor]
        private GetTeamsResult(ImmutableArray<ImmutableDictionary<string, string>> teams)
        {
            Teams = teams;
        }
    }
}
