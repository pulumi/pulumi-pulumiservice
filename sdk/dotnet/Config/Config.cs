// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Immutable;

namespace Pulumi.PulumiService
{
    public static class Config
    {
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "IDE1006", Justification = 
        "Double underscore prefix used to avoid conflicts with variable names.")]
        private sealed class __Value<T>
        {
            private readonly Func<T> _getter;
            private T _value = default!;
            private bool _set;

            public __Value(Func<T> getter)
            {
                _getter = getter;
            }

            public T Get() => _set ? _value : _getter();

            public void Set(T value)
            {
                _value = value;
                _set = true;
            }
        }

        private static readonly global::Pulumi.Config __config = new global::Pulumi.Config("pulumiservice");

        private static readonly __Value<string?> _accessToken = new __Value<string?>(() => __config.Get("accessToken") ?? Utilities.GetEnv("PULUMI_ACCESS_TOKEN"));
        /// <summary>
        /// Access Token to authenticate with Pulumi Cloud.
        /// </summary>
        public static string? AccessToken
        {
            get => _accessToken.Get();
            set => _accessToken.Set(value);
        }

        private static readonly __Value<string?> _serviceURL = new __Value<string?>(() => __config.Get("serviceURL") ?? Utilities.GetEnv("PULUMI_BACKEND_URL") ?? "https://api.pulumi.com");
        /// <summary>
        /// The service URL used to reach Pulumi Cloud.
        /// </summary>
        public static string? ServiceURL
        {
            get => _serviceURL.Get();
            set => _serviceURL.Set(value);
        }

    }
}
