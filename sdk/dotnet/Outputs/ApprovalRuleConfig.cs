// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.PulumiService.Outputs
{

    [OutputType]
    public sealed class ApprovalRuleConfig
    {
        /// <summary>
        /// Whether self-approval is allowed.
        /// </summary>
        public readonly bool AllowSelfApproval;
        /// <summary>
        /// List of eligible approvers.
        /// </summary>
        public readonly ImmutableArray<Outputs.EligibleApprover> EligibleApprovers;
        /// <summary>
        /// Number of approvals required.
        /// </summary>
        public readonly int NumApprovalsRequired;
        /// <summary>
        /// Whether reapproval is required on changes.
        /// </summary>
        public readonly bool RequireReapprovalOnChange;

        [OutputConstructor]
        private ApprovalRuleConfig(
            bool allowSelfApproval,

            ImmutableArray<Outputs.EligibleApprover> eligibleApprovers,

            int numApprovalsRequired,

            bool requireReapprovalOnChange)
        {
            AllowSelfApproval = allowSelfApproval;
            EligibleApprovers = eligibleApprovers;
            NumApprovalsRequired = numApprovalsRequired;
            RequireReapprovalOnChange = requireReapprovalOnChange;
        }
    }
}
