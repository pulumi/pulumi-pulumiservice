// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.PulumiService.Outputs
{

    [OutputType]
    public sealed class AuthPolicyDefinition
    {
        /// <summary>
        /// The permission level for organization tokens.
        /// </summary>
        public readonly ImmutableArray<Pulumi.PulumiService.AuthPolicyPermissionLevel> AuthorizedPermissions;
        /// <summary>
        /// The rule type of this policy definition
        /// </summary>
        public readonly Pulumi.PulumiService.AuthPolicyDecision Decision;
        /// <summary>
        /// OIDC rules to set for this policy.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Rules;
        /// <summary>
        /// The runner ID for deployment runner tokens.
        /// </summary>
        public readonly string? RunnerID;
        /// <summary>
        /// The team name for team tokens.
        /// </summary>
        public readonly string? TeamName;
        /// <summary>
        /// The token type for this policy definition
        /// </summary>
        public readonly Pulumi.PulumiService.AuthPolicyTokenType TokenType;
        /// <summary>
        /// The user login for personal tokens.
        /// </summary>
        public readonly string? UserLogin;

        [OutputConstructor]
        private AuthPolicyDefinition(
            ImmutableArray<Pulumi.PulumiService.AuthPolicyPermissionLevel> authorizedPermissions,

            Pulumi.PulumiService.AuthPolicyDecision decision,

            ImmutableDictionary<string, string> rules,

            string? runnerID,

            string? teamName,

            Pulumi.PulumiService.AuthPolicyTokenType tokenType,

            string? userLogin)
        {
            AuthorizedPermissions = authorizedPermissions;
            Decision = decision;
            Rules = rules;
            RunnerID = runnerID;
            TeamName = teamName;
            TokenType = tokenType;
            UserLogin = userLogin;
        }
    }
}
