// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.PulumiService.Inputs
{

    /// <summary>
    /// GitHub settings for the deployment.
    /// </summary>
    public sealed class DeploymentSettingsGithubArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Trigger a deployment running `pulumi up` on commit.
        /// </summary>
        [Input("deployCommits")]
        public Input<bool>? DeployCommits { get; set; }

        [Input("paths")]
        private InputList<string>? _paths;

        /// <summary>
        /// The paths within the repo that deployments should be filtered to.
        /// </summary>
        public InputList<string> Paths
        {
            get => _paths ?? (_paths = new InputList<string>());
            set => _paths = value;
        }

        /// <summary>
        /// Trigger a deployment running `pulumi preview` when a PR is opened.
        /// </summary>
        [Input("previewPullRequests")]
        public Input<bool>? PreviewPullRequests { get; set; }

        /// <summary>
        /// Use this stack as a template for pull request review stacks.
        /// </summary>
        [Input("pullRequestTemplate")]
        public Input<bool>? PullRequestTemplate { get; set; }

        /// <summary>
        /// The GitHub repository in the format org/repo.
        /// </summary>
        [Input("repository")]
        public Input<string>? Repository { get; set; }

        public DeploymentSettingsGithubArgs()
        {
            DeployCommits = true;
            PreviewPullRequests = true;
            PullRequestTemplate = false;
        }
        public static new DeploymentSettingsGithubArgs Empty => new DeploymentSettingsGithubArgs();
    }
}
