// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.PulumiService.Inputs
{

    /// <summary>
    /// Git source settings for a deployment.
    /// </summary>
    public sealed class DeploymentSettingsGitAuthSSHAuthArgs : global::Pulumi.ResourceArgs
    {
        [Input("password")]
        private Input<string>? _password;

        /// <summary>
        /// Optional password for SSH authentication.
        /// </summary>
        public Input<string>? Password
        {
            get => _password;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _password = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("sshPrivateKey", required: true)]
        private Input<string>? _sshPrivateKey;

        /// <summary>
        /// SSH private key.
        /// </summary>
        public Input<string>? SshPrivateKey
        {
            get => _sshPrivateKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _sshPrivateKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        public DeploymentSettingsGitAuthSSHAuthArgs()
        {
        }
        public static new DeploymentSettingsGitAuthSSHAuthArgs Empty => new DeploymentSettingsGitAuthSSHAuthArgs();
    }
}
