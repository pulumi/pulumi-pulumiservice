name: yaml-policy-groups
description: Example demonstrating PolicyGroup resource and policy pack data sources
runtime: yaml
config:
  digits:
    type: string
  organizationName:
    type: string
    default: service-provider-test-org

variables:
  # Query all available policy packs in the organization
  # This demonstrates using the getPolicyPacks data source
  policyPacks:
    fn::invoke:
      function: pulumiservice:index:getPolicyPacks
      arguments:
        organizationName: ${organizationName}
      return: policyPacks

  # Get detailed information about a specific policy pack (if available)
  # This demonstrates using the getPolicyPack data source and shows
  # detailed policy metadata including severity, framework, tags, etc.
  # Note: This will only work if you have a policy pack named "aws-compliance" version 1
  # Uncomment and modify the policyPackName and version to match your setup
  # policyPackDetail:
  #   fn::invoke:
  #     function: pulumiservice:index:getPolicyPack
  #     arguments:
  #       organizationName: ${organizationName}
  #       policyPackName: "aws-compliance"
  #       version: 1

resources:
  # Create a policy group that manages policy packs for a set of stacks
  # Policy groups allow you to apply policy packs consistently across multiple stacks
  testPolicyGroup:
    type: pulumiservice:PolicyGroup
    properties:
      name: test-policy-group-${digits}
      organizationName: ${organizationName}
      stacks: []
      policyPacks: []

outputs:
  # Export the policy group name and the list of available policy packs
  policyGroupName: ${testPolicyGroup.name}

  # List of all policy packs in the organization
  # Each pack includes: name, displayName, versions[], versionTags[]
  availablePolicyPacks: ${policyPacks}

  # Detailed policy pack information (uncomment if policyPackDetail is enabled above)
  # This shows the full policy details including:
  # - name, displayName, version, versionTag
  # - policies[] with: name, displayName, description, enforcementLevel, message, configSchema
  #   - NEW FIELDS: severity, framework (name/version/reference/specification),
  #                 tags[], remediationSteps, url
  # policyPackDetails: ${policyPackDetail}
