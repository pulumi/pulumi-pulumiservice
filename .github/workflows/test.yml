# WARNING: This file is autogenerated - changes will be overwritten when regenerated by https://github.com/pulumi/ci-mgmt

name: "Test Provider"

on:
   workflow_call:
     inputs:
       version:
         required: true
         type: string
         description: Version of the provider to test

env:
  PR_COMMIT_SHA: ${{ github.event.client_payload.pull_request.head.sha }}
  MISE_ENV: test

  AWS_CORP_S3_UPLOAD_ACCESS_KEY_ID: ${{ secrets.AWS_CORP_S3_UPLOAD_ACCESS_KEY_ID }}
  AWS_CORP_S3_UPLOAD_SECRET_ACCESS_KEY: ${{ secrets.AWS_CORP_S3_UPLOAD_SECRET_ACCESS_KEY }}
  AWS_REGION: us-west-2
  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  PULUMI_API: https://api.pulumi-staging.io
  PULUMI_BOT_TOKEN: ${{ secrets.PULUMI_BOT_TOKEN }}
  PULUMI_PROVIDER_AUTOMATION_TOKEN: ${{ secrets.PULUMI_PROVIDER_AUTOMATION_TOKEN }}
  RELEASE_BOT_ENDPOINT: ${{ secrets.RELEASE_BOT_ENDPOINT }}
  RELEASE_BOT_KEY: ${{ secrets.RELEASE_BOT_KEY }}
  S3_COVERAGE_BUCKET_NAME: ${{ secrets.S3_COVERAGE_BUCKET_NAME }}
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

jobs:
  test:
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    env:
      PROVIDER_VERSION: ${{ inputs.version }}
    steps:
    - name: Checkout Repo
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      with:
        ref: ${{ env.PR_COMMIT_SHA }}
        persist-credentials: false    
    - id: esc-secrets
      name: Map environment to ESC outputs
      uses: ./.github/actions/esc-action
    - name: Checkout p/examples
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      with:
        repository: pulumi/examples
        path: p-examples
    - name: Setup mise
      uses: jdx/mise-action@v3
      env:
        MISE_ENV: test
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        cache_key: "mise-{{platform}}-{{file_hash}}"
        # also save this cache since we are using a different mise env.
        cache_save: true
    - name: Prepare local workspace
      run: make prepare_local_workspace
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Download bin
      uses: ./.github/actions/download-provider
    - name: Download nodejs SDK
      uses: ./.github/actions/download-sdk
      with:
        language: nodejs
    - name: Download python SDK
      uses: ./.github/actions/download-sdk
      with:
        language: python
    - name: Download dotnet SDK
      uses: ./.github/actions/download-sdk
      with:
        language: dotnet
    - name: Download go SDK
      uses: ./.github/actions/download-sdk
      with:
        language: go
    - name: Download java SDK
      uses: ./.github/actions/download-sdk
      with:
        language: java
    - name: Restore makefile progress
      run: make --touch provider schema build_sdks
    - name: Update path
      run: echo "${{ github.workspace }}/bin" >> "$GITHUB_PATH"
    - name: Install Python deps
      run: |-
        pip3 install virtualenv==20.0.23
        pip3 install pipenv
    - name: Install prebuilt SDKs
      run: make install_sdks
    - name: Generate test shards
      run: |-
        cd examples
        go run github.com/pulumi/shard@861c9ce4aa851e98c19f8376892bf7e47238fa1b \
            --total ${{ matrix.total-shards }} \
            --index ${{ matrix.current-shard }} \
            --output env >> "$GITHUB_ENV"
    - name: Run tests
      run: |
        make GOTESTARGS="-test.run ${SHARD_TESTS} ${SHARD_PATHS}" test
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    strategy:
      fail-fast: false
      matrix:
        total-shards:
          - 6
        current-shard:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
