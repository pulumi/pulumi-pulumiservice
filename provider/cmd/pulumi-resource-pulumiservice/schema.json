{
  "name": "pulumiservice",
  "displayName": "Pulumi Cloud",
  "description": "A native Pulumi package for creating and managing Pulumi Cloud constructs",
  "keywords": [
    "pulumi",
    "kind/native",
    "category/infrastructure"
  ],
  "homepage": "https://pulumi.com",
  "license": "Apache-2.0",
  "repository": "https://github.com/pulumi/pulumi-pulumiservice",
  "publisher": "Pulumi",
  "namespace": "pulumi",
  "meta": {
    "moduleFormat": "(.*)"
  },
  "language": {
    "csharp": {
      "namespaces": {
        "pulumiservice": "PulumiService"
      },
      "packageReferences": {
        "Pulumi": "3.*"
      },
      "respectSchemaVersion": true
    },
    "go": {
      "generateResourceContainerTypes": true,
      "importBasePath": "github.com/pulumi/pulumi-pulumiservice/sdk/go/pulumiservice",
      "respectSchemaVersion": true
    },
    "java": {
      "basePackage": "",
      "buildFiles": "gradle",
      "dependencies": {
        "com.google.code.findbugs:jsr305": "3.0.2",
        "com.google.code.gson:gson": "2.8.9",
        "com.pulumi:pulumi": "1.16.2"
      },
      "gradleNexusPublishPluginVersion": "2.0.0",
      "gradleTest": ""
    },
    "nodejs": {
      "dependencies": {
        "@pulumi/pulumi": "^3.0.0"
      },
      "packageName": "@pulumi/pulumiservice",
      "respectSchemaVersion": true
    },
    "python": {
      "packageName": "pulumi_pulumiservice",
      "pyproject": {
        "enabled": true
      },
      "requires": {
        "pulumi": ">=3.0.0,<4.0.0"
      },
      "respectSchemaVersion": true
    }
  },
  "config": {
    "variables": {
      "accessToken": {
        "type": "string",
        "description": "Access Token to authenticate with Pulumi Cloud.",
        "secret": true
      },
      "apiUrl": {
        "type": "string",
        "description": "Optional override of Pulumi Cloud API endpoint.",
        "default": "https://api.pulumi.com",
        "defaultInfo": {
          "environment": [
            "PULUMI_BACKEND_URL"
          ]
        }
      }
    }
  },
  "types": {
    "pulumiservice:index:AWSOIDCConfiguration": {
      "properties": {
        "duration": {
          "type": "string",
          "description": "Duration of the assume-role session in “XhYmZs” format"
        },
        "policyARNs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Optional set of IAM policy ARNs that further restrict the assume-role session"
        },
        "roleARN": {
          "type": "string",
          "description": "The ARN of the role to assume using the OIDC token."
        },
        "sessionName": {
          "type": "string",
          "description": "The name of the assume-role session."
        }
      },
      "type": "object",
      "required": [
        "roleARN",
        "sessionName"
      ]
    },
    "pulumiservice:index:ApprovalRuleConfig": {
      "properties": {
        "allowSelfApproval": {
          "type": "boolean",
          "description": "Whether self-approval is allowed."
        },
        "eligibleApprovers": {
          "type": "array",
          "items": {
            "$ref": "#/types/pulumiservice:index:EligibleApprover"
          },
          "description": "List of eligible approvers."
        },
        "numApprovalsRequired": {
          "type": "integer",
          "description": "Number of approvals required."
        },
        "requireReapprovalOnChange": {
          "type": "boolean",
          "description": "Whether reapproval is required on changes."
        }
      },
      "type": "object",
      "required": [
        "allowSelfApproval",
        "eligibleApprovers",
        "numApprovalsRequired",
        "requireReapprovalOnChange"
      ]
    },
    "pulumiservice:index:AuthPolicyDecision": {
      "type": "string",
      "enum": [
        {
          "description": "A deny rule for Oidc Issuer Policy.",
          "value": "deny"
        },
        {
          "description": "An allow rule for Oidc Issuer Policy.",
          "value": "allow"
        }
      ]
    },
    "pulumiservice:index:AuthPolicyDefinition": {
      "properties": {
        "authorizedPermissions": {
          "type": "array",
          "items": {
            "$ref": "#/types/pulumiservice:index:AuthPolicyPermissionLevel"
          },
          "description": "The permission level for organization tokens."
        },
        "decision": {
          "$ref": "#/types/pulumiservice:index:AuthPolicyDecision",
          "description": "The rule type of this policy definition"
        },
        "rules": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "OIDC rules to set for this policy."
        },
        "runnerID": {
          "type": "string",
          "description": "The runner ID for deployment runner tokens."
        },
        "teamName": {
          "type": "string",
          "description": "The team name for team tokens."
        },
        "tokenType": {
          "$ref": "#/types/pulumiservice:index:AuthPolicyTokenType",
          "description": "The token type for this policy definition"
        },
        "userLogin": {
          "type": "string",
          "description": "The user login for personal tokens."
        }
      },
      "type": "object",
      "required": [
        "decision",
        "rules",
        "tokenType"
      ]
    },
    "pulumiservice:index:AuthPolicyPermissionLevel": {
      "type": "string",
      "enum": [
        {
          "description": "Standard level of permissions.",
          "value": "standard"
        },
        {
          "description": "Admin level of permissions.",
          "value": "admin"
        }
      ]
    },
    "pulumiservice:index:AuthPolicyTokenType": {
      "type": "string",
      "enum": [
        {
          "description": "Personal Pulumi token. Requires userLogin field to be filled.",
          "value": "personal"
        },
        {
          "description": "Team Pulumi token. Requires teamName field to be filled.",
          "value": "team"
        },
        {
          "description": "Organization Pulumi token. Requires authorizedPermissions field to be filled.",
          "value": "organization"
        },
        {
          "description": "Deployment Runner Pulumi token. Requires runnerID field to be filled.",
          "value": "runner"
        }
      ]
    },
    "pulumiservice:index:AzureOIDCConfiguration": {
      "properties": {
        "clientId": {
          "type": "string",
          "description": "The client ID of the federated workload identity."
        },
        "subscriptionId": {
          "type": "string",
          "description": "The subscription ID of the federated workload identity."
        },
        "tenantId": {
          "type": "string",
          "description": "The tenant ID of the federated workload identity."
        }
      },
      "type": "object",
      "required": [
        "clientId",
        "subscriptionId",
        "tenantId"
      ]
    },
    "pulumiservice:index:DeploymentSettingsCacheOptions": {
      "description": "Dependency cache settings for the deployment",
      "properties": {
        "enable": {
          "type": "boolean",
          "description": "Enable dependency caching",
          "default": false
        }
      },
      "type": "object"
    },
    "pulumiservice:index:DeploymentSettingsExecutorContext": {
      "description": "The executor context defines information about the executor where the deployment is executed. If unspecified, the default 'pulumi/pulumi' image is used.",
      "properties": {
        "executorImage": {
          "type": "string",
          "description": "Allows overriding the default executor image with a custom image. E.g. 'pulumi/pulumi-nodejs:latest'"
        }
      },
      "type": "object",
      "required": [
        "executorImage"
      ]
    },
    "pulumiservice:index:DeploymentSettingsGitAuthBasicAuth": {
      "description": "Git source settings for a deployment.",
      "properties": {
        "password": {
          "type": "string",
          "description": "Password for git basic authentication.",
          "secret": true
        },
        "username": {
          "type": "string",
          "description": "User name for git basic authentication.",
          "secret": true
        }
      },
      "type": "object",
      "required": [
        "password",
        "username"
      ]
    },
    "pulumiservice:index:DeploymentSettingsGitAuthSSHAuth": {
      "description": "Git source settings for a deployment.",
      "properties": {
        "password": {
          "type": "string",
          "description": "Optional password for SSH authentication.",
          "secret": true
        },
        "sshPrivateKey": {
          "type": "string",
          "description": "SSH private key.",
          "secret": true
        }
      },
      "type": "object",
      "required": [
        "sshPrivateKey"
      ]
    },
    "pulumiservice:index:DeploymentSettingsGitSource": {
      "description": "Git source settings for a deployment.",
      "properties": {
        "branch": {
          "type": "string",
          "description": "The branch to deploy. One of either `branch` or `commit` must be specified."
        },
        "commit": {
          "type": "string",
          "description": "The commit to deploy. One of either `branch` or `commit` must be specified."
        },
        "gitAuth": {
          "$ref": "#/types/pulumiservice:index:DeploymentSettingsGitSourceGitAuth",
          "description": "Git authentication configuration for this deployment. Should not be specified if there are `gitHub` settings for this deployment."
        },
        "repoDir": {
          "type": "string",
          "description": "The directory within the repository where the Pulumi.yaml is located."
        },
        "repoUrl": {
          "type": "string",
          "description": "The repository URL to use for git settings. Should not be specified if there are `gitHub` settings for this deployment."
        }
      },
      "type": "object"
    },
    "pulumiservice:index:DeploymentSettingsGitSourceGitAuth": {
      "description": "Git source settings for a deployment.",
      "properties": {
        "basicAuth": {
          "$ref": "#/types/pulumiservice:index:DeploymentSettingsGitAuthBasicAuth",
          "description": "Basic auth for git authentication. Only one of `personalAccessToken`, `sshAuth`, or `basicAuth` must be defined."
        },
        "sshAuth": {
          "$ref": "#/types/pulumiservice:index:DeploymentSettingsGitAuthSSHAuth",
          "description": "SSH auth for git authentication. Only one of `personalAccessToken`, `sshAuth`, or `basicAuth` must be defined."
        }
      },
      "type": "object"
    },
    "pulumiservice:index:DeploymentSettingsGithub": {
      "description": "GitHub settings for the deployment.",
      "properties": {
        "deployCommits": {
          "type": "boolean",
          "description": "Trigger a deployment running `pulumi up` on commit.",
          "default": true
        },
        "paths": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The paths within the repo that deployments should be filtered to."
        },
        "previewPullRequests": {
          "type": "boolean",
          "description": "Trigger a deployment running `pulumi preview` when a PR is opened.",
          "default": true
        },
        "pullRequestTemplate": {
          "type": "boolean",
          "description": "Use this stack as a template for pull request review stacks.",
          "default": false
        },
        "repository": {
          "type": "string",
          "description": "The GitHub repository in the format org/repo."
        }
      },
      "type": "object"
    },
    "pulumiservice:index:DeploymentSettingsOperationContext": {
      "description": "Settings related to the Pulumi operation environment during the deployment.",
      "properties": {
        "environmentVariables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Environment variables to set for the deployment."
        },
        "oidc": {
          "$ref": "#/types/pulumiservice:index:OperationContextOIDC",
          "description": "OIDC configuration to use during the deployment."
        },
        "options": {
          "$ref": "#/types/pulumiservice:index:OperationContextOptions",
          "description": "Options to override default behavior during the deployment."
        },
        "preRunCommands": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Shell commands to run before the Pulumi operation executes."
        }
      },
      "type": "object"
    },
    "pulumiservice:index:DeploymentSettingsSourceContext": {
      "description": "Settings related to the source of the deployment.",
      "properties": {
        "git": {
          "$ref": "#/types/pulumiservice:index:DeploymentSettingsGitSource",
          "description": "Git source settings for a deployment."
        }
      },
      "type": "object"
    },
    "pulumiservice:index:EligibleApprover": {
      "properties": {
        "rbacPermission": {
          "$ref": "#/types/pulumiservice:index:RbacPermission",
          "description": "RBAC permission that gives right to approve."
        },
        "teamName": {
          "type": "string",
          "description": "Name of the team that can approve."
        },
        "user": {
          "type": "string",
          "description": "Login of the user that can approve."
        }
      },
      "type": "object"
    },
    "pulumiservice:index:EnvironmentIdentifier": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The environment name."
        },
        "organization": {
          "type": "string",
          "description": "The organization name."
        },
        "project": {
          "type": "string",
          "description": "The project name."
        }
      },
      "type": "object",
      "required": [
        "name",
        "organization",
        "project"
      ]
    },
    "pulumiservice:index:EnvironmentPermission": {
      "type": "string",
      "enum": [
        {
          "description": "No permissions.",
          "value": "none"
        },
        {
          "description": "Permission to read environment definition only.",
          "value": "read"
        },
        {
          "description": "Permission to open and read the environment.",
          "value": "open"
        },
        {
          "description": "Permission to open, read and update the environment.",
          "value": "write"
        },
        {
          "description": "Permission for all operations on the environment.",
          "value": "admin"
        }
      ]
    },
    "pulumiservice:index:GCPOIDCConfiguration": {
      "properties": {
        "projectId": {
          "type": "string",
          "description": "The numerical ID of the GCP project."
        },
        "providerId": {
          "type": "string",
          "description": "The ID of the identity provider associated with the workload pool."
        },
        "region": {
          "type": "string",
          "description": "The region of the GCP project."
        },
        "serviceAccount": {
          "type": "string",
          "description": "The email address of the service account to use."
        },
        "tokenLifetime": {
          "type": "string",
          "description": "The lifetime of the temporary credentials in “XhYmZs” format."
        },
        "workloadPoolId": {
          "type": "string",
          "description": "The ID of the workload pool to use."
        }
      },
      "type": "object",
      "required": [
        "projectId",
        "providerId",
        "serviceAccount",
        "workloadPoolId"
      ]
    },
    "pulumiservice:index:OperationContextOIDC": {
      "properties": {
        "aws": {
          "$ref": "#/types/pulumiservice:index:AWSOIDCConfiguration",
          "description": "AWS-specific OIDC configuration."
        },
        "azure": {
          "$ref": "#/types/pulumiservice:index:AzureOIDCConfiguration",
          "description": "Azure-specific OIDC configuration."
        },
        "gcp": {
          "$ref": "#/types/pulumiservice:index:GCPOIDCConfiguration",
          "description": "GCP-specific OIDC configuration."
        }
      },
      "type": "object"
    },
    "pulumiservice:index:OperationContextOptions": {
      "properties": {
        "deleteAfterDestroy": {
          "type": "boolean",
          "description": "Whether the stack should be deleted after it is destroyed."
        },
        "shell": {
          "type": "string",
          "description": "The shell to use to run commands during the deployment. Defaults to 'bash'."
        },
        "skipInstallDependencies": {
          "type": "boolean",
          "description": "Skip the default dependency installation step - use this to customize the dependency installation (e.g. if using yarn or poetry)"
        },
        "skipIntermediateDeployments": {
          "type": "boolean",
          "description": "Skip intermediate deployments (Consolidate multiple deployments of the same type into one deployment)"
        }
      },
      "type": "object"
    },
    "pulumiservice:index:PulumiOperation": {
      "type": "string",
      "enum": [
        {
          "description": "Analogous to `pulumi up` command.",
          "value": "update"
        },
        {
          "description": "Analogous to `pulumi preview` command.",
          "value": "preview"
        },
        {
          "description": "Analogous to `pulumi refresh` command.",
          "value": "refresh"
        },
        {
          "description": "Analogous to `pulumi destroy` command.",
          "value": "destroy"
        }
      ]
    },
    "pulumiservice:index:RbacPermission": {
      "type": "string",
      "enum": [
        {
          "name": "Read",
          "description": "Read permission.",
          "value": "environment:read"
        },
        {
          "name": "ReadDecrypt",
          "description": "Read and decrypt permission.",
          "value": "environment:read_decrypt"
        },
        {
          "name": "Open",
          "description": "Open permission.",
          "value": "environment:open"
        },
        {
          "name": "Write",
          "description": "Write permission.",
          "value": "environment:write"
        },
        {
          "name": "Delete",
          "description": "Delete permission.",
          "value": "environment:delete"
        },
        {
          "name": "Clone",
          "description": "Clone permission.",
          "value": "environment:clone"
        },
        {
          "name": "Rotate",
          "description": "Rotate permission.",
          "value": "environment:rotate"
        }
      ]
    },
    "pulumiservice:index:TargetActionType": {
      "type": "string",
      "enum": [
        {
          "name": "Update",
          "description": "Update action type for approval rules.",
          "value": "update"
        }
      ]
    },
    "pulumiservice:index:TeamStackPermissionScope": {
      "type": "number",
      "enum": [
        {
          "name": "read",
          "description": "Grants read permissions to stack.",
          "value": 101
        },
        {
          "name": "edit",
          "description": "Grants edit permissions to stack.",
          "value": 102
        },
        {
          "name": "admin",
          "description": "Grants admin permissions to stack.",
          "value": 103
        }
      ]
    },
    "pulumiservice:index:TemplateSourceDestination": {
      "properties": {
        "url": {
          "type": "string",
          "description": "Destination URL that gets filled in on new project creation."
        }
      },
      "type": "object"
    },
    "pulumiservice:index:WebhookFilters": {
      "type": "string",
      "enum": [
        {
          "name": "StackCreated",
          "description": "Trigger a webhook when a stack is created. Only valid for org webhooks.",
          "value": "stack_created"
        },
        {
          "name": "StackDeleted",
          "description": "Trigger a webhook when a stack is deleted. Only valid for org webhooks.",
          "value": "stack_deleted"
        },
        {
          "name": "UpdateSucceeded",
          "description": "Trigger a webhook when a stack update succeeds.",
          "value": "update_succeeded"
        },
        {
          "name": "UpdateFailed",
          "description": "Trigger a webhook when a stack update fails.",
          "value": "update_failed"
        },
        {
          "name": "PreviewSucceeded",
          "description": "Trigger a webhook when a stack preview succeeds.",
          "value": "preview_succeeded"
        },
        {
          "name": "PreviewFailed",
          "description": "Trigger a webhook when a stack preview fails.",
          "value": "preview_failed"
        },
        {
          "name": "DestroySucceeded",
          "description": "Trigger a webhook when a stack destroy succeeds.",
          "value": "destroy_succeeded"
        },
        {
          "name": "DestroyFailed",
          "description": "Trigger a webhook when a stack destroy fails.",
          "value": "destroy_failed"
        },
        {
          "name": "RefreshSucceeded",
          "description": "Trigger a webhook when a stack refresh succeeds.",
          "value": "refresh_succeeded"
        },
        {
          "name": "RefreshFailed",
          "description": "Trigger a webhook when a stack refresh fails.",
          "value": "refresh_failed"
        },
        {
          "name": "DeploymentQueued",
          "description": "Trigger a webhook when a deployment is queued.",
          "value": "deployment_queued"
        },
        {
          "name": "DeploymentStarted",
          "description": "Trigger a webhook when a deployment starts running.",
          "value": "deployment_started"
        },
        {
          "name": "DeploymentSucceeded",
          "description": "Trigger a webhook when a deployment succeeds.",
          "value": "deployment_succeeded"
        },
        {
          "name": "DeploymentFailed",
          "description": "Trigger a webhook when a deployment fails.",
          "value": "deployment_failed"
        },
        {
          "name": "DriftDetected",
          "description": "Trigger a webhook when drift is detected.",
          "value": "drift_detected"
        },
        {
          "name": "DriftDetectionSucceeded",
          "description": "Trigger a webhook when a drift detection run succeeds, regardless of whether drift is detected.",
          "value": "drift_detection_succeeded"
        },
        {
          "name": "DriftDetectionFailed",
          "description": "Trigger a webhook when a drift detection run fails.",
          "value": "drift_detection_failed"
        },
        {
          "name": "DriftRemediationSucceeded",
          "description": "Trigger a webhook when a drift remediation run succeeds.",
          "value": "drift_remediation_succeeded"
        },
        {
          "name": "DriftRemediationFailed",
          "description": "Trigger a webhook when a drift remediation run fails.",
          "value": "drift_remediation_failed"
        },
        {
          "name": "EnvironmentCreated",
          "description": "Trigger a webhook when a new environment is created.",
          "value": "environment_created"
        },
        {
          "name": "EnvironmentDeleted",
          "description": "Trigger a webhook when an environment is deleted.",
          "value": "environment_deleted"
        },
        {
          "name": "EnvironmentRevisionCreated",
          "description": "Trigger a webhook when a new revision is created on an environment.",
          "value": "environment_revision_created"
        },
        {
          "name": "EnvironmentRevisionRetracted",
          "description": "Trigger a webhook when a revision is retracted on an environment.",
          "value": "environment_revision_retracted"
        },
        {
          "name": "EnvironmentRevisionTagCreated",
          "description": "Trigger a webhook when a revision tag is created on an environment.",
          "value": "environment_revision_tag_created"
        },
        {
          "name": "EnvironmentRevisionTagDeleted",
          "description": "Trigger a webhook when a revision tag is deleted on an environment.",
          "value": "environment_revision_tag_deleted"
        },
        {
          "name": "EnvironmentRevisionTagUpdated",
          "description": "Trigger a webhook when a revision tag is updated on an environment.",
          "value": "environment_revision_tag_updated"
        },
        {
          "name": "EnvironmentTagCreated",
          "description": "Trigger a webhook when an environment tag is created.",
          "value": "environment_tag_created"
        },
        {
          "name": "EnvironmentTagDeleted",
          "description": "Trigger a webhook when an environment tag is deleted.",
          "value": "environment_tag_deleted"
        },
        {
          "name": "EnvironmentTagUpdated",
          "description": "Trigger a webhook when an environment tag is updated.",
          "value": "environment_tag_updated"
        },
        {
          "name": "ImportedEnvironmentChanged",
          "description": "Trigger a webhook when an imported environment has changed.",
          "value": "imported_environment_changed"
        }
      ]
    },
    "pulumiservice:index:WebhookFormat": {
      "type": "string",
      "enum": [
        {
          "description": "The default webhook format.",
          "value": "raw"
        },
        {
          "description": "Messages formatted for consumption by Slack incoming webhooks.",
          "value": "slack"
        },
        {
          "name": "PulumiDeployments",
          "description": "Initiate deployments on a stack from a Pulumi Cloud webhook.",
          "value": "pulumi_deployments"
        },
        {
          "name": "MicrosoftTeams",
          "description": "Messages formatted for consumption by Microsoft Teams incoming webhooks.",
          "value": "ms_teams"
        }
      ]
    },
    "pulumiservice:index:WebhookGroup": {
      "type": "string",
      "enum": [
        {
          "name": "Stacks",
          "description": "A group of webhooks containing all stack events.",
          "value": "stacks"
        },
        {
          "name": "Deployments",
          "description": "A group of webhooks containing all deployment events.",
          "value": "deployments"
        },
        {
          "name": "Environments",
          "description": "A group of webhooks containing all environment events.",
          "value": "environments"
        }
      ]
    }
  },
  "provider": {
    "properties": {
      "accessToken": {
        "type": "string",
        "description": "Access Token to authenticate with Pulumi Cloud.",
        "secret": true
      },
      "apiUrl": {
        "type": "string",
        "description": "Optional override of Pulumi Cloud API endpoint.",
        "default": "https://api.pulumi.com",
        "defaultInfo": {
          "environment": [
            "PULUMI_BACKEND_URL"
          ]
        }
      }
    },
    "type": "object",
    "inputProperties": {
      "accessToken": {
        "type": "string",
        "description": "Access Token to authenticate with Pulumi Cloud.",
        "secret": true
      },
      "apiUrl": {
        "type": "string",
        "description": "Optional override of Pulumi Cloud API endpoint.",
        "default": "https://api.pulumi.com",
        "defaultInfo": {
          "environment": [
            "PULUMI_BACKEND_URL"
          ]
        }
      }
    }
  },
  "resources": {
    "pulumiservice:index:AccessToken": {
      "description": "Access tokens allow a user to authenticate against the Pulumi Cloud",
      "properties": {
        "description": {
          "type": "string",
          "description": "Description of the access token."
        },
        "value": {
          "type": "string",
          "description": "The token's value.",
          "secret": true
        }
      },
      "type": "object",
      "required": [
        "description",
        "value"
      ],
      "inputProperties": {
        "description": {
          "type": "string",
          "description": "Description of the access token."
        }
      },
      "requiredInputs": [
        "description"
      ]
    },
    "pulumiservice:index:AgentPool": {
      "description": "Agent Pool for customer managed deployments",
      "properties": {
        "agentPoolId": {
          "type": "string",
          "description": "The agent pool identifier."
        },
        "description": {
          "type": "string",
          "description": "Description of the agent pool."
        },
        "forceDestroy": {
          "type": "boolean",
          "description": "Optional. Flag indicating whether to delete the agent pool even if stacks are configured to use it."
        },
        "name": {
          "type": "string",
          "description": "The name of the agent pool."
        },
        "organizationName": {
          "type": "string",
          "description": "The organization's name."
        },
        "tokenValue": {
          "type": "string",
          "description": "The agent pool's token's value.",
          "secret": true
        }
      },
      "type": "object",
      "required": [
        "agentPoolId",
        "name",
        "organizationName",
        "tokenValue"
      ],
      "inputProperties": {
        "description": {
          "type": "string",
          "description": "Description of the agent pool."
        },
        "forceDestroy": {
          "type": "boolean",
          "description": "Optional. Flag indicating whether to delete the agent pool even if stacks are configured to use it."
        },
        "name": {
          "type": "string",
          "description": "Name of the agent pool.",
          "willReplaceOnChanges": true
        },
        "organizationName": {
          "type": "string",
          "description": "The organization's name.",
          "willReplaceOnChanges": true
        }
      },
      "requiredInputs": [
        "name",
        "organizationName"
      ]
    },
    "pulumiservice:index:ApprovalRule": {
      "description": "An approval rule for environment deployments.",
      "properties": {
        "approvalRuleConfig": {
          "$ref": "#/types/pulumiservice:index:ApprovalRuleConfig",
          "description": "The approval rule configuration."
        },
        "enabled": {
          "type": "boolean",
          "description": "Whether the approval rule is enabled."
        },
        "environmentIdentifier": {
          "$ref": "#/types/pulumiservice:index:EnvironmentIdentifier",
          "description": "The environment this rule applies to."
        },
        "name": {
          "type": "string",
          "description": "Name of the approval rule."
        },
        "targetActionTypes": {
          "type": "array",
          "items": {
            "$ref": "#/types/pulumiservice:index:TargetActionType"
          },
          "description": "The type of action this rule applies to."
        }
      },
      "type": "object",
      "required": [
        "approvalRuleConfig",
        "enabled",
        "environmentIdentifier",
        "name",
        "targetActionTypes"
      ],
      "inputProperties": {
        "approvalRuleConfig": {
          "$ref": "#/types/pulumiservice:index:ApprovalRuleConfig",
          "description": "The approval rule configuration."
        },
        "enabled": {
          "type": "boolean",
          "description": "Whether the approval rule is enabled."
        },
        "environmentIdentifier": {
          "$ref": "#/types/pulumiservice:index:EnvironmentIdentifier",
          "description": "The environment this rule applies to."
        },
        "name": {
          "type": "string",
          "description": "The name of the approval rule.",
          "willReplaceOnChanges": true
        },
        "targetActionTypes": {
          "type": "array",
          "items": {
            "$ref": "#/types/pulumiservice:index:TargetActionType"
          },
          "description": "The type of action this rule applies to."
        }
      },
      "requiredInputs": [
        "approvalRuleConfig",
        "enabled",
        "environmentIdentifier",
        "name",
        "targetActionTypes"
      ]
    },
    "pulumiservice:index:DeploymentSchedule": {
      "description": "A scheduled recurring or single time run of a pulumi command.",
      "properties": {
        "organization": {
          "type": "string",
          "description": "Organization name."
        },
        "project": {
          "type": "string",
          "description": "Project name."
        },
        "pulumiOperation": {
          "$ref": "#/types/pulumiservice:index:PulumiOperation",
          "description": "Which operation to run."
        },
        "scheduleCron": {
          "type": "string",
          "description": "Cron expression for recurring scheduled runs. If you are supplying this, do not supply timestamp."
        },
        "scheduleId": {
          "type": "string",
          "description": "Schedule ID of the created schedule, assigned by Pulumi Cloud."
        },
        "stack": {
          "type": "string",
          "description": "Stack name."
        },
        "timestamp": {
          "type": "string",
          "description": "The time at which the schedule should run, in ISO 8601 format. Eg: 2020-01-01T00:00:00Z. If you are supplying this, do not supply scheduleCron.",
          "willReplaceOnChanges": true
        }
      },
      "type": "object",
      "required": [
        "organization",
        "project",
        "pulumiOperation",
        "scheduleId",
        "stack"
      ],
      "inputProperties": {
        "organization": {
          "type": "string",
          "description": "Organization name.",
          "willReplaceOnChanges": true
        },
        "project": {
          "type": "string",
          "description": "Project name.",
          "willReplaceOnChanges": true
        },
        "pulumiOperation": {
          "$ref": "#/types/pulumiservice:index:PulumiOperation",
          "description": "Which command to run."
        },
        "scheduleCron": {
          "type": "string",
          "description": "Cron expression for recurring scheduled runs. If you are supplying this, do not supply timestamp."
        },
        "stack": {
          "type": "string",
          "description": "Stack name.",
          "willReplaceOnChanges": true
        },
        "timestamp": {
          "type": "string",
          "description": "The time at which the schedule should run, in ISO 8601 format. Eg: 2020-01-01T00:00:00Z. If you are supplying this, do not supply scheduleCron.",
          "willReplaceOnChanges": true
        }
      },
      "requiredInputs": [
        "organization",
        "project",
        "pulumiOperation",
        "stack"
      ]
    },
    "pulumiservice:index:DeploymentSettings": {
      "description": "Deployment settings configure Pulumi Deployments for a stack.\n\n### Import\n\nDeployment settings can be imported using the `id`, which for deployment settings is `{org}/{project}/{stack}` e.g.,\n\n```sh\n $ pulumi import pulumiservice:index:DeploymentSettings my_settings my-org/my-project/my-stack\n```\n\n",
      "properties": {
        "agentPoolId": {
          "type": "string",
          "description": "The agent pool identifier to use for the deployment."
        },
        "cacheOptions": {
          "$ref": "#/types/pulumiservice:index:DeploymentSettingsCacheOptions",
          "description": "Dependency cache settings for the deployment"
        },
        "executorContext": {
          "$ref": "#/types/pulumiservice:index:DeploymentSettingsExecutorContext",
          "description": "Settings related to the deployment executor."
        },
        "github": {
          "$ref": "#/types/pulumiservice:index:DeploymentSettingsGithub",
          "description": "GitHub settings for the deployment."
        },
        "operationContext": {
          "$ref": "#/types/pulumiservice:index:DeploymentSettingsOperationContext",
          "description": "Settings related to the Pulumi operation environment during the deployment."
        },
        "organization": {
          "type": "string",
          "description": "Organization name."
        },
        "project": {
          "type": "string",
          "description": "Project name."
        },
        "sourceContext": {
          "$ref": "#/types/pulumiservice:index:DeploymentSettingsSourceContext",
          "description": "Settings related to the source of the deployment."
        },
        "stack": {
          "type": "string",
          "description": "Stack name."
        }
      },
      "type": "object",
      "required": [
        "organization",
        "project",
        "stack"
      ],
      "inputProperties": {
        "agentPoolId": {
          "type": "string",
          "description": "The agent pool identifier to use for the deployment."
        },
        "cacheOptions": {
          "$ref": "#/types/pulumiservice:index:DeploymentSettingsCacheOptions",
          "description": "Dependency cache settings for the deployment"
        },
        "executorContext": {
          "$ref": "#/types/pulumiservice:index:DeploymentSettingsExecutorContext",
          "description": "Settings related to the deployment executor."
        },
        "github": {
          "$ref": "#/types/pulumiservice:index:DeploymentSettingsGithub",
          "description": "GitHub settings for the deployment."
        },
        "operationContext": {
          "$ref": "#/types/pulumiservice:index:DeploymentSettingsOperationContext",
          "description": "Settings related to the Pulumi operation environment during the deployment."
        },
        "organization": {
          "type": "string",
          "description": "Organization name.",
          "willReplaceOnChanges": true
        },
        "project": {
          "type": "string",
          "description": "Project name.",
          "willReplaceOnChanges": true
        },
        "sourceContext": {
          "$ref": "#/types/pulumiservice:index:DeploymentSettingsSourceContext",
          "description": "Settings related to the source of the deployment."
        },
        "stack": {
          "type": "string",
          "description": "Stack name.",
          "willReplaceOnChanges": true
        }
      },
      "requiredInputs": [
        "organization",
        "project",
        "stack"
      ]
    },
    "pulumiservice:index:DriftSchedule": {
      "description": "A cron schedule to run drift detection.",
      "properties": {
        "autoRemediate": {
          "type": "boolean",
          "description": "Whether any drift detected should be remediated after a drift run.",
          "default": false
        },
        "organization": {
          "type": "string",
          "description": "Organization name."
        },
        "project": {
          "type": "string",
          "description": "Project name."
        },
        "scheduleCron": {
          "type": "string",
          "description": "Cron expression for when to run drift detection."
        },
        "scheduleId": {
          "type": "string",
          "description": "Schedule ID of the created schedule, assigned by Pulumi Cloud."
        },
        "stack": {
          "type": "string",
          "description": "Stack name."
        }
      },
      "type": "object",
      "required": [
        "organization",
        "project",
        "scheduleCron",
        "scheduleId",
        "stack"
      ],
      "inputProperties": {
        "autoRemediate": {
          "type": "boolean",
          "description": "Whether any drift detected should be remediated after a drift run.",
          "default": false
        },
        "organization": {
          "type": "string",
          "description": "Organization name.",
          "willReplaceOnChanges": true
        },
        "project": {
          "type": "string",
          "description": "Project name.",
          "willReplaceOnChanges": true
        },
        "scheduleCron": {
          "type": "string",
          "description": "Cron expression for when to run drift detection."
        },
        "stack": {
          "type": "string",
          "description": "Stack name.",
          "willReplaceOnChanges": true
        }
      },
      "requiredInputs": [
        "organization",
        "project",
        "scheduleCron",
        "stack"
      ]
    },
    "pulumiservice:index:Environment": {
      "description": "An ESC Environment.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Environment name."
        },
        "organization": {
          "type": "string",
          "description": "Organization name."
        },
        "project": {
          "type": "string",
          "description": "Project name."
        },
        "revision": {
          "type": "integer",
          "description": "Revision number of the latest version."
        },
        "yaml": {
          "$ref": "pulumi.json#/Asset",
          "description": "Environment's yaml file."
        }
      },
      "type": "object",
      "required": [
        "name",
        "organization",
        "project",
        "revision",
        "yaml"
      ],
      "inputProperties": {
        "name": {
          "type": "string",
          "description": "Environment name."
        },
        "organization": {
          "type": "string",
          "description": "Organization name."
        },
        "project": {
          "type": "string",
          "description": "Project name.",
          "default": "default"
        },
        "yaml": {
          "$ref": "pulumi.json#/Asset",
          "description": "Environment's yaml file."
        }
      },
      "requiredInputs": [
        "name",
        "organization",
        "yaml"
      ]
    },
    "pulumiservice:index:EnvironmentRotationSchedule": {
      "description": "A scheduled recurring or single time environment rotation.",
      "properties": {
        "environment": {
          "type": "string",
          "description": "Environment name."
        },
        "organization": {
          "type": "string",
          "description": "Organization name."
        },
        "project": {
          "type": "string",
          "description": "Project name."
        },
        "scheduleCron": {
          "type": "string",
          "description": "Cron expression for recurring scheduled rotations. If you are supplying this, do not supply timestamp."
        },
        "scheduleId": {
          "type": "string",
          "description": "Schedule ID of the created rotation schedule, assigned by Pulumi Cloud."
        },
        "timestamp": {
          "type": "string",
          "description": "The time at which the rotation should run, in ISO 8601 format. Eg: 2020-01-01T00:00:00Z. If you are supplying this, do not supply scheduleCron.",
          "willReplaceOnChanges": true
        }
      },
      "type": "object",
      "required": [
        "environment",
        "organization",
        "project",
        "scheduleId"
      ],
      "inputProperties": {
        "environment": {
          "type": "string",
          "description": "Environment name.",
          "willReplaceOnChanges": true
        },
        "organization": {
          "type": "string",
          "description": "Organization name.",
          "willReplaceOnChanges": true
        },
        "project": {
          "type": "string",
          "description": "Project name.",
          "willReplaceOnChanges": true
        },
        "scheduleCron": {
          "type": "string",
          "description": "Cron expression for recurring scheduled rotations. If you are supplying this, do not supply timestamp."
        },
        "timestamp": {
          "type": "string",
          "description": "The time at which the rotation should run, in ISO 8601 format. Eg: 2020-01-01T00:00:00Z. If you are supplying this, do not supply scheduleCron.",
          "willReplaceOnChanges": true
        }
      },
      "requiredInputs": [
        "environment",
        "organization",
        "project"
      ]
    },
    "pulumiservice:index:EnvironmentVersionTag": {
      "description": "A tag on a specific revision of an environment.",
      "properties": {
        "environment": {
          "type": "string",
          "description": "Environment name."
        },
        "organization": {
          "type": "string",
          "description": "Organization name."
        },
        "project": {
          "type": "string",
          "description": "Project name."
        },
        "revision": {
          "type": "integer",
          "description": "Revision number."
        },
        "tagName": {
          "type": "string",
          "description": "Tag name."
        }
      },
      "type": "object",
      "required": [
        "environment",
        "organization",
        "project",
        "revision",
        "tagName"
      ],
      "inputProperties": {
        "environment": {
          "type": "string",
          "description": "Environment name."
        },
        "organization": {
          "type": "string",
          "description": "Organization name."
        },
        "project": {
          "type": "string",
          "description": "Project name.",
          "default": "default"
        },
        "revision": {
          "type": "integer",
          "description": "Revision number."
        },
        "tagName": {
          "type": "string",
          "description": "Tag name."
        }
      },
      "requiredInputs": [
        "environment",
        "organization",
        "revision",
        "tagName"
      ]
    },
    "pulumiservice:index:OidcIssuer": {
      "description": "Register an OIDC Provider to establish a trust relationship between third-party systems like GitHub Actions and Pulumi Cloud, obviating the need to store a hard-coded Pulumi Cloud token in systems that need to run Pulumi commands or consume Pulumi Cloud APIs. Instead of a hard-coded, static token that must be manually rotated, trusted systems are granted temporary Pulumi Cloud tokens on an as-needed basis, which is more secure than static tokens.",
      "properties": {
        "maxExpirationSeconds": {
          "type": "integer",
          "description": "The maximum duration of the Pulumi access token working after an exchange, specified in seconds."
        },
        "name": {
          "type": "string",
          "description": "Issuer name."
        },
        "organization": {
          "type": "string",
          "description": "Organization name.",
          "replaceOnChanges": true
        },
        "policies": {
          "type": "array",
          "items": {
            "$ref": "#/types/pulumiservice:index:AuthPolicyDefinition"
          },
          "description": "The authorization policies for this Oidc Issuer."
        },
        "thumbprints": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The thumbprints of issuer's TLS certificates. By default, Pulumi will store the thumbprint of the certificate used to serve the OpenID configuration. If the provider uses multiple certificates to serve content, it is required to manually configure these."
        },
        "url": {
          "type": "string",
          "description": "The OIDC issuer URL.",
          "replaceOnChanges": true
        }
      },
      "type": "object",
      "required": [
        "name",
        "organization",
        "policies",
        "thumbprints",
        "url"
      ],
      "inputProperties": {
        "maxExpirationSeconds": {
          "type": "integer",
          "description": "The maximum duration of the Pulumi access token working after an exchange, specified in seconds."
        },
        "name": {
          "type": "string",
          "description": "Issuer name."
        },
        "organization": {
          "type": "string",
          "description": "Organization name.",
          "replaceOnChanges": true
        },
        "policies": {
          "type": "array",
          "items": {
            "$ref": "#/types/pulumiservice:index:AuthPolicyDefinition"
          },
          "description": "The auth policies for this Oidc Issuer."
        },
        "thumbprints": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The thumbprints of issuer's TLS certificates. By default, Pulumi will store the thumbprint of the certificate used to serve the OpenID configuration. If the provider uses multiple certificates to serve content, it is required to manually configure these."
        },
        "url": {
          "type": "string",
          "description": "The OIDC issuer URL.",
          "replaceOnChanges": true
        }
      },
      "requiredInputs": [
        "name",
        "organization",
        "url"
      ]
    },
    "pulumiservice:index:OrgAccessToken": {
      "description": "The Pulumi Cloud allows users to create access tokens scoped to orgs. Org access tokens is a resource to create them and assign them to an org",
      "properties": {
        "admin": {
          "type": "boolean",
          "description": "Optional. True if this is an admin token."
        },
        "description": {
          "type": "string",
          "description": "Optional. Description for the token."
        },
        "name": {
          "type": "string",
          "description": "The name for the token."
        },
        "organizationName": {
          "type": "string",
          "description": "The organization's name."
        },
        "value": {
          "type": "string",
          "description": "The token's value.",
          "secret": true
        }
      },
      "type": "object",
      "required": [
        "name",
        "organizationName",
        "value"
      ],
      "inputProperties": {
        "admin": {
          "type": "boolean",
          "description": "Optional. True if this is an admin token.",
          "default": false
        },
        "description": {
          "type": "string",
          "description": "Optional. Team description."
        },
        "name": {
          "type": "string",
          "description": "The name for the token.",
          "willReplaceOnChanges": true
        },
        "organizationName": {
          "type": "string",
          "description": "The organization's name.",
          "willReplaceOnChanges": true
        }
      },
      "requiredInputs": [
        "name",
        "organizationName"
      ]
    },
    "pulumiservice:index:PolicyGroup": {
      "description": "A Policy Group allows you to apply policy packs to a set of stacks in your organization.",
      "properties": {
        "entityType": {
          "type": "string",
          "description": "The entity type for the policy group. Valid values are 'stacks' or 'accounts'. Defaults to 'stacks'."
        },
        "mode": {
          "type": "string",
          "description": "The mode for the policy group. Valid values are 'audit' (reports violations) or 'preventative' (blocks operations). Defaults to 'audit'."
        },
        "name": {
          "type": "string",
          "description": "The name of the policy group."
        },
        "organizationName": {
          "type": "string",
          "description": "The name of the Pulumi organization the policy group belongs to."
        },
        "policyPacks": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "description": "List of policy packs applied to this policy group."
        },
        "stacks": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "description": "List of stack references that belong to this policy group."
        }
      },
      "type": "object",
      "required": [
        "name",
        "organizationName",
        "policyPacks",
        "stacks"
      ],
      "inputProperties": {
        "entityType": {
          "type": "string",
          "description": "The entity type for the policy group. Valid values are 'stacks' or 'accounts'. Defaults to 'stacks'.",
          "default": "stacks",
          "willReplaceOnChanges": true
        },
        "mode": {
          "type": "string",
          "description": "The mode for the policy group. Valid values are 'audit' (reports violations) or 'preventative' (blocks operations). Defaults to 'audit'.",
          "default": "audit",
          "willReplaceOnChanges": true
        },
        "name": {
          "type": "string",
          "description": "The name of the policy group.",
          "willReplaceOnChanges": true
        },
        "organizationName": {
          "type": "string",
          "description": "The name of the Pulumi organization the policy group belongs to.",
          "willReplaceOnChanges": true
        },
        "policyPacks": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "description": "List of policy packs applied to this policy group."
        },
        "stacks": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "description": "List of stack references that belong to this policy group."
        }
      },
      "requiredInputs": [
        "name",
        "organizationName"
      ]
    },
    "pulumiservice:index:Stack": {
      "description": "A stack is a collection of resources that share a common lifecycle. Stacks are uniquely identified by their name and the project they belong to.",
      "properties": {
        "forceDestroy": {
          "type": "boolean",
          "description": "Optional. Flag indicating whether to delete the stack even if it still contains resources."
        },
        "organizationName": {
          "type": "string",
          "description": "The name of the organization."
        },
        "projectName": {
          "type": "string",
          "description": "The name of the project."
        },
        "stackName": {
          "type": "string",
          "description": "The name of the stack."
        }
      },
      "type": "object",
      "required": [
        "organizationName",
        "projectName",
        "stackName"
      ],
      "inputProperties": {
        "forceDestroy": {
          "type": "boolean",
          "description": "Optional. Flag indicating whether to delete the stack even if it still contains resources."
        },
        "organizationName": {
          "type": "string",
          "description": "The name of the organization.",
          "willReplaceOnChanges": true
        },
        "projectName": {
          "type": "string",
          "description": "The name of the project.",
          "willReplaceOnChanges": true
        },
        "stackName": {
          "type": "string",
          "description": "The name of the stack.",
          "willReplaceOnChanges": true
        }
      },
      "requiredInputs": [
        "organizationName",
        "projectName",
        "stackName"
      ]
    },
    "pulumiservice:index:StackTag": {
      "description": "Stacks have associated metadata in the form of tags. Each tag consists of a name and value.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the tag. The 'key' part of the key=value pair"
        },
        "organization": {
          "type": "string",
          "description": "Organization name."
        },
        "project": {
          "type": "string",
          "description": "Project name."
        },
        "stack": {
          "type": "string",
          "description": "Stack name."
        },
        "value": {
          "type": "string",
          "description": "Value of the tag. The 'value' part of the key=value pair"
        }
      },
      "type": "object",
      "required": [
        "name",
        "organization",
        "project",
        "stack",
        "value"
      ],
      "inputProperties": {
        "name": {
          "type": "string",
          "description": "Name of the tag. The 'key' part of the key=value pair",
          "willReplaceOnChanges": true
        },
        "organization": {
          "type": "string",
          "description": "Organization name.",
          "willReplaceOnChanges": true
        },
        "project": {
          "type": "string",
          "description": "Project name.",
          "willReplaceOnChanges": true
        },
        "stack": {
          "type": "string",
          "description": "Stack name.",
          "willReplaceOnChanges": true
        },
        "value": {
          "type": "string",
          "description": "Value of the tag. The 'value' part of the key=value pair"
        }
      },
      "requiredInputs": [
        "name",
        "organization",
        "project",
        "stack",
        "value"
      ]
    },
    "pulumiservice:index:Team": {
      "description": "The Pulumi Cloud offers role-based access control (RBAC) using teams. Teams allow organization admins to assign a set of stack permissions to a group of users.",
      "properties": {
        "description": {
          "type": "string",
          "description": "Optional. Team description."
        },
        "displayName": {
          "type": "string",
          "description": "Optional. Team display name."
        },
        "githubTeamId": {
          "type": "number",
          "description": "The GitHub ID of the team to mirror. Must be in the same GitHub organization that the Pulumi org is backed by. Required for \"github\" teams."
        },
        "members": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of Pulumi Cloud usernames of team members."
        },
        "name": {
          "type": "string",
          "description": "The team's name. Required for \"pulumi\" teams.",
          "replaceOnChanges": true
        },
        "organizationName": {
          "type": "string",
          "description": "The name of the Pulumi organization the team belongs to.",
          "replaceOnChanges": true
        },
        "teamType": {
          "type": "string",
          "description": "The type of team. Must be either `pulumi` or `github`.",
          "replaceOnChanges": true
        }
      },
      "type": "object",
      "required": [
        "members",
        "organizationName",
        "teamType"
      ],
      "inputProperties": {
        "description": {
          "type": "string",
          "description": "Optional. Team description."
        },
        "displayName": {
          "type": "string",
          "description": "Optional. Team display name."
        },
        "githubTeamId": {
          "type": "number",
          "description": "The GitHub ID of the team to mirror. Must be in the same GitHub organization that the Pulumi org is backed by. Required for \"github\" teams."
        },
        "members": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of Pulumi Cloud usernames of team members."
        },
        "name": {
          "type": "string",
          "description": "The team's name. Required for \"pulumi\" teams.",
          "replaceOnChanges": true
        },
        "organizationName": {
          "type": "string",
          "description": "The name of the Pulumi organization the team belongs to.",
          "replaceOnChanges": true
        },
        "teamType": {
          "type": "string",
          "description": "The type of team. Must be either `pulumi` or `github`.",
          "replaceOnChanges": true
        }
      },
      "requiredInputs": [
        "organizationName",
        "teamType"
      ]
    },
    "pulumiservice:index:TeamAccessToken": {
      "description": "The Pulumi Cloud allows users to create access tokens scoped to team. Team access tokens is a resource to create them and assign them to a team",
      "properties": {
        "description": {
          "type": "string",
          "description": "Optional. Description for the token."
        },
        "name": {
          "type": "string",
          "description": "The name for the token. This must be unique amongst all machine tokens within your organization."
        },
        "organizationName": {
          "type": "string",
          "description": "The organization's name."
        },
        "teamName": {
          "type": "string",
          "description": "The team name."
        },
        "value": {
          "type": "string",
          "description": "The token's value.",
          "secret": true
        }
      },
      "type": "object",
      "required": [
        "name",
        "organizationName",
        "teamName",
        "value"
      ],
      "inputProperties": {
        "description": {
          "type": "string",
          "description": "Optional. Team description."
        },
        "name": {
          "type": "string",
          "description": "The name for the token. This must be unique amongst all machine tokens within your organization.",
          "willReplaceOnChanges": true
        },
        "organizationName": {
          "type": "string",
          "description": "The organization's name.",
          "willReplaceOnChanges": true
        },
        "teamName": {
          "type": "string",
          "description": "The team name.",
          "willReplaceOnChanges": true
        }
      },
      "requiredInputs": [
        "name",
        "organizationName",
        "teamName"
      ]
    },
    "pulumiservice:index:TeamEnvironmentPermission": {
      "description": "A permission for a team to use an environment.",
      "properties": {
        "environment": {
          "type": "string",
          "description": "Environment name."
        },
        "maxOpenDuration": {
          "type": "string",
          "description": "The maximum duration for which members of this team may open the environment."
        },
        "organization": {
          "type": "string",
          "description": "Organization name."
        },
        "permission": {
          "$ref": "#/types/pulumiservice:index:EnvironmentPermission",
          "description": "Which permission level to grant to the specified team."
        },
        "project": {
          "type": "string",
          "description": "Project name.",
          "default": "default"
        },
        "team": {
          "type": "string",
          "description": "Team name."
        }
      },
      "type": "object",
      "inputProperties": {
        "environment": {
          "type": "string",
          "description": "Environment name."
        },
        "maxOpenDuration": {
          "type": "string",
          "description": "The maximum duration for which members of this team may open the environment."
        },
        "organization": {
          "type": "string",
          "description": "Organization name."
        },
        "permission": {
          "$ref": "#/types/pulumiservice:index:EnvironmentPermission",
          "description": "Which permission level to grant to the specified team."
        },
        "project": {
          "type": "string",
          "description": "Project name.",
          "default": "default"
        },
        "team": {
          "type": "string",
          "description": "Team name."
        }
      },
      "requiredInputs": [
        "environment",
        "organization",
        "permission",
        "team"
      ]
    },
    "pulumiservice:index:TeamStackPermission": {
      "description": "Grants a team permissions to the specified stack.",
      "properties": {
        "organization": {
          "type": "string",
          "description": "The organization or the personal account name of the stack."
        },
        "permission": {
          "$ref": "#/types/pulumiservice:index:TeamStackPermissionScope",
          "plain": true,
          "description": "Sets the permission level that this team will be granted to the stack."
        },
        "project": {
          "type": "string",
          "description": "The project name for this stack."
        },
        "stack": {
          "type": "string",
          "description": "The name of the stack that the team will be granted permissions to."
        },
        "team": {
          "type": "string",
          "description": "The name of the team to grant this stack permissions to. This is not the display name."
        }
      },
      "type": "object",
      "required": [
        "organization",
        "permission",
        "project",
        "stack",
        "team"
      ],
      "inputProperties": {
        "organization": {
          "type": "string",
          "description": "The organization or the personal account name of the stack.",
          "willReplaceOnChanges": true
        },
        "permission": {
          "$ref": "#/types/pulumiservice:index:TeamStackPermissionScope",
          "plain": true,
          "description": "Sets the permission level that this team will be granted to the stack.",
          "willReplaceOnChanges": true
        },
        "project": {
          "type": "string",
          "description": "The project name for this stack.",
          "willReplaceOnChanges": true
        },
        "stack": {
          "type": "string",
          "description": "The name of the stack that the team will be granted permissions to.",
          "willReplaceOnChanges": true
        },
        "team": {
          "type": "string",
          "description": "The name of the team to grant this stack permissions to. This is not the display name.",
          "willReplaceOnChanges": true
        }
      },
      "requiredInputs": [
        "organization",
        "permission",
        "project",
        "stack",
        "team"
      ]
    },
    "pulumiservice:index:TemplateSource": {
      "description": "A source for Pulumi templates",
      "properties": {
        "destination": {
          "$ref": "#/types/pulumiservice:index:TemplateSourceDestination",
          "description": "The default destination for projects using templates from this source."
        },
        "organizationName": {
          "type": "string",
          "description": "Organization name."
        },
        "sourceName": {
          "type": "string",
          "description": "Source name."
        },
        "sourceURL": {
          "type": "string",
          "description": "Github URL of the repository from which to grab templates."
        }
      },
      "type": "object",
      "required": [
        "organizationName",
        "sourceName",
        "sourceURL"
      ],
      "inputProperties": {
        "destination": {
          "$ref": "#/types/pulumiservice:index:TemplateSourceDestination",
          "description": "The default destination for projects using templates from this source."
        },
        "organizationName": {
          "type": "string",
          "description": "Organization name."
        },
        "sourceName": {
          "type": "string",
          "description": "Source name."
        },
        "sourceURL": {
          "type": "string",
          "description": "Github URL of the repository from which to grab templates."
        }
      },
      "requiredInputs": [
        "organizationName",
        "sourceName",
        "sourceURL"
      ]
    },
    "pulumiservice:index:TtlSchedule": {
      "description": "A scheduled stack destroy run.",
      "properties": {
        "deleteAfterDestroy": {
          "type": "boolean",
          "description": "True if the stack and all associated history and settings should be deleted.",
          "default": false
        },
        "organization": {
          "type": "string",
          "description": "Organization name."
        },
        "project": {
          "type": "string",
          "description": "Project name."
        },
        "scheduleId": {
          "type": "string",
          "description": "Schedule ID of the created schedule, assigned by Pulumi Cloud."
        },
        "stack": {
          "type": "string",
          "description": "Stack name."
        },
        "timestamp": {
          "type": "string",
          "description": "The time at which the schedule should run, in ISO 8601 format. Eg: 2020-01-01T00:00:00Z.",
          "willReplaceOnChanges": true
        }
      },
      "type": "object",
      "required": [
        "organization",
        "project",
        "scheduleId",
        "stack",
        "timestamp"
      ],
      "inputProperties": {
        "deleteAfterDestroy": {
          "type": "boolean",
          "description": "True if the stack and all associated history and settings should be deleted.",
          "default": false
        },
        "organization": {
          "type": "string",
          "description": "Organization name.",
          "willReplaceOnChanges": true
        },
        "project": {
          "type": "string",
          "description": "Project name.",
          "willReplaceOnChanges": true
        },
        "stack": {
          "type": "string",
          "description": "Stack name.",
          "willReplaceOnChanges": true
        },
        "timestamp": {
          "type": "string",
          "description": "The time at which the schedule should run, in ISO 8601 format. Eg: 2020-01-01T00:00:00Z.",
          "willReplaceOnChanges": true
        }
      },
      "requiredInputs": [
        "organization",
        "project",
        "stack",
        "timestamp"
      ]
    },
    "pulumiservice:index:Webhook": {
      "description": "Pulumi Webhooks allow you to notify external services of events happening within your Pulumi organization or stack. For example, you can trigger a notification whenever a stack is updated. Whenever an event occurs, Pulumi will send an HTTP POST request to all registered webhooks. The webhook can then be used to emit some notification, start running integration tests, or even update additional stacks.\n\n### Import\n\nPulumi webhooks can be imported using the `id`, which for webhooks is `{org}/{project}/{stack}/{webhook-name}` e.g.,\n\n```sh\n $ pulumi import pulumiservice:index:Webhook my_webhook my-org/my-project/my-stack/4b0d0671\n```\n\n",
      "properties": {
        "active": {
          "type": "boolean",
          "description": "Indicates whether this webhook is enabled or not."
        },
        "displayName": {
          "type": "string",
          "description": "The friendly name displayed in the Pulumi Cloud."
        },
        "environmentName": {
          "type": "string",
          "description": "Name of the environment. Only specified if this is an environment webhook."
        },
        "filters": {
          "type": "array",
          "items": {
            "$ref": "#/types/pulumiservice:index:WebhookFilters"
          },
          "description": "Optional set of filters to apply to the webhook. See [webhook docs](https://www.pulumi.com/docs/intro/pulumi-service/webhooks/#filters) for more information."
        },
        "format": {
          "$ref": "#/types/pulumiservice:index:WebhookFormat",
          "description": "Format of the webhook payload. Can be either `raw`, `slack`, `ms_teams` or `pulumi_deployments`. Defaults to `raw`."
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/types/pulumiservice:index:WebhookGroup"
          },
          "description": "Optional set of filter groups to apply to the webhook. See [webhook docs](https://www.pulumi.com/docs/intro/pulumi-service/webhooks/#groups) for more information."
        },
        "name": {
          "type": "string",
          "description": "Webhook identifier generated by Pulumi Cloud."
        },
        "organizationName": {
          "type": "string",
          "description": "Name of the organization."
        },
        "payloadUrl": {
          "type": "string",
          "description": "URL to send request to."
        },
        "projectName": {
          "type": "string",
          "description": "Name of the project. Only specified if this is a stack or environment webhook."
        },
        "secret": {
          "type": "string",
          "description": "Optional. secret used as the HMAC key. See [webhook docs](https://www.pulumi.com/docs/intro/pulumi-service/webhooks/#headers) for more information.",
          "secret": true
        },
        "stackName": {
          "type": "string",
          "description": "Name of the stack. Only specified if this is a stack webhook."
        }
      },
      "type": "object",
      "required": [
        "active",
        "displayName",
        "format",
        "name",
        "organizationName",
        "payloadUrl"
      ],
      "inputProperties": {
        "active": {
          "type": "boolean",
          "description": "Indicates whether this webhook is enabled or not."
        },
        "displayName": {
          "type": "string",
          "description": "The friendly name displayed in the Pulumi Cloud."
        },
        "environmentName": {
          "type": "string",
          "description": "Name of the environment. Only specified if this is an environment webhook."
        },
        "filters": {
          "type": "array",
          "items": {
            "$ref": "#/types/pulumiservice:index:WebhookFilters"
          },
          "description": "Optional set of filters to apply to the webhook. See [webhook docs](https://www.pulumi.com/docs/intro/pulumi-service/webhooks/#filters) for more information."
        },
        "format": {
          "$ref": "#/types/pulumiservice:index:WebhookFormat",
          "description": "Format of the webhook payload. Can be either `raw` or `slack`. Defaults to `raw`.",
          "default": "raw"
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/types/pulumiservice:index:WebhookGroup"
          },
          "description": "Optional set of filter groups to apply to the webhook. See [webhook docs](https://www.pulumi.com/docs/intro/pulumi-service/webhooks/#groups) for more information."
        },
        "organizationName": {
          "type": "string",
          "description": "Name of the organization.",
          "willReplaceOnChanges": true
        },
        "payloadUrl": {
          "type": "string",
          "description": "URL to send request to."
        },
        "projectName": {
          "type": "string",
          "description": "Name of the project. Only specified if this is a stack or environment webhook."
        },
        "secret": {
          "type": "string",
          "description": "Optional. secret used as the HMAC key. See [webhook docs](https://www.pulumi.com/docs/intro/pulumi-service/webhooks/#headers) for more information.",
          "secret": true
        },
        "stackName": {
          "type": "string",
          "description": "Name of the stack. Only needed if this is a stack webhook."
        }
      },
      "requiredInputs": [
        "active",
        "displayName",
        "organizationName",
        "payloadUrl"
      ]
    }
  },
  "functions": {
    "pulumiservice:index:getPolicyPack": {
      "description": "Get details about a specific version of a policy pack.",
      "inputs": {
        "properties": {
          "organizationName": {
            "type": "string",
            "description": "The name of the Pulumi organization."
          },
          "policyPackName": {
            "type": "string",
            "description": "The name of the policy pack."
          },
          "version": {
            "type": "integer",
            "description": "The version number of the policy pack. If not specified, returns the latest version."
          }
        },
        "type": "object",
        "required": [
          "organizationName",
          "policyPackName"
        ]
      },
      "outputs": {
        "properties": {
          "config": {
            "additionalProperties": {
              "$ref": "pulumi.json#/Any"
            },
            "description": "Configuration for the policy pack.",
            "type": "object"
          },
          "displayName": {
            "description": "The display name of the policy pack.",
            "type": "string"
          },
          "name": {
            "description": "The name of the policy pack.",
            "type": "string"
          },
          "policies": {
            "description": "List of policies in this pack.",
            "items": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            },
            "type": "array"
          },
          "version": {
            "description": "The version number.",
            "type": "integer"
          },
          "versionTag": {
            "description": "The version tag (if any).",
            "type": "string"
          }
        },
        "required": [
          "displayName",
          "name",
          "version"
        ],
        "type": "object"
      }
    },
    "pulumiservice:index:getPolicyPacks": {
      "description": "Get a list of all policy packs for an organization.",
      "inputs": {
        "properties": {
          "organizationName": {
            "type": "string",
            "description": "The name of the Pulumi organization."
          }
        },
        "type": "object",
        "required": [
          "organizationName"
        ]
      },
      "outputs": {
        "properties": {
          "policyPacks": {
            "description": "List of policy packs in the organization.",
            "items": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "required": [
          "policyPacks"
        ],
        "type": "object"
      }
    }
  }
}
